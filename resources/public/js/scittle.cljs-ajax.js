SHADOW_ENV.evalLoad("ajax.protocols.js", true , "goog.provide(\x27ajax.protocols\x27);\n\n/**\n * An abstraction for a javascript class that implements\n * Ajax calls.\n * @interface\n */\najax.protocols.AjaxImpl \x3d function(){};\n\nvar ajax$protocols$AjaxImpl$_js_ajax_request$dyn_50167 \x3d (function (this$,request,handler){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._js_ajax_request[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(this$,request,handler) : m__5394__auto__.call(null,this$,request,handler));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._js_ajax_request[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(this$,request,handler) : m__5392__auto__.call(null,this$,request,handler));\n} else {\nthrow cljs.core.missing_protocol(\x22AjaxImpl.-js-ajax-request\x22,this$);\n}\n}\n});\n/**\n * Makes an actual ajax request.  All parameters except opts\n *   are in JS format.  Should return an AjaxRequest.\n */\najax.protocols._js_ajax_request \x3d (function ajax$protocols$_js_ajax_request(this$,request,handler){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$AjaxImpl$_js_ajax_request$arity$3 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$AjaxImpl$_js_ajax_request$arity$3(this$,request,handler);\n} else {\nreturn ajax$protocols$AjaxImpl$_js_ajax_request$dyn_50167(this$,request,handler);\n}\n});\n\n\n/**\n * An abstraction for a running ajax request.\n * @interface\n */\najax.protocols.AjaxRequest \x3d function(){};\n\nvar ajax$protocols$AjaxRequest$_abort$dyn_50171 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._abort[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._abort[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22AjaxRequest.-abort\x22,this$);\n}\n}\n});\n/**\n * Aborts a running ajax request, if possible.\n */\najax.protocols._abort \x3d (function ajax$protocols$_abort(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$AjaxRequest$_abort$arity$1 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$AjaxRequest$_abort$arity$1(this$);\n} else {\nreturn ajax$protocols$AjaxRequest$_abort$dyn_50171(this$);\n}\n});\n\n\n/**\n * An abstraction for an ajax response.\n * @interface\n */\najax.protocols.AjaxResponse \x3d function(){};\n\nvar ajax$protocols$AjaxResponse$_status$dyn_50172 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._status[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._status[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22AjaxResponse.-status\x22,this$);\n}\n}\n});\n/**\n * Returns the HTTP Status of the response as an integer.\n */\najax.protocols._status \x3d (function ajax$protocols$_status(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$AjaxResponse$_status$arity$1 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$AjaxResponse$_status$arity$1(this$);\n} else {\nreturn ajax$protocols$AjaxResponse$_status$dyn_50172(this$);\n}\n});\n\nvar ajax$protocols$AjaxResponse$_status_text$dyn_50174 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._status_text[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._status_text[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22AjaxResponse.-status-text\x22,this$);\n}\n}\n});\n/**\n * Returns the HTTP Status Text of the response as a string.\n */\najax.protocols._status_text \x3d (function ajax$protocols$_status_text(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$AjaxResponse$_status_text$arity$1 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$AjaxResponse$_status_text$arity$1(this$);\n} else {\nreturn ajax$protocols$AjaxResponse$_status_text$dyn_50174(this$);\n}\n});\n\nvar ajax$protocols$AjaxResponse$_get_all_headers$dyn_50176 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._get_all_headers[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._get_all_headers[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22AjaxResponse.-get-all-headers\x22,this$);\n}\n}\n});\n/**\n * Returns all headers as a map.\n */\najax.protocols._get_all_headers \x3d (function ajax$protocols$_get_all_headers(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$AjaxResponse$_get_all_headers$arity$1 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$AjaxResponse$_get_all_headers$arity$1(this$);\n} else {\nreturn ajax$protocols$AjaxResponse$_get_all_headers$dyn_50176(this$);\n}\n});\n\nvar ajax$protocols$AjaxResponse$_body$dyn_50177 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._body[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._body[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22AjaxResponse.-body\x22,this$);\n}\n}\n});\n/**\n * Returns the response body as a string or as type specified in response-format such as a blob or arraybuffer.\n */\najax.protocols._body \x3d (function ajax$protocols$_body(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$AjaxResponse$_body$arity$1 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$AjaxResponse$_body$arity$1(this$);\n} else {\nreturn ajax$protocols$AjaxResponse$_body$dyn_50177(this$);\n}\n});\n\nvar ajax$protocols$AjaxResponse$_get_response_header$dyn_50178 \x3d (function (this$,header){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._get_response_header[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,header) : m__5394__auto__.call(null,this$,header));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._get_response_header[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,header) : m__5392__auto__.call(null,this$,header));\n} else {\nthrow cljs.core.missing_protocol(\x22AjaxResponse.-get-response-header\x22,this$);\n}\n}\n});\n/**\n * Gets the specified response header (specified by a string) as a string.\n */\najax.protocols._get_response_header \x3d (function ajax$protocols$_get_response_header(this$,header){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$AjaxResponse$_get_response_header$arity$2 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$AjaxResponse$_get_response_header$arity$2(this$,header);\n} else {\nreturn ajax$protocols$AjaxResponse$_get_response_header$dyn_50178(this$,header);\n}\n});\n\nvar ajax$protocols$AjaxResponse$_was_aborted$dyn_50179 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._was_aborted[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._was_aborted[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22AjaxResponse.-was-aborted\x22,this$);\n}\n}\n});\n/**\n * Was the response aborted.\n */\najax.protocols._was_aborted \x3d (function ajax$protocols$_was_aborted(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$AjaxResponse$_was_aborted$arity$1 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$AjaxResponse$_was_aborted$arity$1(this$);\n} else {\nreturn ajax$protocols$AjaxResponse$_was_aborted$dyn_50179(this$);\n}\n});\n\n\n/**\n * An abstraction for something that processes requests and responses.\n * @interface\n */\najax.protocols.Interceptor \x3d function(){};\n\nvar ajax$protocols$Interceptor$_process_request$dyn_50180 \x3d (function (this$,request){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._process_request[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,request) : m__5394__auto__.call(null,this$,request));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._process_request[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,request) : m__5392__auto__.call(null,this$,request));\n} else {\nthrow cljs.core.missing_protocol(\x22Interceptor.-process-request\x22,this$);\n}\n}\n});\n/**\n * Transforms the opts\n */\najax.protocols._process_request \x3d (function ajax$protocols$_process_request(this$,request){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$Interceptor$_process_request$arity$2 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$Interceptor$_process_request$arity$2(this$,request);\n} else {\nreturn ajax$protocols$Interceptor$_process_request$dyn_50180(this$,request);\n}\n});\n\nvar ajax$protocols$Interceptor$_process_response$dyn_50181 \x3d (function (this$,response){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (ajax.protocols._process_response[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,response) : m__5394__auto__.call(null,this$,response));\n} else {\nvar m__5392__auto__ \x3d (ajax.protocols._process_response[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,response) : m__5392__auto__.call(null,this$,response));\n} else {\nthrow cljs.core.missing_protocol(\x22Interceptor.-process-response\x22,this$);\n}\n}\n});\n/**\n * Transforms the raw response (an implementation of AjaxResponse)\n */\najax.protocols._process_response \x3d (function ajax$protocols$_process_response(this$,response){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.ajax$protocols$Interceptor$_process_response$arity$2 \x3d\x3d null)))))){\nreturn this$.ajax$protocols$Interceptor$_process_response$arity$2(this$,response);\n} else {\nreturn ajax$protocols$Interceptor$_process_response$dyn_50181(this$,response);\n}\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {ajax.protocols.AjaxResponse}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\najax.protocols.Response \x3d (function (status,body,status_text,headers,was_aborted,__meta,__extmap,__hash){\nthis.status \x3d status;\nthis.body \x3d body;\nthis.status_text \x3d status_text;\nthis.headers \x3d headers;\nthis.was_aborted \x3d was_aborted;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(ajax.protocols.Response.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k50093,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__50102 \x3d k50093;\nvar G__50102__$1 \x3d (((G__50102 instanceof cljs.core.Keyword))?G__50102.fqn:null);\nswitch (G__50102__$1) {\ncase \x22status\x22:\nreturn self__.status;\n\nbreak;\ncase \x22body\x22:\nreturn self__.body;\n\nbreak;\ncase \x22status-text\x22:\nreturn self__.status_text;\n\nbreak;\ncase \x22headers\x22:\nreturn self__.headers;\n\nbreak;\ncase \x22was-aborted\x22:\nreturn self__.was_aborted;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k50093,else__5346__auto__);\n\n}\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__50105){\nvar vec__50106 \x3d p__50105;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50106,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50106,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#ajax.protocols.Response{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),self__.status],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),self__.body],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),self__.status_text],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),self__.headers],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828),self__.was_aborted],null))], null),self__.__extmap));\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__50092){\nvar self__ \x3d this;\nvar G__50092__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__50092__$1,5,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new ajax.protocols.Response(self__.status,self__.body,self__.status_text,self__.headers,self__.was_aborted,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (5 + cljs.core.count(self__.__extmap));\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-473222333 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this50094,other50095){\nvar self__ \x3d this;\nvar this50094__$1 \x3d this;\nreturn (((!((other50095 \x3d\x3d null)))) \x26\x26 ((((this50094__$1.constructor \x3d\x3d\x3d other50095.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50094__$1.status,other50095.status)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50094__$1.body,other50095.body)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50094__$1.status_text,other50095.status_text)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50094__$1.headers,other50095.headers)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50094__$1.was_aborted,other50095.was_aborted)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50094__$1.__extmap,other50095.__extmap)))))))))))))));\n}));\n\n(ajax.protocols.Response.prototype.ajax$protocols$AjaxResponse$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.protocols.Response.prototype.ajax$protocols$AjaxResponse$_body$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669).cljs$core$IFn$_invoke$arity$1(this$__$1);\n}));\n\n(ajax.protocols.Response.prototype.ajax$protocols$AjaxResponse$_status$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413).cljs$core$IFn$_invoke$arity$1(this$__$1);\n}));\n\n(ajax.protocols.Response.prototype.ajax$protocols$AjaxResponse$_status_text$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478).cljs$core$IFn$_invoke$arity$1(this$__$1);\n}));\n\n(ajax.protocols.Response.prototype.ajax$protocols$AjaxResponse$_get_all_headers$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129).cljs$core$IFn$_invoke$arity$1(this$__$1);\n}));\n\n(ajax.protocols.Response.prototype.ajax$protocols$AjaxResponse$_get_response_header$arity$2 \x3d (function (this$,header){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129).cljs$core$IFn$_invoke$arity$1(this$__$1),header);\n}));\n\n(ajax.protocols.Response.prototype.ajax$protocols$AjaxResponse$_was_aborted$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828).cljs$core$IFn$_invoke$arity$1(this$__$1);\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828),null,new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),null,new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),null,new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),null,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new ajax.protocols.Response(self__.status,self__.body,self__.status_text,self__.headers,self__.was_aborted,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k50093){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__50127 \x3d k50093;\nvar G__50127__$1 \x3d (((G__50127 instanceof cljs.core.Keyword))?G__50127.fqn:null);\nswitch (G__50127__$1) {\ncase \x22status\x22:\ncase \x22body\x22:\ncase \x22status-text\x22:\ncase \x22headers\x22:\ncase \x22was-aborted\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k50093);\n\n}\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__50092){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__50143 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__50144 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__50143.cljs$core$IFn$_invoke$arity$2 ? pred__50143.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),expr__50144) : pred__50143.call(null,new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),expr__50144)))){\nreturn (new ajax.protocols.Response(G__50092,self__.body,self__.status_text,self__.headers,self__.was_aborted,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__50143.cljs$core$IFn$_invoke$arity$2 ? pred__50143.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),expr__50144) : pred__50143.call(null,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),expr__50144)))){\nreturn (new ajax.protocols.Response(self__.status,G__50092,self__.status_text,self__.headers,self__.was_aborted,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__50143.cljs$core$IFn$_invoke$arity$2 ? pred__50143.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),expr__50144) : pred__50143.call(null,new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),expr__50144)))){\nreturn (new ajax.protocols.Response(self__.status,self__.body,G__50092,self__.headers,self__.was_aborted,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__50143.cljs$core$IFn$_invoke$arity$2 ? pred__50143.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),expr__50144) : pred__50143.call(null,new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),expr__50144)))){\nreturn (new ajax.protocols.Response(self__.status,self__.body,self__.status_text,G__50092,self__.was_aborted,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__50143.cljs$core$IFn$_invoke$arity$2 ? pred__50143.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828),expr__50144) : pred__50143.call(null,new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828),expr__50144)))){\nreturn (new ajax.protocols.Response(self__.status,self__.body,self__.status_text,self__.headers,G__50092,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new ajax.protocols.Response(self__.status,self__.body,self__.status_text,self__.headers,self__.was_aborted,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__50092),null));\n}\n}\n}\n}\n}\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),self__.status,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),self__.body,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),self__.status_text,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),self__.headers,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828),self__.was_aborted,null))], null),self__.__extmap));\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__50092){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new ajax.protocols.Response(self__.status,self__.body,self__.status_text,self__.headers,self__.was_aborted,G__50092,self__.__extmap,self__.__hash));\n}));\n\n(ajax.protocols.Response.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(ajax.protocols.Response.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22status\x22,\x22status\x22,-357266886,null),new cljs.core.Symbol(null,\x22body\x22,\x22body\x22,-408674142,null),new cljs.core.Symbol(null,\x22status-text\x22,\x22status-text\x22,-193703951,null),new cljs.core.Symbol(null,\x22headers\x22,\x22headers\x22,805501398,null),new cljs.core.Symbol(null,\x22was-aborted\x22,\x22was-aborted\x22,-479553301,null)], null);\n}));\n\n(ajax.protocols.Response.cljs$lang$type \x3d true);\n\n(ajax.protocols.Response.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22ajax.protocols/Response\x22,null,(1),null));\n}));\n\n(ajax.protocols.Response.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22ajax.protocols/Response\x22);\n}));\n\n/**\n * Positional factory function for ajax.protocols/Response.\n */\najax.protocols.__GT_Response \x3d (function ajax$protocols$__GT_Response(status,body,status_text,headers,was_aborted){\nreturn (new ajax.protocols.Response(status,body,status_text,headers,was_aborted,null,null,null));\n});\n\n/**\n * Factory function for ajax.protocols/Response, taking a map of keywords to field values.\n */\najax.protocols.map__GT_Response \x3d (function ajax$protocols$map__GT_Response(G__50098){\nvar extmap__5385__auto__ \x3d (function (){var G__50160 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__50098,new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828)], 0));\nif(cljs.core.record_QMARK_(G__50098)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__50160);\n} else {\nreturn G__50160;\n}\n})();\nreturn (new ajax.protocols.Response(new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413).cljs$core$IFn$_invoke$arity$1(G__50098),new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669).cljs$core$IFn$_invoke$arity$1(G__50098),new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478).cljs$core$IFn$_invoke$arity$1(G__50098),new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129).cljs$core$IFn$_invoke$arity$1(G__50098),new cljs.core.Keyword(null,\x22was-aborted\x22,\x22was-aborted\x22,-2120084828).cljs$core$IFn$_invoke$arity$1(G__50098),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n");
SHADOW_ENV.evalLoad("ajax.util.js", true , "goog.provide(\x27ajax.util\x27);\n/**\n * Throws an error.\n */\najax.util.throw_error \x3d (function ajax$util$throw_error(args){\nthrow (new Error(cljs.core.str.cljs$core$IFn$_invoke$arity$1(args)));\n});\najax.util.get_content_type \x3d (function ajax$util$get_content_type(response){\nvar or__5045__auto__ \x3d ajax.protocols._get_response_header(response,\x22Content-Type\x22);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22\x22;\n}\n});\n/**\n * Takes a function that converts to a string and transforms it\n * into a function that converts to an object that will write\n * UTF-8 to the wire. Note that this is the identity function\n * for JavaScript because the underlying implementations take\n * a string.\n */\najax.util.to_utf8_writer \x3d (function ajax$util$to_utf8_writer(to_str){\nreturn to_str;\n});\n/**\n * A set of successful response types derived from `goog.net.HttpStatus.isSuccess`.\n */\najax.util.successful_response_codes_set \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [(206),null,(204),null,(304),null,(1223),null,(201),null,(202),null,(200),null], null), null);\n/**\n * Indicates whether an HTTP status code is considered successful.\n */\najax.util.success_QMARK_ \x3d (function ajax$util$success_QMARK_(status){\nreturn cljs.core.contains_QMARK_(ajax.util.successful_response_codes_set,status);\n});\n");
SHADOW_ENV.evalLoad("ajax.url.js", true , "goog.provide(\x27ajax.url\x27);\najax.url.key_encode \x3d (function ajax$url$key_encode(key){\nif(cljs.core.qualified_keyword_QMARK_(key)){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22/\x22,cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace,cljs.core.name)(key));\n} else {\nif((key instanceof cljs.core.Keyword)){\nreturn cljs.core.name(key);\n} else {\nreturn key;\n\n}\n}\n});\najax.url.value_encode \x3d encodeURIComponent;\najax.url.key_value_pair_to_str \x3d (function ajax$url$key_value_pair_to_str(p__50204){\nvar vec__50205 \x3d p__50204;\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50205,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50205,(1),null);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ajax.url.key_encode(k)),\x22\x3d\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((ajax.url.value_encode.cljs$core$IFn$_invoke$arity$1 ? ajax.url.value_encode.cljs$core$IFn$_invoke$arity$1(v) : ajax.url.value_encode.call(null,v)))].join(\x27\x27);\n});\najax.url.vec_key_transform_fn \x3d (function ajax$url$vec_key_transform_fn(vec_key_encode,k,v){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(vec_key_encode.cljs$core$IFn$_invoke$arity$1 ? vec_key_encode.cljs$core$IFn$_invoke$arity$1(k) : vec_key_encode.call(null,k)),v], null);\n});\najax.url.to_vec_key_transform \x3d (function ajax$url$to_vec_key_transform(vec_strategy){\nvar vec_key_encode \x3d (function (){var G__50212 \x3d (function (){var or__5045__auto__ \x3d vec_strategy;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22java\x22,\x22java\x22,1958249105);\n}\n})();\nvar G__50212__$1 \x3d (((G__50212 instanceof cljs.core.Keyword))?G__50212.fqn:null);\nswitch (G__50212__$1) {\ncase \x22java\x22:\nreturn (function (k){\nreturn null;\n});\n\nbreak;\ncase \x22rails\x22:\nreturn (function (k){\nreturn \x22\x22;\n});\n\nbreak;\ncase \x22indexed\x22:\nreturn cljs.core.identity;\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__50212__$1)].join(\x27\x27)));\n\n}\n})();\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2(ajax.url.vec_key_transform_fn,vec_key_encode);\n});\n/**\n * Takes a parameter and turns it into a sequence of key-value pairs suitable\n *   for passing to `key-value-pair-to-str`. Since we can have nested maps and\n *   vectors, we need a vec-key-transform function and the current query key\n *   prefix as well as the key and value to be analysed. Ultimately, this \n *   function walks the structure and flattens it.\n */\najax.url.param_to_key_value_pairs \x3d (function ajax$url$param_to_key_value_pairs(vec_key_transform,prefix,p__50217){\nvar vec__50218 \x3d p__50217;\nvar key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50218,(0),null);\nvar value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50218,(1),null);\nvar k1 \x3d ajax.url.key_encode(key);\nvar new_key \x3d (cljs.core.truth_(prefix)?(cljs.core.truth_(key)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\x22[\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(k1),\x22]\x22].join(\x27\x27):prefix):k1);\nvar recurse \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$3(ajax.url.param_to_key_value_pairs,vec_key_transform,new_key);\nif(typeof value \x3d\x3d\x3d \x27string\x27){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_key,value], null)], null);\n} else {\nif(cljs.core.qualified_keyword_QMARK_(value)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_key,clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22/\x22,cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace,cljs.core.name)(value))], null)], null);\n} else {\nif((value instanceof cljs.core.Keyword)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_key,cljs.core.name(value)], null)], null);\n} else {\nif(cljs.core.map_QMARK_(value)){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(recurse,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.seq(value)], 0));\n} else {\nif(((cljs.core.sequential_QMARK_(value)) || (cljs.core.set_QMARK_(value)))){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(recurse,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(vec_key_transform,cljs.core.seq(value))], 0));\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new_key,value], null)], null);\n\n}\n}\n}\n}\n}\n});\n/**\n * vec-strategy is one of :rails (a[]\x3d3\x26a[]\x3d4)\n *                         :java (a\x3d3\x26a\x3d4) (this is the correct behaviour and the default)\n *                         :indexed (a[3]\x3d1\x26a[4]\x3d1)\n *   params is an arbitrary clojure map\n */\najax.url.params_to_str \x3d (function ajax$url$params_to_str(vec_strategy,params){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22\x26\x22,cljs.core.map.cljs$core$IFn$_invoke$arity$2(ajax.url.key_value_pair_to_str,ajax.url.param_to_key_value_pairs(ajax.url.to_vec_key_transform(vec_strategy),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,params], null))));\n});\n/**\n * The request format for simple POST and GET.\n */\najax.url.url_request_format \x3d (function ajax$url$url_request_format(var_args){\nvar G__50241 \x3d arguments.length;\nswitch (G__50241) {\ncase 0:\nreturn ajax.url.url_request_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn ajax.url.url_request_format.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(ajax.url.url_request_format.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn ajax.url.url_request_format.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(ajax.url.url_request_format.cljs$core$IFn$_invoke$arity$1 \x3d (function (p__50253){\nvar map__50254 \x3d p__50253;\nvar map__50254__$1 \x3d cljs.core.__destructure_map(map__50254);\nvar vec_strategy \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50254__$1,new cljs.core.Keyword(null,\x22vec-strategy\x22,\x22vec-strategy\x22,1843221372));\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22write\x22,\x22write\x22,-1857649168),ajax.util.to_utf8_writer(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(ajax.url.params_to_str,vec_strategy)),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),\x22application/x-www-form-urlencoded; charset\x3dutf-8\x22], null);\n}));\n\n(ajax.url.url_request_format.cljs$lang$maxFixedArity \x3d 1);\n\n");
SHADOW_ENV.evalLoad("ajax.interceptors.js", true , "goog.provide(\x27ajax.interceptors\x27);\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {ajax.protocols.Interceptor}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\najax.interceptors.StandardInterceptor \x3d (function (name,request,response,__meta,__extmap,__hash){\nthis.name \x3d name;\nthis.request \x3d request;\nthis.response \x3d response;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k50336,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__50340 \x3d k50336;\nvar G__50340__$1 \x3d (((G__50340 instanceof cljs.core.Keyword))?G__50340.fqn:null);\nswitch (G__50340__$1) {\ncase \x22name\x22:\nreturn self__.name;\n\nbreak;\ncase \x22request\x22:\nreturn self__.request;\n\nbreak;\ncase \x22response\x22:\nreturn self__.response;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k50336,else__5346__auto__);\n\n}\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__50341){\nvar vec__50342 \x3d p__50341;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50342,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50342,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.ajax$protocols$Interceptor$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.interceptors.StandardInterceptor.prototype.ajax$protocols$Interceptor$_process_request$arity$2 \x3d (function (p__50347,opts){\nvar self__ \x3d this;\nvar map__50348 \x3d p__50347;\nvar map__50348__$1 \x3d cljs.core.__destructure_map(map__50348);\nvar request__$1 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50348__$1,new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723));\nvar map__50349 \x3d this;\nvar map__50349__$1 \x3d cljs.core.__destructure_map(map__50349);\nvar request__$2 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50349__$1,new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723));\nreturn (request__$2.cljs$core$IFn$_invoke$arity$1 ? request__$2.cljs$core$IFn$_invoke$arity$1(opts) : request__$2.call(null,opts));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.ajax$protocols$Interceptor$_process_response$arity$2 \x3d (function (p__50351,xhrio){\nvar self__ \x3d this;\nvar map__50353 \x3d p__50351;\nvar map__50353__$1 \x3d cljs.core.__destructure_map(map__50353);\nvar response__$1 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50353__$1,new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192));\nvar map__50354 \x3d this;\nvar map__50354__$1 \x3d cljs.core.__destructure_map(map__50354);\nvar response__$2 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50354__$1,new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192));\nreturn (response__$2.cljs$core$IFn$_invoke$arity$1 ? response__$2.cljs$core$IFn$_invoke$arity$1(xhrio) : response__$2.call(null,xhrio));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#ajax.interceptors.StandardInterceptor{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),self__.name],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723),self__.request],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192),self__.response],null))], null),self__.__extmap));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__50335){\nvar self__ \x3d this;\nvar G__50335__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__50335__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723),new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new ajax.interceptors.StandardInterceptor(self__.name,self__.request,self__.response,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (1482887116 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this50337,other50338){\nvar self__ \x3d this;\nvar this50337__$1 \x3d this;\nreturn (((!((other50338 \x3d\x3d null)))) \x26\x26 ((((this50337__$1.constructor \x3d\x3d\x3d other50338.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50337__$1.name,other50338.name)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50337__$1.request,other50338.request)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50337__$1.response,other50338.response)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50337__$1.__extmap,other50338.__extmap)))))))))));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192),null,new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723),null,new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new ajax.interceptors.StandardInterceptor(self__.name,self__.request,self__.response,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k50336){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__50359 \x3d k50336;\nvar G__50359__$1 \x3d (((G__50359 instanceof cljs.core.Keyword))?G__50359.fqn:null);\nswitch (G__50359__$1) {\ncase \x22name\x22:\ncase \x22request\x22:\ncase \x22response\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k50336);\n\n}\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__50335){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__50360 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__50361 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__50360.cljs$core$IFn$_invoke$arity$2 ? pred__50360.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),expr__50361) : pred__50360.call(null,new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),expr__50361)))){\nreturn (new ajax.interceptors.StandardInterceptor(G__50335,self__.request,self__.response,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__50360.cljs$core$IFn$_invoke$arity$2 ? pred__50360.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723),expr__50361) : pred__50360.call(null,new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723),expr__50361)))){\nreturn (new ajax.interceptors.StandardInterceptor(self__.name,G__50335,self__.response,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__50360.cljs$core$IFn$_invoke$arity$2 ? pred__50360.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192),expr__50361) : pred__50360.call(null,new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192),expr__50361)))){\nreturn (new ajax.interceptors.StandardInterceptor(self__.name,self__.request,G__50335,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new ajax.interceptors.StandardInterceptor(self__.name,self__.request,self__.response,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__50335),null));\n}\n}\n}\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),self__.name,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723),self__.request,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192),self__.response,null))], null),self__.__extmap));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__50335){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new ajax.interceptors.StandardInterceptor(self__.name,self__.request,self__.response,G__50335,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.StandardInterceptor.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(ajax.interceptors.StandardInterceptor.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null),new cljs.core.Symbol(null,\x22request\x22,\x22request\x22,-881481046,null),new cljs.core.Symbol(null,\x22response\x22,\x22response\x22,572107335,null)], null);\n}));\n\n(ajax.interceptors.StandardInterceptor.cljs$lang$type \x3d true);\n\n(ajax.interceptors.StandardInterceptor.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22ajax.interceptors/StandardInterceptor\x22,null,(1),null));\n}));\n\n(ajax.interceptors.StandardInterceptor.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22ajax.interceptors/StandardInterceptor\x22);\n}));\n\n/**\n * Positional factory function for ajax.interceptors/StandardInterceptor.\n */\najax.interceptors.__GT_StandardInterceptor \x3d (function ajax$interceptors$__GT_StandardInterceptor(name,request,response){\nreturn (new ajax.interceptors.StandardInterceptor(name,request,response,null,null,null));\n});\n\n/**\n * Factory function for ajax.interceptors/StandardInterceptor, taking a map of keywords to field values.\n */\najax.interceptors.map__GT_StandardInterceptor \x3d (function ajax$interceptors$map__GT_StandardInterceptor(G__50339){\nvar extmap__5385__auto__ \x3d (function (){var G__50367 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__50339,new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723),new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192)], 0));\nif(cljs.core.record_QMARK_(G__50339)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__50367);\n} else {\nreturn G__50367;\n}\n})();\nreturn (new ajax.interceptors.StandardInterceptor(new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177).cljs$core$IFn$_invoke$arity$1(G__50339),new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723).cljs$core$IFn$_invoke$arity$1(G__50339),new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192).cljs$core$IFn$_invoke$arity$1(G__50339),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n/**\n * Utility function. If you want to create your own interceptor\n * quickly, this will do the job. Note you don\x27t need to specify\n * both methods. (Or indeed either, but it won\x27t do much under\n * those circumstances.)\n */\najax.interceptors.to_interceptor \x3d (function ajax$interceptors$to_interceptor(m){\nreturn ajax.interceptors.map__GT_StandardInterceptor(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22request\x22,\x22request\x22,1772954723),cljs.core.identity,new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192),cljs.core.identity], null),m], 0)));\n});\najax.interceptors.exception_message \x3d (function ajax$interceptors$exception_message(e){\nreturn e.message;\n});\najax.interceptors.exception_response \x3d (function ajax$interceptors$exception_response(e,status,p__50370,xhrio){\nvar map__50371 \x3d p__50370;\nvar map__50371__$1 \x3d cljs.core.__destructure_map(map__50371);\nvar description \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50371__$1,new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544));\nvar response \x3d new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),status,new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192),null], null);\nvar status_text \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ajax.interceptors.exception_message(e)),\x22  Format should have been \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(description)].join(\x27\x27);\nvar parse_error \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(response,new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),status_text,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),new cljs.core.Keyword(null,\x22parse\x22,\x22parse\x22,-1162164619),new cljs.core.Keyword(null,\x22original-text\x22,\x22original-text\x22,744448452),ajax.protocols._body(xhrio)], 0));\nif(ajax.util.success_QMARK_(status)){\nreturn parse_error;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(response,new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),ajax.protocols._status_text(xhrio),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22parse-error\x22,\x22parse-error\x22,255902478),parse_error], 0));\n}\n});\najax.interceptors.fail \x3d (function ajax$interceptors$fail(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50557 \x3d arguments.length;\nvar i__5770__auto___50558 \x3d (0);\nwhile(true){\nif((i__5770__auto___50558 \x3c len__5769__auto___50557)){\nargs__5775__auto__.push((arguments[i__5770__auto___50558]));\n\nvar G__50559 \x3d (i__5770__auto___50558 + (1));\ni__5770__auto___50558 \x3d G__50559;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((3) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn ajax.interceptors.fail.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(ajax.interceptors.fail.cljs$core$IFn$_invoke$arity$variadic \x3d (function (status,status_text,failure,params){\nvar response \x3d new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),status,new cljs.core.Keyword(null,\x22status-text\x22,\x22status-text\x22,-1834235478),status_text,new cljs.core.Keyword(null,\x22failure\x22,\x22failure\x22,720415879),failure], null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,response,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.vec,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),params)))], null);\n}));\n\n(ajax.interceptors.fail.cljs$lang$maxFixedArity \x3d (3));\n\n/** @this {Function} */\n(ajax.interceptors.fail.cljs$lang$applyTo \x3d (function (seq50372){\nvar G__50373 \x3d cljs.core.first(seq50372);\nvar seq50372__$1 \x3d cljs.core.next(seq50372);\nvar G__50374 \x3d cljs.core.first(seq50372__$1);\nvar seq50372__$2 \x3d cljs.core.next(seq50372__$1);\nvar G__50375 \x3d cljs.core.first(seq50372__$2);\nvar seq50372__$3 \x3d cljs.core.next(seq50372__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50373,G__50374,G__50375,seq50372__$3);\n}));\n\najax.interceptors.content_type_to_request_header \x3d (function ajax$interceptors$content_type_to_request_header(content_type){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22, \x22,((typeof content_type \x3d\x3d\x3d \x27string\x27)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content_type], null):content_type));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {ajax.protocols.Interceptor}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\najax.interceptors.ResponseFormat \x3d (function (read,description,content_type,__meta,__extmap,__hash){\nthis.read \x3d read;\nthis.description \x3d description;\nthis.content_type \x3d content_type;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k50382,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__50388 \x3d k50382;\nvar G__50388__$1 \x3d (((G__50388 instanceof cljs.core.Keyword))?G__50388.fqn:null);\nswitch (G__50388__$1) {\ncase \x22read\x22:\nreturn self__.read;\n\nbreak;\ncase \x22description\x22:\nreturn self__.description;\n\nbreak;\ncase \x22content-type\x22:\nreturn self__.content_type;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k50382,else__5346__auto__);\n\n}\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__50389){\nvar vec__50391 \x3d p__50389;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50391,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50391,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.ajax$protocols$Interceptor$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.interceptors.ResponseFormat.prototype.ajax$protocols$Interceptor$_process_request$arity$2 \x3d (function (p__50394,request){\nvar self__ \x3d this;\nvar map__50395 \x3d p__50394;\nvar map__50395__$1 \x3d cljs.core.__destructure_map(map__50395);\nvar content_type__$1 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50395__$1,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634));\nvar map__50396 \x3d this;\nvar map__50396__$1 \x3d cljs.core.__destructure_map(map__50396);\nvar content_type__$2 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50396__$1,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(request,new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),(function (p1__50380_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [\x22Accept\x22,ajax.interceptors.content_type_to_request_header(content_type__$2)], null),(function (){var or__5045__auto__ \x3d p1__50380_SHARP_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})()], 0));\n}));\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.ajax$protocols$Interceptor$_process_response$arity$2 \x3d (function (p__50397,xhrio){\nvar self__ \x3d this;\nvar map__50398 \x3d p__50397;\nvar map__50398__$1 \x3d cljs.core.__destructure_map(map__50398);\nvar format \x3d map__50398__$1;\nvar read__$1 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50398__$1,new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661));\nvar map__50399 \x3d this;\nvar map__50399__$1 \x3d cljs.core.__destructure_map(map__50399);\nvar format__$1 \x3d map__50399__$1;\nvar read__$2 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50399__$1,new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661));\ntry{var status \x3d ajax.protocols._status(xhrio);\nvar fail \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$2(ajax.interceptors.fail,status);\nvar G__50401 \x3d status;\nswitch (G__50401) {\ncase (0):\nif((xhrio instanceof ajax.protocols.Response)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,xhrio], null);\n} else {\nreturn fail(\x22Request failed.\x22,new cljs.core.Keyword(null,\x22failed\x22,\x22failed\x22,-1397425762));\n}\n\nbreak;\ncase (-1):\nif(cljs.core.truth_(ajax.protocols._was_aborted(xhrio))){\nreturn fail(\x22Request aborted by client.\x22,new cljs.core.Keyword(null,\x22aborted\x22,\x22aborted\x22,1775972619));\n} else {\nreturn fail(\x22Request timed out.\x22,new cljs.core.Keyword(null,\x22timeout\x22,\x22timeout\x22,-318625318));\n}\n\nbreak;\ncase (204):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,null], null);\n\nbreak;\ncase (205):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,null], null);\n\nbreak;\ndefault:\ntry{var response \x3d (read__$2.cljs$core$IFn$_invoke$arity$1 ? read__$2.cljs$core$IFn$_invoke$arity$1(xhrio) : read__$2.call(null,xhrio));\nif(ajax.util.success_QMARK_(status)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,response], null);\n} else {\nreturn fail(ajax.protocols._status_text(xhrio),new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),new cljs.core.Keyword(null,\x22response\x22,\x22response\x22,-1068424192),response);\n}\n}catch (e50402){if((e50402 instanceof Object)){\nvar e \x3d e50402;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,ajax.interceptors.exception_response(e,status,format__$1,xhrio)], null);\n} else {\nthrow e50402;\n\n}\n}\n}\n}catch (e50400){if((e50400 instanceof Object)){\nvar e \x3d e50400;\nvar message \x3d e.message;\nreturn ajax.interceptors.fail.cljs$core$IFn$_invoke$arity$variadic((0),message,new cljs.core.Keyword(null,\x22exception\x22,\x22exception\x22,-335277064),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22exception\x22,\x22exception\x22,-335277064),e], 0));\n} else {\nthrow e50400;\n\n}\n}}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#ajax.interceptors.ResponseFormat{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),self__.read],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),self__.description],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),self__.content_type],null))], null),self__.__extmap));\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__50381){\nvar self__ \x3d this;\nvar G__50381__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__50381__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new ajax.interceptors.ResponseFormat(self__.read,self__.description,self__.content_type,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-2103965186 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this50383,other50384){\nvar self__ \x3d this;\nvar this50383__$1 \x3d this;\nreturn (((!((other50384 \x3d\x3d null)))) \x26\x26 ((((this50383__$1.constructor \x3d\x3d\x3d other50384.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50383__$1.read,other50384.read)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50383__$1.description,other50384.description)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50383__$1.content_type,other50384.content_type)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50383__$1.__extmap,other50384.__extmap)))))))))));\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),null,new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),null,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new ajax.interceptors.ResponseFormat(self__.read,self__.description,self__.content_type,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k50382){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__50408 \x3d k50382;\nvar G__50408__$1 \x3d (((G__50408 instanceof cljs.core.Keyword))?G__50408.fqn:null);\nswitch (G__50408__$1) {\ncase \x22read\x22:\ncase \x22description\x22:\ncase \x22content-type\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k50382);\n\n}\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__50381){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__50410 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__50411 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__50410.cljs$core$IFn$_invoke$arity$2 ? pred__50410.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),expr__50411) : pred__50410.call(null,new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),expr__50411)))){\nreturn (new ajax.interceptors.ResponseFormat(G__50381,self__.description,self__.content_type,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__50410.cljs$core$IFn$_invoke$arity$2 ? pred__50410.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),expr__50411) : pred__50410.call(null,new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),expr__50411)))){\nreturn (new ajax.interceptors.ResponseFormat(self__.read,G__50381,self__.content_type,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__50410.cljs$core$IFn$_invoke$arity$2 ? pred__50410.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),expr__50411) : pred__50410.call(null,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),expr__50411)))){\nreturn (new ajax.interceptors.ResponseFormat(self__.read,self__.description,G__50381,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new ajax.interceptors.ResponseFormat(self__.read,self__.description,self__.content_type,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__50381),null));\n}\n}\n}\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),self__.read,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),self__.description,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),self__.content_type,null))], null),self__.__extmap));\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__50381){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new ajax.interceptors.ResponseFormat(self__.read,self__.description,self__.content_type,G__50381,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.ResponseFormat.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(ajax.interceptors.ResponseFormat.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22read\x22,\x22read\x22,-1514377108,null),new cljs.core.Symbol(null,\x22description\x22,\x22description\x22,211970983,null),new cljs.core.Symbol(null,\x22content-type\x22,\x22content-type\x22,1132308893,null)], null);\n}));\n\n(ajax.interceptors.ResponseFormat.cljs$lang$type \x3d true);\n\n(ajax.interceptors.ResponseFormat.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22ajax.interceptors/ResponseFormat\x22,null,(1),null));\n}));\n\n(ajax.interceptors.ResponseFormat.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22ajax.interceptors/ResponseFormat\x22);\n}));\n\n/**\n * Positional factory function for ajax.interceptors/ResponseFormat.\n */\najax.interceptors.__GT_ResponseFormat \x3d (function ajax$interceptors$__GT_ResponseFormat(read,description,content_type){\nreturn (new ajax.interceptors.ResponseFormat(read,description,content_type,null,null,null));\n});\n\n/**\n * Factory function for ajax.interceptors/ResponseFormat, taking a map of keywords to field values.\n */\najax.interceptors.map__GT_ResponseFormat \x3d (function ajax$interceptors$map__GT_ResponseFormat(G__50386){\nvar extmap__5385__auto__ \x3d (function (){var G__50417 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__50386,new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634)], 0));\nif(cljs.core.record_QMARK_(G__50386)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__50417);\n} else {\nreturn G__50417;\n}\n})();\nreturn (new ajax.interceptors.ResponseFormat(new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661).cljs$core$IFn$_invoke$arity$1(G__50386),new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544).cljs$core$IFn$_invoke$arity$1(G__50386),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634).cljs$core$IFn$_invoke$arity$1(G__50386),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n/**\n * Internal function. Takes whatever was provided as :request-format and \n * converts it to a true request format. In practice, this just means it will \n * interpret functions as formats and not change maps. Note that it throws an\n * exception when passed a keyword, because they should already have been \n * transformed to maps.\n */\najax.interceptors.get_request_format \x3d (function ajax$interceptors$get_request_format(format){\nif(cljs.core.map_QMARK_(format)){\nreturn format;\n} else {\nif((format instanceof cljs.core.Keyword)){\nreturn ajax.util.throw_error(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22keywords are not allowed as request formats in ajax calls: \x22,format], null));\n} else {\nif(cljs.core.ifn_QMARK_(format)){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22write\x22,\x22write\x22,-1857649168),format,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),\x22text/plain\x22], null);\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n\n}\n}\n}\n});\najax.interceptors.apply_request_format \x3d (function ajax$interceptors$apply_request_format(write,params){\nreturn (write.cljs$core$IFn$_invoke$arity$1 ? write.cljs$core$IFn$_invoke$arity$1(params) : write.call(null,params));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {ajax.protocols.Interceptor}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\najax.interceptors.ApplyRequestFormat \x3d (function (__meta,__extmap,__hash){\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k50421,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__50425 \x3d k50421;\nswitch (G__50425) {\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k50421,else__5346__auto__);\n\n}\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__50428){\nvar vec__50429 \x3d p__50428;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50429,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50429,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.ajax$protocols$Interceptor$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.interceptors.ApplyRequestFormat.prototype.ajax$protocols$Interceptor$_process_request$arity$2 \x3d (function (_,p__50432){\nvar self__ \x3d this;\nvar map__50433 \x3d p__50432;\nvar map__50433__$1 \x3d cljs.core.__destructure_map(map__50433);\nvar request \x3d map__50433__$1;\nvar uri \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50433__$1,new cljs.core.Keyword(null,\x22uri\x22,\x22uri\x22,-774711847));\nvar method \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50433__$1,new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592));\nvar format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50433__$1,new cljs.core.Keyword(null,\x22format\x22,\x22format\x22,-1306924766));\nvar params \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50433__$1,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235));\nvar headers \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50433__$1,new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129));\nvar ___$1 \x3d this;\nvar map__50434 \x3d ajax.interceptors.get_request_format(format);\nvar map__50434__$1 \x3d cljs.core.__destructure_map(map__50434);\nvar write \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50434__$1,new cljs.core.Keyword(null,\x22write\x22,\x22write\x22,-1857649168));\nvar content_type \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50434__$1,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634));\nvar body \x3d (((!((write \x3d\x3d null))))?ajax.interceptors.apply_request_format(write,params):ajax.util.throw_error(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22unrecognized request format: \x22,format], null)));\nvar headers__$1 \x3d (function (){var or__5045__auto__ \x3d headers;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(request,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),body,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),(cljs.core.truth_(content_type)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(headers__$1,\x22Content-Type\x22,ajax.interceptors.content_type_to_request_header(content_type)):headers__$1)], 0));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.ajax$protocols$Interceptor$_process_response$arity$2 \x3d (function (_,xhrio){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn xhrio;\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#ajax.interceptors.ApplyRequestFormat{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,self__.__extmap));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__50420){\nvar self__ \x3d this;\nvar G__50420__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__50420__$1,0,cljs.core.PersistentVector.EMPTY,(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new ajax.interceptors.ApplyRequestFormat(self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (0 + cljs.core.count(self__.__extmap));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (1698259290 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this50422,other50423){\nvar self__ \x3d this;\nvar this50422__$1 \x3d this;\nreturn (((!((other50423 \x3d\x3d null)))) \x26\x26 ((((this50422__$1.constructor \x3d\x3d\x3d other50423.constructor)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50422__$1.__extmap,other50423.__extmap)))));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(cljs.core.PersistentHashSet.EMPTY,k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new ajax.interceptors.ApplyRequestFormat(self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k50421){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nreturn cljs.core.contains_QMARK_(self__.__extmap,k50421);\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__50420){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__50441 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__50442 \x3d k__5352__auto__;\nreturn (new ajax.interceptors.ApplyRequestFormat(self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__50420),null));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,self__.__extmap));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__50420){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new ajax.interceptors.ApplyRequestFormat(G__50420,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(ajax.interceptors.ApplyRequestFormat.getBasis \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(ajax.interceptors.ApplyRequestFormat.cljs$lang$type \x3d true);\n\n(ajax.interceptors.ApplyRequestFormat.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22ajax.interceptors/ApplyRequestFormat\x22,null,(1),null));\n}));\n\n(ajax.interceptors.ApplyRequestFormat.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22ajax.interceptors/ApplyRequestFormat\x22);\n}));\n\n/**\n * Positional factory function for ajax.interceptors/ApplyRequestFormat.\n */\najax.interceptors.__GT_ApplyRequestFormat \x3d (function ajax$interceptors$__GT_ApplyRequestFormat(){\nreturn (new ajax.interceptors.ApplyRequestFormat(null,null,null));\n});\n\n/**\n * Factory function for ajax.interceptors/ApplyRequestFormat, taking a map of keywords to field values.\n */\najax.interceptors.map__GT_ApplyRequestFormat \x3d (function ajax$interceptors$map__GT_ApplyRequestFormat(G__50424){\nvar extmap__5385__auto__ \x3d (function (){var G__50445 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(G__50424);\nif(cljs.core.record_QMARK_(G__50424)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__50445);\n} else {\nreturn G__50445;\n}\n})();\nreturn (new ajax.interceptors.ApplyRequestFormat(null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n/**\n * Internal function. Takes a uri and appends the interpretation of the query string to it\n * matching the behaviour of `url-request-format`.\n */\najax.interceptors.uri_with_params \x3d (function ajax$interceptors$uri_with_params(p__50447,uri){\nvar map__50448 \x3d p__50447;\nvar map__50448__$1 \x3d cljs.core.__destructure_map(map__50448);\nvar vec_strategy \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50448__$1,new cljs.core.Keyword(null,\x22vec-strategy\x22,\x22vec-strategy\x22,1843221372));\nvar params \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50448__$1,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235));\nvar method \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50448__$1,new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592));\nvar url_params \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50448__$1,new cljs.core.Keyword(null,\x22url-params\x22,\x22url-params\x22,-697567619));\nvar temp__5802__auto__ \x3d ((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(method,\x22GET\x22)) \x26\x26 ((url_params \x3d\x3d null))))?params:url_params);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar final_url_params \x3d temp__5802__auto__;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(uri),(cljs.core.truth_(cljs.core.re_find(/\\?/,uri))?\x22\x26\x22:\x22?\x22),ajax.url.params_to_str(vec_strategy,final_url_params)].join(\x27\x27);\n} else {\nreturn uri;\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {ajax.protocols.Interceptor}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\najax.interceptors.ProcessUrlParameters \x3d (function (__meta,__extmap,__hash){\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k50450,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__50454 \x3d k50450;\nswitch (G__50454) {\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k50450,else__5346__auto__);\n\n}\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__50456){\nvar vec__50457 \x3d p__50456;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50457,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50457,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.ajax$protocols$Interceptor$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.interceptors.ProcessUrlParameters.prototype.ajax$protocols$Interceptor$_process_request$arity$2 \x3d (function (_,p__50461){\nvar self__ \x3d this;\nvar map__50462 \x3d p__50461;\nvar map__50462__$1 \x3d cljs.core.__destructure_map(map__50462);\nvar request \x3d map__50462__$1;\nvar method \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50462__$1,new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592));\nvar ___$1 \x3d this;\nvar G__50464 \x3d cljs.core.update.cljs$core$IFn$_invoke$arity$3(request,new cljs.core.Keyword(null,\x22uri\x22,\x22uri\x22,-774711847),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(ajax.interceptors.uri_with_params,request));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(method,\x22GET\x22)){\nreturn cljs.core.reduced(G__50464);\n} else {\nreturn G__50464;\n}\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.ajax$protocols$Interceptor$_process_response$arity$2 \x3d (function (_,response){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn response;\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#ajax.interceptors.ProcessUrlParameters{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,self__.__extmap));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__50449){\nvar self__ \x3d this;\nvar G__50449__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__50449__$1,0,cljs.core.PersistentVector.EMPTY,(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new ajax.interceptors.ProcessUrlParameters(self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (0 + cljs.core.count(self__.__extmap));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-516728758 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this50451,other50452){\nvar self__ \x3d this;\nvar this50451__$1 \x3d this;\nreturn (((!((other50452 \x3d\x3d null)))) \x26\x26 ((((this50451__$1.constructor \x3d\x3d\x3d other50452.constructor)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50451__$1.__extmap,other50452.__extmap)))));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(cljs.core.PersistentHashSet.EMPTY,k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new ajax.interceptors.ProcessUrlParameters(self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k50450){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nreturn cljs.core.contains_QMARK_(self__.__extmap,k50450);\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__50449){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__50477 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__50478 \x3d k__5352__auto__;\nreturn (new ajax.interceptors.ProcessUrlParameters(self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__50449),null));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,self__.__extmap));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__50449){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new ajax.interceptors.ProcessUrlParameters(G__50449,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(ajax.interceptors.ProcessUrlParameters.getBasis \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(ajax.interceptors.ProcessUrlParameters.cljs$lang$type \x3d true);\n\n(ajax.interceptors.ProcessUrlParameters.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22ajax.interceptors/ProcessUrlParameters\x22,null,(1),null));\n}));\n\n(ajax.interceptors.ProcessUrlParameters.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22ajax.interceptors/ProcessUrlParameters\x22);\n}));\n\n/**\n * Positional factory function for ajax.interceptors/ProcessUrlParameters.\n */\najax.interceptors.__GT_ProcessUrlParameters \x3d (function ajax$interceptors$__GT_ProcessUrlParameters(){\nreturn (new ajax.interceptors.ProcessUrlParameters(null,null,null));\n});\n\n/**\n * Factory function for ajax.interceptors/ProcessUrlParameters, taking a map of keywords to field values.\n */\najax.interceptors.map__GT_ProcessUrlParameters \x3d (function ajax$interceptors$map__GT_ProcessUrlParameters(G__50453){\nvar extmap__5385__auto__ \x3d (function (){var G__50487 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(G__50453);\nif(cljs.core.record_QMARK_(G__50453)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__50487);\n} else {\nreturn G__50487;\n}\n})();\nreturn (new ajax.interceptors.ProcessUrlParameters(null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {ajax.protocols.Interceptor}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\najax.interceptors.DirectSubmission \x3d (function (__meta,__extmap,__hash){\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k50490,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__50497 \x3d k50490;\nswitch (G__50497) {\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k50490,else__5346__auto__);\n\n}\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__50499){\nvar vec__50500 \x3d p__50499;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50500,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50500,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.ajax$protocols$Interceptor$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.interceptors.DirectSubmission.prototype.ajax$protocols$Interceptor$_process_request$arity$2 \x3d (function (_,p__50527){\nvar self__ \x3d this;\nvar map__50528 \x3d p__50527;\nvar map__50528__$1 \x3d cljs.core.__destructure_map(map__50528);\nvar request \x3d map__50528__$1;\nvar body \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50528__$1,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669));\nvar ___$1 \x3d this;\nif((body \x3d\x3d null)){\nreturn request;\n} else {\nreturn cljs.core.reduced(request);\n}\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.ajax$protocols$Interceptor$_process_response$arity$2 \x3d (function (_,response){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn response;\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#ajax.interceptors.DirectSubmission{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,self__.__extmap));\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__50489){\nvar self__ \x3d this;\nvar G__50489__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__50489__$1,0,cljs.core.PersistentVector.EMPTY,(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new ajax.interceptors.DirectSubmission(self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (0 + cljs.core.count(self__.__extmap));\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-1077152635 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this50491,other50492){\nvar self__ \x3d this;\nvar this50491__$1 \x3d this;\nreturn (((!((other50492 \x3d\x3d null)))) \x26\x26 ((((this50491__$1.constructor \x3d\x3d\x3d other50492.constructor)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this50491__$1.__extmap,other50492.__extmap)))));\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(cljs.core.PersistentHashSet.EMPTY,k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new ajax.interceptors.DirectSubmission(self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k50490){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nreturn cljs.core.contains_QMARK_(self__.__extmap,k50490);\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__50489){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__50535 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__50536 \x3d k__5352__auto__;\nreturn (new ajax.interceptors.DirectSubmission(self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__50489),null));\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,self__.__extmap));\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__50489){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new ajax.interceptors.DirectSubmission(G__50489,self__.__extmap,self__.__hash));\n}));\n\n(ajax.interceptors.DirectSubmission.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(ajax.interceptors.DirectSubmission.getBasis \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(ajax.interceptors.DirectSubmission.cljs$lang$type \x3d true);\n\n(ajax.interceptors.DirectSubmission.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22ajax.interceptors/DirectSubmission\x22,null,(1),null));\n}));\n\n(ajax.interceptors.DirectSubmission.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22ajax.interceptors/DirectSubmission\x22);\n}));\n\n/**\n * Positional factory function for ajax.interceptors/DirectSubmission.\n */\najax.interceptors.__GT_DirectSubmission \x3d (function ajax$interceptors$__GT_DirectSubmission(){\nreturn (new ajax.interceptors.DirectSubmission(null,null,null));\n});\n\n/**\n * Factory function for ajax.interceptors/DirectSubmission, taking a map of keywords to field values.\n */\najax.interceptors.map__GT_DirectSubmission \x3d (function ajax$interceptors$map__GT_DirectSubmission(G__50494){\nvar extmap__5385__auto__ \x3d (function (){var G__50538 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(G__50494);\nif(cljs.core.record_QMARK_(G__50494)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__50538);\n} else {\nreturn G__50538;\n}\n})();\nreturn (new ajax.interceptors.DirectSubmission(null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\najax.interceptors.request_interceptors \x3d new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new ajax.interceptors.ProcessUrlParameters(null,null,null)),(new ajax.interceptors.DirectSubmission(null,null,null)),(new ajax.interceptors.ApplyRequestFormat(null,null,null))], null);\najax.interceptors.is_response_format_QMARK_ \x3d (function ajax$interceptors$is_response_format_QMARK_(response_format){\nreturn (response_format instanceof ajax.interceptors.ResponseFormat);\n});\najax.interceptors.get_response_format \x3d (function ajax$interceptors$get_response_format(interpret_vector,p__50539){\nvar map__50540 \x3d p__50539;\nvar map__50540__$1 \x3d cljs.core.__destructure_map(map__50540);\nvar opts \x3d map__50540__$1;\nvar response_format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50540__$1,new cljs.core.Keyword(null,\x22response-format\x22,\x22response-format\x22,1664465322));\nif(ajax.interceptors.is_response_format_QMARK_(response_format)){\nreturn response_format;\n} else {\nif(cljs.core.vector_QMARK_(response_format)){\nreturn (interpret_vector.cljs$core$IFn$_invoke$arity$1 ? interpret_vector.cljs$core$IFn$_invoke$arity$1(opts) : interpret_vector.call(null,opts));\n} else {\nif(cljs.core.map_QMARK_(response_format)){\nreturn ajax.interceptors.map__GT_ResponseFormat(response_format);\n} else {\nif((response_format instanceof cljs.core.Keyword)){\nreturn ajax.util.throw_error(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22keywords are not allowed as response formats in ajax calls: \x22,response_format], null));\n} else {\nif(cljs.core.ifn_QMARK_(response_format)){\nreturn ajax.interceptors.map__GT_ResponseFormat(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),response_format,new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),\x22custom\x22,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),\x22*/*\x22], null));\n} else {\nreturn ajax.util.throw_error(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22unrecognized response format: \x22,response_format], null));\n\n}\n}\n}\n}\n}\n});\n");
SHADOW_ENV.evalLoad("ajax.json.js", true , "goog.provide(\x27ajax.json\x27);\najax.json.write_json_native \x3d (function ajax$json$write_json_native(data){\nreturn JSON.stringify(cljs.core.clj__GT_js(data));\n});\najax.json.read_json_native \x3d (function ajax$json$read_json_native(raw,keywords_QMARK_,text){\nvar result_raw \x3d JSON.parse(text);\nif(cljs.core.truth_(raw)){\nreturn result_raw;\n} else {\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(result_raw,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22keywordize-keys\x22,\x22keywordize-keys\x22,1310784252),keywords_QMARK_], 0));\n}\n});\najax.json.read_json_transit \x3d (function ajax$json$read_json_transit(raw,keywords_QMARK_,text){\nif(cljs.core.truth_(raw)){\nreturn JSON.parse(text);\n} else {\nvar edn \x3d cognitect.transit.read(cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22json\x22,\x22json\x22,1279968570)),text);\nif(cljs.core.truth_(keywords_QMARK_)){\nreturn clojure.walk.keywordize_keys(edn);\n} else {\nreturn edn;\n}\n}\n});\najax.json.make_json_request_format \x3d (function ajax$json$make_json_request_format(write_json){\nreturn (function ajax$json$make_json_request_format_$_json_request_format(){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22write\x22,\x22write\x22,-1857649168),write_json,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),\x22application/json\x22], null);\n});\n});\najax.json.strip_prefix \x3d (function ajax$json$strip_prefix(prefix,text){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d prefix;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),text.indexOf(prefix));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn text.substring(prefix.length);\n} else {\nreturn text;\n}\n});\n/**\n * Create a json request format given `read-json` function.\n */\najax.json.make_json_response_format \x3d (function ajax$json$make_json_response_format(read_json){\nreturn (function() {\nvar ajax$json$make_json_response_format_$_json_response_format \x3d null;\nvar ajax$json$make_json_response_format_$_json_response_format__0 \x3d (function (){\nreturn ajax$json$make_json_response_format_$_json_response_format.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n});\nvar ajax$json$make_json_response_format_$_json_response_format__1 \x3d (function (p__50551){\nvar map__50552 \x3d p__50551;\nvar map__50552__$1 \x3d cljs.core.__destructure_map(map__50552);\nvar prefix \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50552__$1,new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465));\nvar keywords_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50552__$1,new cljs.core.Keyword(null,\x22keywords?\x22,\x22keywords?\x22,764949733));\nvar raw \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50552__$1,new cljs.core.Keyword(null,\x22raw\x22,\x22raw\x22,1604651272));\nreturn ajax.interceptors.map__GT_ResponseFormat(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),(function ajax$json$make_json_response_format_$_json_response_format_$_json_read_response_format(xhrio){\nvar G__50553 \x3d raw;\nvar G__50554 \x3d keywords_QMARK_;\nvar G__50555 \x3d ajax.json.strip_prefix(prefix,ajax.protocols._body(xhrio));\nreturn (read_json.cljs$core$IFn$_invoke$arity$3 ? read_json.cljs$core$IFn$_invoke$arity$3(G__50553,G__50554,G__50555) : read_json.call(null,G__50553,G__50554,G__50555));\n}),new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),[\x22JSON\x22,(cljs.core.truth_(prefix)?[\x22 prefix \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\x22\x27\x22].join(\x27\x27):null),(cljs.core.truth_(keywords_QMARK_)?\x22 keywordize\x22:null)].join(\x27\x27),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22application/json\x22], null)], null));\n});\najax$json$make_json_response_format_$_json_response_format \x3d function(p__50551){\nswitch(arguments.length){\ncase 0:\nreturn ajax$json$make_json_response_format_$_json_response_format__0.call(this);\ncase 1:\nreturn ajax$json$make_json_response_format_$_json_response_format__1.call(this,p__50551);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\najax$json$make_json_response_format_$_json_response_format.cljs$core$IFn$_invoke$arity$0 \x3d ajax$json$make_json_response_format_$_json_response_format__0;\najax$json$make_json_response_format_$_json_response_format.cljs$core$IFn$_invoke$arity$1 \x3d ajax$json$make_json_response_format_$_json_response_format__1;\nreturn ajax$json$make_json_response_format_$_json_response_format;\n})()\n});\n/**\n * Returns a JSON response format using the native JSON \n * implementation. Options include\n * :keywords? Returns the keys as keywords\n * :prefix A prefix that needs to be stripped off.  This is to\n * combat JSON hijacking.  If you\x27re using JSON with GET request,\n * you should think about using this.\n * http://stackoverflow.com/questions/2669690/why-does-google-prepend-while1-to-their-json-responses\n * http://haacked.com/archive/2009/06/24/json-hijacking.aspx\n */\najax.json.json_response_format \x3d ajax.json.make_json_response_format(ajax.json.read_json_native);\najax.json.json_request_format \x3d ajax.json.make_json_request_format(ajax.json.write_json_native);\najax.json.safe_json_request_format \x3d ajax.json.make_json_response_format(ajax.json.read_json_transit);\n");
SHADOW_ENV.evalLoad("ajax.transit.js", true , "goog.provide(\x27ajax.transit\x27);\najax.transit.transit_type \x3d (function ajax$transit$transit_type(p__50543){\nvar map__50544 \x3d p__50543;\nvar map__50544__$1 \x3d cljs.core.__destructure_map(map__50544);\nvar type \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50544__$1,new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348));\nvar or__5045__auto__ \x3d type;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22json\x22,\x22json\x22,1279968570);\n}\n});\najax.transit.transit_write_fn \x3d (function ajax$transit$transit_write_fn(type,opts){\nvar writer \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22writer\x22,\x22writer\x22,-277568236).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(type,opts);\n}\n})();\nreturn (function ajax$transit$transit_write_fn_$_transit_write_params(params){\nreturn cognitect.transit.write(writer,params);\n});\n});\n/**\n * Returns a Transit request format.\n * \n * Options include:\n * :writer Explicit Transit writer. If not supplied one will be created using the other options.\n *         The default type is :json for ClojureScript and :msgpack for Clojure.\n * :type Override the default transit type with value :json, :json-verbose or :msgpack\n * :handlers Custom Transit handlers (refer to Transit documentation)\n */\najax.transit.transit_request_format \x3d (function ajax$transit$transit_request_format(var_args){\nvar G__50548 \x3d arguments.length;\nswitch (G__50548) {\ncase 0:\nreturn ajax.transit.transit_request_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn ajax.transit.transit_request_format.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(ajax.transit.transit_request_format.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn ajax.transit.transit_request_format.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(ajax.transit.transit_request_format.cljs$core$IFn$_invoke$arity$1 \x3d (function (opts){\nvar type \x3d ajax.transit.transit_type(opts);\nvar mime_type \x3d ((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\x22json\x22,\x22json\x22,1279968570))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\x22json-verbose\x22,\x22json-verbose\x22,-542533531)))))?\x22json\x22:\x22msgpack\x22);\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22write\x22,\x22write\x22,-1857649168),ajax.transit.transit_write_fn(type,opts),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),[\x22application/transit+\x22,mime_type].join(\x27\x27)], null);\n}));\n\n(ajax.transit.transit_request_format.cljs$lang$maxFixedArity \x3d 1);\n\najax.transit.transit_read_fn \x3d (function ajax$transit$transit_read_fn(opts){\nvar reader \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22reader\x22,\x22reader\x22,169660853).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22json\x22,\x22json\x22,1279968570),opts);\n}\n})();\nreturn (function ajax$transit$transit_read_fn_$_transit_read_response(response){\nreturn cognitect.transit.read(reader,ajax.protocols._body(response));\n});\n});\n/**\n * Returns a Transit response format.\n * \n * Options include:\n * :reader (CLJS only) Explicit Transit reader. If not supplied one will be created using the other options.\n * :handlers Custom Transit handlers (refer to Transit documentation)\n */\najax.transit.transit_response_format \x3d (function ajax$transit$transit_response_format(var_args){\nvar G__50560 \x3d arguments.length;\nswitch (G__50560) {\ncase 0:\nreturn ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$1 \x3d (function (opts){\nreturn ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$2(ajax.transit.transit_type(opts),opts);\n}));\n\n(ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$2 \x3d (function (type,opts){\nreturn ajax.interceptors.map__GT_ResponseFormat(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),ajax.transit.transit_read_fn(opts),new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),\x22Transit\x22,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22application/transit+json\x22], null)], null));\n}));\n\n(ajax.transit.transit_response_format.cljs$lang$maxFixedArity \x3d 2);\n\n");
SHADOW_ENV.evalLoad("ajax.formats.js", true , "goog.provide(\x27ajax.formats\x27);\n/**\n * This will literally return whatever the underlying implementation\n * considers has been sent. Obviously, this is highly implementation\n * dependent, gives different results depending on your platform but\n * is nonetheless really rather useful.\n */\najax.formats.raw_response_format \x3d (function ajax$formats$raw_response_format(var_args){\nvar G__50545 \x3d arguments.length;\nswitch (G__50545) {\ncase 0:\nreturn ajax.formats.raw_response_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn ajax.formats.raw_response_format.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(ajax.formats.raw_response_format.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn ajax.interceptors.map__GT_ResponseFormat(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),ajax.protocols._body,new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),\x22raw text\x22,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22*/*\x22], null)], null));\n}));\n\n(ajax.formats.raw_response_format.cljs$core$IFn$_invoke$arity$1 \x3d (function (_){\nreturn ajax.formats.raw_response_format.cljs$core$IFn$_invoke$arity$0();\n}));\n\n(ajax.formats.raw_response_format.cljs$lang$maxFixedArity \x3d 1);\n\najax.formats.text_request_format \x3d (function ajax$formats$text_request_format(){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22write\x22,\x22write\x22,-1857649168),ajax.util.to_utf8_writer(cljs.core.identity),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),\x22text/plain; charset\x3dutf-8\x22], null);\n});\najax.formats.text_response_format \x3d ajax.formats.raw_response_format;\n/**\n * Converts one of a number of types to a response format.\n * Note that it processes `[text format]` the same as `format`,\n * which makes it easier to work with detection vectors such as\n * `default-formats`.\n * \n * It also supports providing formats as raw functions. I don\x27t \n * know if anyone has ever used this.\n */\najax.formats.get_format \x3d (function ajax$formats$get_format(request,format_entry){\nif((((format_entry \x3d\x3d null)) || (cljs.core.map_QMARK_(format_entry)))){\nreturn format_entry;\n} else {\nif(cljs.core.vector_QMARK_(format_entry)){\nvar G__50549 \x3d request;\nvar G__50550 \x3d cljs.core.second(format_entry);\nreturn (ajax.formats.get_format.cljs$core$IFn$_invoke$arity$2 ? ajax.formats.get_format.cljs$core$IFn$_invoke$arity$2(G__50549,G__50550) : ajax.formats.get_format.call(null,G__50549,G__50550));\n} else {\nreturn (format_entry.cljs$core$IFn$_invoke$arity$1 ? format_entry.cljs$core$IFn$_invoke$arity$1(request) : format_entry.call(null,request));\n\n}\n}\n});\najax.formats.get_accept_entries \x3d (function ajax$formats$get_accept_entries(request,format_entry){\nvar fe \x3d ((cljs.core.vector_QMARK_(format_entry))?cljs.core.first(format_entry):new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634).cljs$core$IFn$_invoke$arity$1(ajax.formats.get_format(request,format_entry)));\nif((fe \x3d\x3d null)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22*/*\x22], null);\n} else {\nif(typeof fe \x3d\x3d\x3d \x27string\x27){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fe], null);\n} else {\nreturn fe;\n\n}\n}\n});\najax.formats.content_type_matches \x3d (function ajax$formats$content_type_matches(content_type,accept){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(accept,\x22*/*\x22)) || ((content_type.indexOf(accept) \x3e\x3d (0))));\n});\najax.formats.detect_content_type \x3d (function ajax$formats$detect_content_type(content_type,request,format_entry){\nvar accept \x3d ajax.formats.get_accept_entries(request,format_entry);\nreturn cljs.core.some((function (p1__50561_SHARP_){\nreturn ajax.formats.content_type_matches(content_type,p1__50561_SHARP_);\n}),accept);\n});\najax.formats.get_default_format \x3d (function ajax$formats$get_default_format(response,p__50563){\nvar map__50564 \x3d p__50563;\nvar map__50564__$1 \x3d cljs.core.__destructure_map(map__50564);\nvar request \x3d map__50564__$1;\nvar response_format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50564__$1,new cljs.core.Keyword(null,\x22response-format\x22,\x22response-format\x22,1664465322));\nvar content_type \x3d ajax.util.get_content_type(response);\nvar accepted_format_QMARK_ \x3d (function ajax$formats$get_default_format_$_accepted_format_QMARK_(format_entry){\nreturn ajax.formats.detect_content_type(content_type,request,format_entry);\n});\nreturn ajax.formats.get_format(request,cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(accepted_format_QMARK_,response_format)));\n});\najax.formats.detect_response_format_read \x3d (function ajax$formats$detect_response_format_read(request){\nreturn (function ajax$formats$detect_response_format_read_$_detect_response_format(response){\nvar format \x3d ajax.formats.get_default_format(response,request);\nvar fexpr__50568 \x3d new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661).cljs$core$IFn$_invoke$arity$1(format);\nreturn (fexpr__50568.cljs$core$IFn$_invoke$arity$1 ? fexpr__50568.cljs$core$IFn$_invoke$arity$1(response) : fexpr__50568.call(null,response));\n});\n});\najax.formats.accept_header \x3d (function ajax$formats$accept_header(p__50571){\nvar map__50572 \x3d p__50571;\nvar map__50572__$1 \x3d cljs.core.__destructure_map(map__50572);\nvar request \x3d map__50572__$1;\nvar response_format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50572__$1,new cljs.core.Keyword(null,\x22response-format\x22,\x22response-format\x22,1664465322));\nvar formats \x3d ((cljs.core.vector_QMARK_(response_format))?response_format:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [response_format], null));\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__50570_SHARP_){\nreturn ajax.formats.get_accept_entries(request,p1__50570_SHARP_);\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([formats], 0));\n});\n/**\n * NB This version of the response format doesn\x27t have a zero\n *   arity version. This is because it would involve pulling\n *   in every dependency. Instead, core.cljc adds it in.\n */\najax.formats.detect_response_format \x3d (function ajax$formats$detect_response_format(opts){\nvar accept \x3d ajax.formats.accept_header(opts);\nreturn ajax.interceptors.map__GT_ResponseFormat(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),ajax.formats.detect_response_format_read(opts),new cljs.core.Keyword(null,\x22format\x22,\x22format\x22,-1306924766),[\x22(from \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(accept),\x22)\x22].join(\x27\x27),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),accept], null));\n});\n");
SHADOW_ENV.evalLoad("ajax.ring.js", true , "goog.provide(\x27ajax.ring\x27);\najax.ring.make_ring_read \x3d (function ajax$ring$make_ring_read(body_read){\nreturn (function ajax$ring$make_ring_read_$_ring_read(response){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),ajax.protocols._status(response),new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129),ajax.protocols._get_all_headers(response),new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),(body_read.cljs$core$IFn$_invoke$arity$1 ? body_read.cljs$core$IFn$_invoke$arity$1(response) : body_read.call(null,response))], null);\n});\n});\n/**\n * Returns a Ring-compatible response map.\n * \n * Optionally can be passed a :format option. This should be another\n * response-format map. If format is provided it will be used to\n * specify the content-type, and the read method will be used to\n * populate the :body key in the response map.\n */\najax.ring.ring_response_format \x3d (function ajax$ring$ring_response_format(var_args){\nvar G__50577 \x3d arguments.length;\nswitch (G__50577) {\ncase 0:\nreturn ajax.ring.ring_response_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn ajax.ring.ring_response_format.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(ajax.ring.ring_response_format.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn ajax.ring.ring_response_format.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22format\x22,\x22format\x22,-1306924766),ajax.formats.raw_response_format.cljs$core$IFn$_invoke$arity$0()], null));\n}));\n\n(ajax.ring.ring_response_format.cljs$core$IFn$_invoke$arity$1 \x3d (function (p__50580){\nvar map__50582 \x3d p__50580;\nvar map__50582__$1 \x3d cljs.core.__destructure_map(map__50582);\nvar map__50583 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50582__$1,new cljs.core.Keyword(null,\x22format\x22,\x22format\x22,-1306924766));\nvar map__50583__$1 \x3d cljs.core.__destructure_map(map__50583);\nvar read \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50583__$1,new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661));\nvar description \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50583__$1,new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544));\nvar content_type \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50583__$1,new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634));\nreturn ajax.interceptors.map__GT_ResponseFormat(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),ajax.ring.make_ring_read(read),new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),[\x22ring/\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(description)].join(\x27\x27),new cljs.core.Keyword(null,\x22content-type\x22,\x22content-type\x22,-508222634),content_type], null));\n}));\n\n(ajax.ring.ring_response_format.cljs$lang$maxFixedArity \x3d 1);\n\n");
SHADOW_ENV.evalLoad("goog.promise.thenable.js", true , "goog.provide(\x22goog.Thenable\x22);\ngoog.requireType(\x22goog.Promise\x22);\ngoog.Thenable \x3d function() {\n};\ngoog.Thenable.prototype.then \x3d function(opt_onFulfilled, opt_onRejected, opt_context) {\n};\ngoog.Thenable.IMPLEMENTED_BY_PROP \x3d \x22$goog_Thenable\x22;\ngoog.Thenable.addImplementation \x3d function(ctor) {\n  if (COMPILED) {\n    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] \x3d true;\n  } else {\n    ctor.prototype.$goog_Thenable \x3d true;\n  }\n};\ngoog.Thenable.isImplementedBy \x3d function(object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    if (COMPILED) {\n      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];\n    }\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    return false;\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.async.freelist.js", true , "goog.provide(\x22goog.async.FreeList\x22);\ngoog.async.FreeList \x3d class {\n  constructor(create, reset, limit) {\n    this.limit_ \x3d limit;\n    this.create_ \x3d create;\n    this.reset_ \x3d reset;\n    this.occupants_ \x3d 0;\n    this.head_ \x3d null;\n  }\n  get() {\n    let item;\n    if (this.occupants_ \x3e 0) {\n      this.occupants_--;\n      item \x3d this.head_;\n      this.head_ \x3d item.next;\n      item.next \x3d null;\n    } else {\n      item \x3d this.create_();\n    }\n    return item;\n  }\n  put(item) {\n    this.reset_(item);\n    if (this.occupants_ \x3c this.limit_) {\n      this.occupants_++;\n      item.next \x3d this.head_;\n      this.head_ \x3d item;\n    }\n  }\n  occupants() {\n    return this.occupants_;\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.async.workqueue.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.async.WorkQueue\x22);\n  goog.module.declareLegacyNamespace();\n  const FreeList \x3d goog.require(\x22goog.async.FreeList\x22);\n  const {assert} \x3d goog.require(\x22goog.asserts\x22);\n  class WorkQueue {\n    constructor() {\n      this.workHead_ \x3d null;\n      this.workTail_ \x3d null;\n    }\n    add(fn, scope) {\n      const item \x3d this.getUnusedItem_();\n      item.set(fn, scope);\n      if (this.workTail_) {\n        this.workTail_.next \x3d item;\n        this.workTail_ \x3d item;\n      } else {\n        assert(!this.workHead_);\n        this.workHead_ \x3d item;\n        this.workTail_ \x3d item;\n      }\n    }\n    remove() {\n      let item \x3d null;\n      if (this.workHead_) {\n        item \x3d this.workHead_;\n        this.workHead_ \x3d this.workHead_.next;\n        if (!this.workHead_) {\n          this.workTail_ \x3d null;\n        }\n        item.next \x3d null;\n      }\n      return item;\n    }\n    returnUnused(item) {\n      WorkQueue.freelist_.put(item);\n    }\n    getUnusedItem_() {\n      return WorkQueue.freelist_.get();\n    }\n  }\n  WorkQueue.DEFAULT_MAX_UNUSED \x3d goog.define(\x22goog.async.WorkQueue.DEFAULT_MAX_UNUSED\x22, 100);\n  WorkQueue.freelist_ \x3d new FreeList(() \x3d\x3e new WorkItem(), item \x3d\x3e item.reset(), WorkQueue.DEFAULT_MAX_UNUSED);\n  class WorkItem {\n    constructor() {\n      this.fn \x3d null;\n      this.scope \x3d null;\n      this.next \x3d null;\n    }\n    set(fn, scope) {\n      this.fn \x3d fn;\n      this.scope \x3d scope;\n      this.next \x3d null;\n    }\n    reset() {\n      this.fn \x3d null;\n      this.scope \x3d null;\n      this.next \x3d null;\n    }\n  }\n  exports \x3d WorkQueue;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.async.throwexception.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.async.throwException\x22);\n  goog.module.declareLegacyNamespace();\n  function throwException(exception) {\n    goog.global.setTimeout(() \x3d\x3e {\n      throw exception;\n    }, 0);\n  }\n  exports \x3d throwException;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.async.run.js", true , "goog.provide(\x22goog.async.run\x22);\ngoog.require(\x22goog.async.WorkQueue\x22);\ngoog.require(\x22goog.async.nextTick\x22);\ngoog.require(\x22goog.async.throwException\x22);\ngoog.ASSUME_NATIVE_PROMISE \x3d goog.define(\x22goog.ASSUME_NATIVE_PROMISE\x22, false);\ngoog.async.run \x3d function(callback, opt_context) {\n  if (!goog.async.run.schedule_) {\n    goog.async.run.initializeRunner_();\n  }\n  if (!goog.async.run.workQueueScheduled_) {\n    goog.async.run.schedule_();\n    goog.async.run.workQueueScheduled_ \x3d true;\n  }\n  goog.async.run.workQueue_.add(callback, opt_context);\n};\ngoog.async.run.initializeRunner_ \x3d function() {\n  if (goog.ASSUME_NATIVE_PROMISE || goog.global.Promise \x26\x26 goog.global.Promise.resolve) {\n    var promise \x3d goog.global.Promise.resolve(undefined);\n    goog.async.run.schedule_ \x3d function() {\n      promise.then(goog.async.run.processWorkQueue);\n    };\n  } else {\n    goog.async.run.schedule_ \x3d function() {\n      goog.async.nextTick(goog.async.run.processWorkQueue);\n    };\n  }\n};\ngoog.async.run.forceNextTick \x3d function(opt_realSetTimeout) {\n  goog.async.run.schedule_ \x3d function() {\n    goog.async.nextTick(goog.async.run.processWorkQueue);\n    if (opt_realSetTimeout) {\n      opt_realSetTimeout(goog.async.run.processWorkQueue);\n    }\n  };\n};\ngoog.async.run.schedule_;\ngoog.async.run.workQueueScheduled_ \x3d false;\ngoog.async.run.workQueue_ \x3d new goog.async.WorkQueue();\nif (goog.DEBUG) {\n  goog.async.run.resetQueue \x3d function() {\n    goog.async.run.workQueueScheduled_ \x3d false;\n    goog.async.run.workQueue_ \x3d new goog.async.WorkQueue();\n  };\n  goog.async.run.resetSchedulerForTest \x3d function() {\n    goog.async.run.initializeRunner_();\n  };\n}\ngoog.async.run.processWorkQueue \x3d function() {\n  var item \x3d null;\n  while (item \x3d goog.async.run.workQueue_.remove()) {\n    try {\n      item.fn.call(item.scope);\n    } catch (e) {\n      goog.async.throwException(e);\n    }\n    goog.async.run.workQueue_.returnUnused(item);\n  }\n  goog.async.run.workQueueScheduled_ \x3d false;\n};\n");
SHADOW_ENV.evalLoad("goog.promise.resolver.js", true , "goog.provide(\x22goog.promise.Resolver\x22);\ngoog.requireType(\x22goog.Promise\x22);\ngoog.promise.Resolver \x3d function() {\n};\ngoog.promise.Resolver.prototype.promise;\ngoog.promise.Resolver.prototype.resolve;\ngoog.promise.Resolver.prototype.reject;\n");
SHADOW_ENV.evalLoad("goog.promise.promise.js", true , "goog.provide(\x22goog.Promise\x22);\ngoog.require(\x22goog.Thenable\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.async.FreeList\x22);\ngoog.require(\x22goog.async.run\x22);\ngoog.require(\x22goog.async.throwException\x22);\ngoog.require(\x22goog.debug.Error\x22);\ngoog.require(\x22goog.promise.Resolver\x22);\ngoog.Promise \x3d function(resolver, opt_context) {\n  this.state_ \x3d goog.Promise.State_.PENDING;\n  this.result_ \x3d undefined;\n  this.parent_ \x3d null;\n  this.callbackEntries_ \x3d null;\n  this.callbackEntriesTail_ \x3d null;\n  this.executing_ \x3d false;\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY \x3e 0) {\n    this.unhandledRejectionId_ \x3d 0;\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY \x3d\x3d 0) {\n    this.hadUnhandledRejection_ \x3d false;\n  }\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.stack_ \x3d [];\n    this.addStackTrace_(new Error(\x22created\x22));\n    this.currentStep_ \x3d 0;\n  }\n  if (resolver !\x3d goog.nullFunction) {\n    try {\n      var self \x3d this;\n      resolver.call(opt_context, function(value) {\n        self.resolve_(goog.Promise.State_.FULFILLED, value);\n      }, function(reason) {\n        if (goog.DEBUG \x26\x26 !(reason instanceof goog.Promise.CancellationError)) {\n          try {\n            if (reason instanceof Error) {\n              throw reason;\n            } else {\n              throw new Error(\x22Promise rejected.\x22);\n            }\n          } catch (e) {\n          }\n        }\n        self.resolve_(goog.Promise.State_.REJECTED, reason);\n      });\n    } catch (e) {\n      this.resolve_(goog.Promise.State_.REJECTED, e);\n    }\n  }\n};\ngoog.Promise.LONG_STACK_TRACES \x3d goog.define(\x22goog.Promise.LONG_STACK_TRACES\x22, false);\ngoog.Promise.UNHANDLED_REJECTION_DELAY \x3d goog.define(\x22goog.Promise.UNHANDLED_REJECTION_DELAY\x22, 0);\ngoog.Promise.State_ \x3d {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};\ngoog.Promise.CallbackEntry_ \x3d function() {\n  this.child \x3d null;\n  this.onFulfilled \x3d null;\n  this.onRejected \x3d null;\n  this.context \x3d null;\n  this.next \x3d null;\n  this.always \x3d false;\n};\ngoog.Promise.CallbackEntry_.prototype.reset \x3d function() {\n  this.child \x3d null;\n  this.onFulfilled \x3d null;\n  this.onRejected \x3d null;\n  this.context \x3d null;\n  this.always \x3d false;\n};\ngoog.Promise.DEFAULT_MAX_UNUSED \x3d goog.define(\x22goog.Promise.DEFAULT_MAX_UNUSED\x22, 100);\ngoog.Promise.freelist_ \x3d new goog.async.FreeList(function() {\n  return new goog.Promise.CallbackEntry_();\n}, function(item) {\n  item.reset();\n}, goog.Promise.DEFAULT_MAX_UNUSED);\ngoog.Promise.getCallbackEntry_ \x3d function(onFulfilled, onRejected, context) {\n  var entry \x3d goog.Promise.freelist_.get();\n  entry.onFulfilled \x3d onFulfilled;\n  entry.onRejected \x3d onRejected;\n  entry.context \x3d context;\n  return entry;\n};\ngoog.Promise.returnEntry_ \x3d function(entry) {\n  goog.Promise.freelist_.put(entry);\n};\ngoog.Promise.resolve \x3d function(opt_value) {\n  if (opt_value instanceof goog.Promise) {\n    return opt_value;\n  }\n  var promise \x3d new goog.Promise(goog.nullFunction);\n  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);\n  return promise;\n};\ngoog.Promise.reject \x3d function(opt_reason) {\n  return new goog.Promise(function(resolve, reject) {\n    reject(opt_reason);\n  });\n};\ngoog.Promise.resolveThen_ \x3d function(value, onFulfilled, onRejected) {\n  var isThenable \x3d goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);\n  if (!isThenable) {\n    goog.async.run(goog.partial(onFulfilled, value));\n  }\n};\ngoog.Promise.race \x3d function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    if (!promises.length) {\n      resolve(undefined);\n    }\n    for (var i \x3d 0, promise; i \x3c promises.length; i++) {\n      promise \x3d promises[i];\n      goog.Promise.resolveThen_(promise, resolve, reject);\n    }\n  });\n};\ngoog.Promise.all \x3d function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toFulfill \x3d promises.length;\n    var values \x3d [];\n    if (!toFulfill) {\n      resolve(values);\n      return;\n    }\n    var onFulfill \x3d function(index, value) {\n      toFulfill--;\n      values[index] \x3d value;\n      if (toFulfill \x3d\x3d 0) {\n        resolve(values);\n      }\n    };\n    var onReject \x3d function(reason) {\n      reject(reason);\n    };\n    for (var i \x3d 0, promise; i \x3c promises.length; i++) {\n      promise \x3d promises[i];\n      goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);\n    }\n  });\n};\ngoog.Promise.allSettled \x3d function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toSettle \x3d promises.length;\n    var results \x3d [];\n    if (!toSettle) {\n      resolve(results);\n      return;\n    }\n    var onSettled \x3d function(index, fulfilled, result) {\n      toSettle--;\n      results[index] \x3d fulfilled ? {fulfilled:true, value:result} : {fulfilled:false, reason:result};\n      if (toSettle \x3d\x3d 0) {\n        resolve(results);\n      }\n    };\n    for (var i \x3d 0, promise; i \x3c promises.length; i++) {\n      promise \x3d promises[i];\n      goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, true), goog.partial(onSettled, i, false));\n    }\n  });\n};\ngoog.Promise.firstFulfilled \x3d function(promises) {\n  return new goog.Promise(function(resolve, reject) {\n    var toReject \x3d promises.length;\n    var reasons \x3d [];\n    if (!toReject) {\n      resolve(undefined);\n      return;\n    }\n    var onFulfill \x3d function(value) {\n      resolve(value);\n    };\n    var onReject \x3d function(index, reason) {\n      toReject--;\n      reasons[index] \x3d reason;\n      if (toReject \x3d\x3d 0) {\n        reject(reasons);\n      }\n    };\n    for (var i \x3d 0, promise; i \x3c promises.length; i++) {\n      promise \x3d promises[i];\n      goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));\n    }\n  });\n};\ngoog.Promise.withResolver \x3d function() {\n  var resolve, reject;\n  var promise \x3d new goog.Promise(function(rs, rj) {\n    resolve \x3d rs;\n    reject \x3d rj;\n  });\n  return new goog.Promise.Resolver_(promise, resolve, reject);\n};\ngoog.Promise.prototype.then \x3d function(opt_onFulfilled, opt_onRejected, opt_context) {\n  if (opt_onFulfilled !\x3d null) {\n    goog.asserts.assertFunction(opt_onFulfilled, \x22opt_onFulfilled should be a function.\x22);\n  }\n  if (opt_onRejected !\x3d null) {\n    goog.asserts.assertFunction(opt_onRejected, \x22opt_onRejected should be a function. Did you pass opt_context \x22 + \x22as the second argument instead of the third?\x22);\n  }\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error(\x22then\x22));\n  }\n  return this.addChildPromise_(typeof opt_onFulfilled \x3d\x3d\x3d \x22function\x22 ? opt_onFulfilled : null, typeof opt_onRejected \x3d\x3d\x3d \x22function\x22 ? opt_onRejected : null, opt_context);\n};\ngoog.Thenable.addImplementation(goog.Promise);\ngoog.Promise.prototype.thenVoid \x3d function(opt_onFulfilled, opt_onRejected, opt_context) {\n  if (opt_onFulfilled !\x3d null) {\n    goog.asserts.assertFunction(opt_onFulfilled, \x22opt_onFulfilled should be a function.\x22);\n  }\n  if (opt_onRejected !\x3d null) {\n    goog.asserts.assertFunction(opt_onRejected, \x22opt_onRejected should be a function. Did you pass opt_context \x22 + \x22as the second argument instead of the third?\x22);\n  }\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error(\x22then\x22));\n  }\n  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));\n};\ngoog.Promise.prototype.thenAlways \x3d function(onSettled, opt_context) {\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error(\x22thenAlways\x22));\n  }\n  var entry \x3d goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);\n  entry.always \x3d true;\n  this.addCallbackEntry_(entry);\n  return this;\n};\ngoog.Promise.prototype.thenCatch \x3d function(onRejected, opt_context) {\n  if (goog.Promise.LONG_STACK_TRACES) {\n    this.addStackTrace_(new Error(\x22thenCatch\x22));\n  }\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\ngoog.Promise.prototype.cancel \x3d function(opt_message) {\n  if (this.state_ \x3d\x3d goog.Promise.State_.PENDING) {\n    var err \x3d new goog.Promise.CancellationError(opt_message);\n    goog.async.run(function() {\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\ngoog.Promise.prototype.cancelInternal_ \x3d function(err) {\n  if (this.state_ \x3d\x3d goog.Promise.State_.PENDING) {\n    if (this.parent_) {\n      this.parent_.cancelChild_(this, err);\n      this.parent_ \x3d null;\n    } else {\n      this.resolve_(goog.Promise.State_.REJECTED, err);\n    }\n  }\n};\ngoog.Promise.prototype.cancelChild_ \x3d function(childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount \x3d 0;\n  var childEntry \x3d null;\n  var beforeChildEntry \x3d null;\n  for (var entry \x3d this.callbackEntries_; entry; entry \x3d entry.next) {\n    if (!entry.always) {\n      childCount++;\n      if (entry.child \x3d\x3d childPromise) {\n        childEntry \x3d entry;\n      }\n      if (childEntry \x26\x26 childCount \x3e 1) {\n        break;\n      }\n    }\n    if (!childEntry) {\n      beforeChildEntry \x3d entry;\n    }\n  }\n  if (childEntry) {\n    if (this.state_ \x3d\x3d goog.Promise.State_.PENDING \x26\x26 childCount \x3d\x3d 1) {\n      this.cancelInternal_(err);\n    } else {\n      if (beforeChildEntry) {\n        this.removeEntryAfter_(beforeChildEntry);\n      } else {\n        this.popEntry_();\n      }\n      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);\n    }\n  }\n};\ngoog.Promise.prototype.addCallbackEntry_ \x3d function(callbackEntry) {\n  if (!this.hasEntry_() \x26\x26 (this.state_ \x3d\x3d goog.Promise.State_.FULFILLED || this.state_ \x3d\x3d goog.Promise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  this.queueEntry_(callbackEntry);\n};\ngoog.Promise.prototype.addChildPromise_ \x3d function(onFulfilled, onRejected, opt_context) {\n  var callbackEntry \x3d goog.Promise.getCallbackEntry_(null, null, null);\n  callbackEntry.child \x3d new goog.Promise(function(resolve, reject) {\n    callbackEntry.onFulfilled \x3d onFulfilled ? function(value) {\n      try {\n        var result \x3d onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n    callbackEntry.onRejected \x3d onRejected ? function(reason) {\n      try {\n        var result \x3d onRejected.call(opt_context, reason);\n        if (result \x3d\x3d\x3d undefined \x26\x26 reason instanceof goog.Promise.CancellationError) {\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n  callbackEntry.child.parent_ \x3d this;\n  this.addCallbackEntry_(callbackEntry);\n  return callbackEntry.child;\n};\ngoog.Promise.prototype.unblockAndFulfill_ \x3d function(value) {\n  goog.asserts.assert(this.state_ \x3d\x3d goog.Promise.State_.BLOCKED);\n  this.state_ \x3d goog.Promise.State_.PENDING;\n  this.resolve_(goog.Promise.State_.FULFILLED, value);\n};\ngoog.Promise.prototype.unblockAndReject_ \x3d function(reason) {\n  goog.asserts.assert(this.state_ \x3d\x3d goog.Promise.State_.BLOCKED);\n  this.state_ \x3d goog.Promise.State_.PENDING;\n  this.resolve_(goog.Promise.State_.REJECTED, reason);\n};\ngoog.Promise.prototype.resolve_ \x3d function(state, x) {\n  if (this.state_ !\x3d goog.Promise.State_.PENDING) {\n    return;\n  }\n  if (this \x3d\x3d\x3d x) {\n    state \x3d goog.Promise.State_.REJECTED;\n    x \x3d new TypeError(\x22Promise cannot resolve to itself\x22);\n  }\n  this.state_ \x3d goog.Promise.State_.BLOCKED;\n  var isThenable \x3d goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);\n  if (isThenable) {\n    return;\n  }\n  this.result_ \x3d x;\n  this.state_ \x3d state;\n  this.parent_ \x3d null;\n  this.scheduleCallbacks_();\n  if (state \x3d\x3d goog.Promise.State_.REJECTED \x26\x26 !(x instanceof goog.Promise.CancellationError)) {\n    goog.Promise.addUnhandledRejection_(this, x);\n  }\n};\ngoog.Promise.maybeThen_ \x3d function(value, onFulfilled, onRejected, context) {\n  if (value instanceof goog.Promise) {\n    value.thenVoid(onFulfilled, onRejected, context);\n    return true;\n  } else if (goog.Thenable.isImplementedBy(value)) {\n    value \x3d value;\n    value.then(onFulfilled, onRejected, context);\n    return true;\n  } else if (goog.isObject(value)) {\n    const thenable \x3d value;\n    try {\n      var then \x3d thenable.then;\n      if (typeof then \x3d\x3d\x3d \x22function\x22) {\n        goog.Promise.tryThen_(thenable, then, onFulfilled, onRejected, context);\n        return true;\n      }\n    } catch (e) {\n      onRejected.call(context, e);\n      return true;\n    }\n  }\n  return false;\n};\ngoog.Promise.tryThen_ \x3d function(thenable, then, onFulfilled, onRejected, context) {\n  var called \x3d false;\n  var resolve \x3d function(value) {\n    if (!called) {\n      called \x3d true;\n      onFulfilled.call(context, value);\n    }\n  };\n  var reject \x3d function(reason) {\n    if (!called) {\n      called \x3d true;\n      onRejected.call(context, reason);\n    }\n  };\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\ngoog.Promise.prototype.scheduleCallbacks_ \x3d function() {\n  if (!this.executing_) {\n    this.executing_ \x3d true;\n    goog.async.run(this.executeCallbacks_, this);\n  }\n};\ngoog.Promise.prototype.hasEntry_ \x3d function() {\n  return !!this.callbackEntries_;\n};\ngoog.Promise.prototype.queueEntry_ \x3d function(entry) {\n  goog.asserts.assert(entry.onFulfilled !\x3d null);\n  if (this.callbackEntriesTail_) {\n    this.callbackEntriesTail_.next \x3d entry;\n    this.callbackEntriesTail_ \x3d entry;\n  } else {\n    this.callbackEntries_ \x3d entry;\n    this.callbackEntriesTail_ \x3d entry;\n  }\n};\ngoog.Promise.prototype.popEntry_ \x3d function() {\n  var entry \x3d null;\n  if (this.callbackEntries_) {\n    entry \x3d this.callbackEntries_;\n    this.callbackEntries_ \x3d entry.next;\n    entry.next \x3d null;\n  }\n  if (!this.callbackEntries_) {\n    this.callbackEntriesTail_ \x3d null;\n  }\n  if (entry !\x3d null) {\n    goog.asserts.assert(entry.onFulfilled !\x3d null);\n  }\n  return entry;\n};\ngoog.Promise.prototype.removeEntryAfter_ \x3d function(previous) {\n  goog.asserts.assert(this.callbackEntries_);\n  goog.asserts.assert(previous !\x3d null);\n  if (previous.next \x3d\x3d this.callbackEntriesTail_) {\n    this.callbackEntriesTail_ \x3d previous;\n  }\n  previous.next \x3d previous.next.next;\n};\ngoog.Promise.prototype.executeCallbacks_ \x3d function() {\n  var entry \x3d null;\n  while (entry \x3d this.popEntry_()) {\n    if (goog.Promise.LONG_STACK_TRACES) {\n      this.currentStep_++;\n    }\n    this.executeCallback_(entry, this.state_, this.result_);\n  }\n  this.executing_ \x3d false;\n};\ngoog.Promise.prototype.executeCallback_ \x3d function(callbackEntry, state, result) {\n  if (state \x3d\x3d goog.Promise.State_.REJECTED \x26\x26 callbackEntry.onRejected \x26\x26 !callbackEntry.always) {\n    this.removeUnhandledRejection_();\n  }\n  if (callbackEntry.child) {\n    callbackEntry.child.parent_ \x3d null;\n    goog.Promise.invokeCallback_(callbackEntry, state, result);\n  } else {\n    try {\n      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);\n    } catch (err) {\n      goog.Promise.handleRejection_.call(null, err);\n    }\n  }\n  goog.Promise.returnEntry_(callbackEntry);\n};\ngoog.Promise.invokeCallback_ \x3d function(callbackEntry, state, result) {\n  if (state \x3d\x3d goog.Promise.State_.FULFILLED) {\n    callbackEntry.onFulfilled.call(callbackEntry.context, result);\n  } else if (callbackEntry.onRejected) {\n    callbackEntry.onRejected.call(callbackEntry.context, result);\n  }\n};\ngoog.Promise.prototype.addStackTrace_ \x3d function(err) {\n  if (goog.Promise.LONG_STACK_TRACES \x26\x26 typeof err.stack \x3d\x3d\x3d \x22string\x22) {\n    var trace \x3d err.stack.split(\x22\\n\x22, 4)[3];\n    var message \x3d err.message;\n    message +\x3d Array(11 - message.length).join(\x22 \x22);\n    this.stack_.push(message + trace);\n  }\n};\ngoog.Promise.prototype.appendLongStack_ \x3d function(err) {\n  if (goog.Promise.LONG_STACK_TRACES \x26\x26 err \x26\x26 typeof err.stack \x3d\x3d\x3d \x22string\x22 \x26\x26 this.stack_.length) {\n    var longTrace \x3d [\x22Promise trace:\x22];\n    for (var promise \x3d this; promise; promise \x3d promise.parent_) {\n      for (var i \x3d this.currentStep_; i \x3e\x3d 0; i--) {\n        longTrace.push(promise.stack_[i]);\n      }\n      longTrace.push(\x22Value: \x22 + \x22[\x22 + (promise.state_ \x3d\x3d goog.Promise.State_.REJECTED ? \x22REJECTED\x22 : \x22FULFILLED\x22) + \x22] \x22 + \x22\\x3c\x22 + String(promise.result_) + \x22\\x3e\x22);\n    }\n    err.stack +\x3d \x22\\n\\n\x22 + longTrace.join(\x22\\n\x22);\n  }\n};\ngoog.Promise.prototype.removeUnhandledRejection_ \x3d function() {\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY \x3e 0) {\n    for (var p \x3d this; p \x26\x26 p.unhandledRejectionId_; p \x3d p.parent_) {\n      goog.global.clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ \x3d 0;\n    }\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY \x3d\x3d 0) {\n    for (var p \x3d this; p \x26\x26 p.hadUnhandledRejection_; p \x3d p.parent_) {\n      p.hadUnhandledRejection_ \x3d false;\n    }\n  }\n};\ngoog.Promise.addUnhandledRejection_ \x3d function(promise, reason) {\n  if (goog.Promise.UNHANDLED_REJECTION_DELAY \x3e 0) {\n    promise.unhandledRejectionId_ \x3d goog.global.setTimeout(function() {\n      promise.appendLongStack_(reason);\n      goog.Promise.handleRejection_.call(null, reason);\n    }, goog.Promise.UNHANDLED_REJECTION_DELAY);\n  } else if (goog.Promise.UNHANDLED_REJECTION_DELAY \x3d\x3d 0) {\n    promise.hadUnhandledRejection_ \x3d true;\n    goog.async.run(function() {\n      if (promise.hadUnhandledRejection_) {\n        promise.appendLongStack_(reason);\n        goog.Promise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\ngoog.Promise.handleRejection_ \x3d goog.async.throwException;\ngoog.Promise.setUnhandledRejectionHandler \x3d function(handler) {\n  goog.Promise.handleRejection_ \x3d handler;\n};\ngoog.Promise.CancellationError \x3d function(opt_message) {\n  goog.Promise.CancellationError.base(this, \x22constructor\x22, opt_message);\n  this.reportErrorToServer \x3d false;\n};\ngoog.inherits(goog.Promise.CancellationError, goog.debug.Error);\ngoog.Promise.CancellationError.prototype.name \x3d \x22cancel\x22;\ngoog.Promise.Resolver_ \x3d function(promise, resolve, reject) {\n  this.promise \x3d promise;\n  this.resolve \x3d resolve;\n  this.reject \x3d reject;\n};\n");
SHADOW_ENV.evalLoad("goog.timer.timer.js", true , "goog.provide(\x22goog.Timer\x22);\ngoog.require(\x22goog.Promise\x22);\ngoog.require(\x22goog.events.EventTarget\x22);\ngoog.requireType(\x22goog.Thenable\x22);\ngoog.Timer \x3d function(opt_interval, opt_timerObject) {\n  goog.events.EventTarget.call(this);\n  this.interval_ \x3d opt_interval || 1;\n  this.timerObject_ \x3d opt_timerObject || goog.Timer.defaultTimerObject;\n  this.boundTick_ \x3d goog.bind(this.tick_, this);\n  this.last_ \x3d goog.now();\n};\ngoog.inherits(goog.Timer, goog.events.EventTarget);\ngoog.Timer.MAX_TIMEOUT_ \x3d 2147483647;\ngoog.Timer.INVALID_TIMEOUT_ID_ \x3d -1;\ngoog.Timer.prototype.enabled \x3d false;\ngoog.Timer.defaultTimerObject \x3d goog.global;\ngoog.Timer.intervalScale \x3d 0.8;\ngoog.Timer.prototype.timer_ \x3d null;\ngoog.Timer.prototype.getInterval \x3d function() {\n  return this.interval_;\n};\ngoog.Timer.prototype.setInterval \x3d function(interval) {\n  this.interval_ \x3d interval;\n  if (this.timer_ \x26\x26 this.enabled) {\n    this.stop();\n    this.start();\n  } else if (this.timer_) {\n    this.stop();\n  }\n};\ngoog.Timer.prototype.tick_ \x3d function() {\n  if (this.enabled) {\n    var elapsed \x3d goog.now() - this.last_;\n    if (elapsed \x3e 0 \x26\x26 elapsed \x3c this.interval_ * goog.Timer.intervalScale) {\n      this.timer_ \x3d this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);\n      return;\n    }\n    if (this.timer_) {\n      this.timerObject_.clearTimeout(this.timer_);\n      this.timer_ \x3d null;\n    }\n    this.dispatchTick();\n    if (this.enabled) {\n      this.stop();\n      this.start();\n    }\n  }\n};\ngoog.Timer.prototype.dispatchTick \x3d function() {\n  this.dispatchEvent(goog.Timer.TICK);\n};\ngoog.Timer.prototype.start \x3d function() {\n  this.enabled \x3d true;\n  if (!this.timer_) {\n    this.timer_ \x3d this.timerObject_.setTimeout(this.boundTick_, this.interval_);\n    this.last_ \x3d goog.now();\n  }\n};\ngoog.Timer.prototype.stop \x3d function() {\n  this.enabled \x3d false;\n  if (this.timer_) {\n    this.timerObject_.clearTimeout(this.timer_);\n    this.timer_ \x3d null;\n  }\n};\ngoog.Timer.prototype.disposeInternal \x3d function() {\n  goog.Timer.superClass_.disposeInternal.call(this);\n  this.stop();\n  delete this.timerObject_;\n};\ngoog.Timer.TICK \x3d \x22tick\x22;\ngoog.Timer.callOnce \x3d function(listener, opt_delay, opt_handler) {\n  if (typeof listener \x3d\x3d\x3d \x22function\x22) {\n    if (opt_handler) {\n      listener \x3d goog.bind(listener, opt_handler);\n    }\n  } else if (listener \x26\x26 typeof listener.handleEvent \x3d\x3d \x22function\x22) {\n    listener \x3d goog.bind(listener.handleEvent, listener);\n  } else {\n    throw new Error(\x22Invalid listener argument\x22);\n  }\n  if (Number(opt_delay) \x3e goog.Timer.MAX_TIMEOUT_) {\n    return goog.Timer.INVALID_TIMEOUT_ID_;\n  } else {\n    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);\n  }\n};\ngoog.Timer.clear \x3d function(timerId) {\n  goog.Timer.defaultTimerObject.clearTimeout(timerId);\n};\ngoog.Timer.promise \x3d function(delay, opt_result) {\n  var timerKey \x3d null;\n  return (new goog.Promise(function(resolve, reject) {\n    timerKey \x3d goog.Timer.callOnce(function() {\n      resolve(opt_result);\n    }, delay);\n    if (timerKey \x3d\x3d goog.Timer.INVALID_TIMEOUT_ID_) {\n      reject(new Error(\x22Failed to schedule timer.\x22));\n    }\n  })).thenCatch(function(error) {\n    goog.Timer.clear(timerKey);\n    throw error;\n  });\n};\n");
SHADOW_ENV.evalLoad("goog.json.json.js", true , "goog.provide(\x22goog.json\x22);\ngoog.provide(\x22goog.json.Replacer\x22);\ngoog.provide(\x22goog.json.Reviver\x22);\ngoog.provide(\x22goog.json.Serializer\x22);\ngoog.json.USE_NATIVE_JSON \x3d goog.define(\x22goog.json.USE_NATIVE_JSON\x22, false);\ngoog.json.TRY_NATIVE_JSON \x3d goog.define(\x22goog.json.TRY_NATIVE_JSON\x22, true);\ngoog.json.isValid \x3d function(s) {\n  if (/^\\s*$/.test(s)) {\n    return false;\n  }\n  const backslashesRe \x3d /\\\\[\x22\\\\\\/bfnrtu]/g;\n  const simpleValuesRe \x3d /(?:\x22[^\x22\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\x22|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?\x3d:|,|]|}|$)/g;\n  const openBracketsRe \x3d /(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g;\n  const remainderRe \x3d /^[\\],:{}\\s\\u2028\\u2029]*$/;\n  return remainderRe.test(s.replace(backslashesRe, \x22@\x22).replace(simpleValuesRe, \x22]\x22).replace(openBracketsRe, \x22\x22));\n};\ngoog.json.errorLogger_ \x3d goog.nullFunction;\ngoog.json.setErrorLogger \x3d function(errorLogger) {\n  goog.json.errorLogger_ \x3d errorLogger;\n};\ngoog.json.parse \x3d goog.json.USE_NATIVE_JSON ? goog.global[\x22JSON\x22][\x22parse\x22] : function(s) {\n  let error;\n  if (goog.json.TRY_NATIVE_JSON) {\n    try {\n      return goog.global[\x22JSON\x22][\x22parse\x22](s);\n    } catch (ex) {\n      error \x3d ex;\n    }\n  }\n  const o \x3d String(s);\n  if (goog.json.isValid(o)) {\n    try {\n      const result \x3d eval(\x22(\x22 + o + \x22)\x22);\n      if (error) {\n        goog.json.errorLogger_(\x22Invalid JSON: \x22 + o, error);\n      }\n      return result;\n    } catch (ex) {\n    }\n  }\n  throw new Error(\x22Invalid JSON string: \x22 + o);\n};\ngoog.json.Replacer;\ngoog.json.Reviver;\ngoog.json.serialize \x3d goog.json.USE_NATIVE_JSON ? goog.global[\x22JSON\x22][\x22stringify\x22] : function(object, opt_replacer) {\n  return (new goog.json.Serializer(opt_replacer)).serialize(object);\n};\ngoog.json.Serializer \x3d function(opt_replacer) {\n  this.replacer_ \x3d opt_replacer;\n};\ngoog.json.Serializer.prototype.serialize \x3d function(object) {\n  const sb \x3d [];\n  this.serializeInternal(object, sb);\n  return sb.join(\x22\x22);\n};\ngoog.json.Serializer.prototype.serializeInternal \x3d function(object, sb) {\n  if (object \x3d\x3d null) {\n    sb.push(\x22null\x22);\n    return;\n  }\n  if (typeof object \x3d\x3d \x22object\x22) {\n    if (Array.isArray(object)) {\n      this.serializeArray(object, sb);\n      return;\n    } else if (object instanceof String || object instanceof Number || object instanceof Boolean) {\n      object \x3d object.valueOf();\n    } else {\n      this.serializeObject_(object, sb);\n      return;\n    }\n  }\n  switch(typeof object) {\n    case \x22string\x22:\n      this.serializeString_(object, sb);\n      break;\n    case \x22number\x22:\n      this.serializeNumber_(object, sb);\n      break;\n    case \x22boolean\x22:\n      sb.push(String(object));\n      break;\n    case \x22function\x22:\n      sb.push(\x22null\x22);\n      break;\n    default:\n      throw new Error(\x22Unknown type: \x22 + typeof object);\n  }\n};\ngoog.json.Serializer.charToJsonCharCache_ \x3d {\x27\x22\x27:\x27\\\\\x22\x27, \x22\\\\\x22:\x22\\\\\\\\\x22, \x22/\x22:\x22\\\\/\x22, \x22\\b\x22:\x22\\\\b\x22, \x22\\f\x22:\x22\\\\f\x22, \x22\\n\x22:\x22\\\\n\x22, \x22\\r\x22:\x22\\\\r\x22, \x22\\t\x22:\x22\\\\t\x22, \x22\\v\x22:\x22\\\\u000b\x22};\ngoog.json.Serializer.charsToReplace_ \x3d /\\uffff/.test(\x22\uffff\x22) ? /[\\\\\x22\\x00-\\x1f\\x7f-\\uffff]/g : /[\\\\\x22\\x00-\\x1f\\x7f-\\xff]/g;\ngoog.json.Serializer.prototype.serializeString_ \x3d function(s, sb) {\n  sb.push(\x27\x22\x27, s.replace(goog.json.Serializer.charsToReplace_, function(c) {\n    let rv \x3d goog.json.Serializer.charToJsonCharCache_[c];\n    if (!rv) {\n      rv \x3d \x22\\\\u\x22 + (c.charCodeAt(0) | 65536).toString(16).substr(1);\n      goog.json.Serializer.charToJsonCharCache_[c] \x3d rv;\n    }\n    return rv;\n  }), \x27\x22\x27);\n};\ngoog.json.Serializer.prototype.serializeNumber_ \x3d function(n, sb) {\n  sb.push(isFinite(n) \x26\x26 !isNaN(n) ? String(n) : \x22null\x22);\n};\ngoog.json.Serializer.prototype.serializeArray \x3d function(arr, sb) {\n  const l \x3d arr.length;\n  sb.push(\x22[\x22);\n  let sep \x3d \x22\x22;\n  for (let i \x3d 0; i \x3c l; i++) {\n    sb.push(sep);\n    const value \x3d arr[i];\n    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);\n    sep \x3d \x22,\x22;\n  }\n  sb.push(\x22]\x22);\n};\ngoog.json.Serializer.prototype.serializeObject_ \x3d function(obj, sb) {\n  sb.push(\x22{\x22);\n  let sep \x3d \x22\x22;\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const value \x3d obj[key];\n      if (typeof value !\x3d \x22function\x22) {\n        sb.push(sep);\n        this.serializeString_(key, sb);\n        sb.push(\x22:\x22);\n        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);\n        sep \x3d \x22,\x22;\n      }\n    }\n  }\n  sb.push(\x22}\x22);\n};\n");
SHADOW_ENV.evalLoad("goog.json.hybrid.js", true , "goog.provide(\x22goog.json.hybrid\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.json\x22);\ngoog.json.hybrid.stringify \x3d goog.json.USE_NATIVE_JSON ? goog.global[\x22JSON\x22][\x22stringify\x22] : function(obj) {\n  if (goog.global.JSON) {\n    try {\n      return goog.global.JSON.stringify(obj);\n    } catch (e) {\n    }\n  }\n  return goog.json.serialize(obj);\n};\ngoog.json.hybrid.parse_ \x3d function(jsonString, fallbackParser) {\n  if (goog.global.JSON) {\n    try {\n      var obj \x3d goog.global.JSON.parse(jsonString);\n      goog.asserts.assert(typeof obj \x3d\x3d \x22object\x22);\n      return obj;\n    } catch (e) {\n    }\n  }\n  return fallbackParser(jsonString);\n};\ngoog.json.hybrid.parse \x3d goog.json.USE_NATIVE_JSON ? goog.global[\x22JSON\x22][\x22parse\x22] : function(jsonString) {\n  return goog.json.hybrid.parse_(jsonString, goog.json.parse);\n};\n");
SHADOW_ENV.evalLoad("goog.log.log.js", true , "goog.provide(\x22goog.log\x22);\ngoog.provide(\x22goog.log.Level\x22);\ngoog.provide(\x22goog.log.LogBuffer\x22);\ngoog.provide(\x22goog.log.LogRecord\x22);\ngoog.provide(\x22goog.log.Logger\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.debug\x22);\ngoog.log.Loggable;\ngoog.log.ENABLED \x3d goog.define(\x22goog.log.ENABLED\x22, goog.debug.LOGGING_ENABLED);\ngoog.log.ROOT_LOGGER_NAME \x3d \x22\x22;\ngoog.log.Level \x3d class Level {\n  constructor(name, value) {\n    this.name \x3d name;\n    this.value \x3d value;\n  }\n  toString() {\n    return this.name;\n  }\n};\ngoog.log.Level.OFF \x3d new goog.log.Level(\x22OFF\x22, Infinity);\ngoog.log.Level.SHOUT \x3d new goog.log.Level(\x22SHOUT\x22, 1200);\ngoog.log.Level.SEVERE \x3d new goog.log.Level(\x22SEVERE\x22, 1000);\ngoog.log.Level.WARNING \x3d new goog.log.Level(\x22WARNING\x22, 900);\ngoog.log.Level.INFO \x3d new goog.log.Level(\x22INFO\x22, 800);\ngoog.log.Level.CONFIG \x3d new goog.log.Level(\x22CONFIG\x22, 700);\ngoog.log.Level.FINE \x3d new goog.log.Level(\x22FINE\x22, 500);\ngoog.log.Level.FINER \x3d new goog.log.Level(\x22FINER\x22, 400);\ngoog.log.Level.FINEST \x3d new goog.log.Level(\x22FINEST\x22, 300);\ngoog.log.Level.ALL \x3d new goog.log.Level(\x22ALL\x22, 0);\ngoog.log.Level.PREDEFINED_LEVELS \x3d [goog.log.Level.OFF, goog.log.Level.SHOUT, goog.log.Level.SEVERE, goog.log.Level.WARNING, goog.log.Level.INFO, goog.log.Level.CONFIG, goog.log.Level.FINE, goog.log.Level.FINER, goog.log.Level.FINEST, goog.log.Level.ALL];\ngoog.log.Level.predefinedLevelsCache_ \x3d null;\ngoog.log.Level.createPredefinedLevelsCache_ \x3d function() {\n  goog.log.Level.predefinedLevelsCache_ \x3d {};\n  for (let i \x3d 0, level; level \x3d goog.log.Level.PREDEFINED_LEVELS[i]; i++) {\n    goog.log.Level.predefinedLevelsCache_[level.value] \x3d level;\n    goog.log.Level.predefinedLevelsCache_[level.name] \x3d level;\n  }\n};\ngoog.log.Level.getPredefinedLevel \x3d function(name) {\n  if (!goog.log.Level.predefinedLevelsCache_) {\n    goog.log.Level.createPredefinedLevelsCache_();\n  }\n  return goog.log.Level.predefinedLevelsCache_[name] || null;\n};\ngoog.log.Level.getPredefinedLevelByValue \x3d function(value) {\n  if (!goog.log.Level.predefinedLevelsCache_) {\n    goog.log.Level.createPredefinedLevelsCache_();\n  }\n  if (value in goog.log.Level.predefinedLevelsCache_) {\n    return goog.log.Level.predefinedLevelsCache_[value];\n  }\n  for (let i \x3d 0; i \x3c goog.log.Level.PREDEFINED_LEVELS.length; ++i) {\n    let level \x3d goog.log.Level.PREDEFINED_LEVELS[i];\n    if (level.value \x3c\x3d value) {\n      return level;\n    }\n  }\n  return null;\n};\ngoog.log.Logger \x3d class Logger {\n  getName() {\n  }\n};\ngoog.log.Logger.Level \x3d goog.log.Level;\ngoog.log.LogBuffer \x3d class LogBuffer {\n  constructor(capacity) {\n    this.capacity_ \x3d typeof capacity \x3d\x3d\x3d \x22number\x22 ? capacity : goog.log.LogBuffer.CAPACITY;\n    this.buffer_;\n    this.curIndex_;\n    this.isFull_;\n    this.clear();\n  }\n  addRecord(level, msg, loggerName) {\n    if (!this.isBufferingEnabled()) {\n      return new goog.log.LogRecord(level, msg, loggerName);\n    }\n    const curIndex \x3d (this.curIndex_ + 1) % this.capacity_;\n    this.curIndex_ \x3d curIndex;\n    if (this.isFull_) {\n      const ret \x3d this.buffer_[curIndex];\n      ret.reset(level, msg, loggerName);\n      return ret;\n    }\n    this.isFull_ \x3d curIndex \x3d\x3d this.capacity_ - 1;\n    return this.buffer_[curIndex] \x3d new goog.log.LogRecord(level, msg, loggerName);\n  }\n  forEachRecord(func) {\n    const buffer \x3d this.buffer_;\n    if (!buffer[0]) {\n      return;\n    }\n    const curIndex \x3d this.curIndex_;\n    let i \x3d this.isFull_ ? curIndex : -1;\n    do {\n      i \x3d (i + 1) % this.capacity_;\n      func(buffer[i]);\n    } while (i !\x3d\x3d curIndex);\n  }\n  isBufferingEnabled() {\n    return this.capacity_ \x3e 0;\n  }\n  isFull() {\n    return this.isFull_;\n  }\n  clear() {\n    this.buffer_ \x3d new Array(this.capacity_);\n    this.curIndex_ \x3d -1;\n    this.isFull_ \x3d false;\n  }\n};\ngoog.log.LogBuffer.instance_;\ngoog.log.LogBuffer.CAPACITY \x3d goog.define(\x22goog.debug.LogBuffer.CAPACITY\x22, 0);\ngoog.log.LogBuffer.getInstance \x3d function() {\n  if (!goog.log.LogBuffer.instance_) {\n    goog.log.LogBuffer.instance_ \x3d new goog.log.LogBuffer(goog.log.LogBuffer.CAPACITY);\n  }\n  return goog.log.LogBuffer.instance_;\n};\ngoog.log.LogBuffer.isBufferingEnabled \x3d function() {\n  return goog.log.LogBuffer.getInstance().isBufferingEnabled();\n};\ngoog.log.LogRecord \x3d class LogRecord {\n  constructor(level, msg, loggerName, time, sequenceNumber) {\n    this.level_;\n    this.loggerName_;\n    this.msg_;\n    this.time_;\n    this.sequenceNumber_;\n    this.exception_ \x3d undefined;\n    this.reset(level || goog.log.Level.OFF, msg, loggerName, time, sequenceNumber);\n  }\n  reset(level, msg, loggerName, time, sequenceNumber) {\n    this.time_ \x3d time || goog.now();\n    this.level_ \x3d level;\n    this.msg_ \x3d msg;\n    this.loggerName_ \x3d loggerName;\n    this.exception_ \x3d undefined;\n    this.sequenceNumber_ \x3d typeof sequenceNumber \x3d\x3d\x3d \x22number\x22 ? sequenceNumber : goog.log.LogRecord.nextSequenceNumber_;\n  }\n  getLoggerName() {\n    return this.loggerName_;\n  }\n  setLoggerName(name) {\n    this.loggerName_ \x3d name;\n  }\n  getException() {\n    return this.exception_;\n  }\n  setException(exception) {\n    this.exception_ \x3d exception;\n  }\n  getLevel() {\n    return this.level_;\n  }\n  setLevel(level) {\n    this.level_ \x3d level;\n  }\n  getMessage() {\n    return this.msg_;\n  }\n  setMessage(msg) {\n    this.msg_ \x3d msg;\n  }\n  getMillis() {\n    return this.time_;\n  }\n  setMillis(time) {\n    this.time_ \x3d time;\n  }\n  getSequenceNumber() {\n    return this.sequenceNumber_;\n  }\n};\ngoog.log.LogRecord.nextSequenceNumber_ \x3d 0;\ngoog.log.LogRecordHandler;\ngoog.log.LogRegistryEntry_ \x3d class LogRegistryEntry_ {\n  constructor(name, parent \x3d null) {\n    this.level \x3d null;\n    this.handlers \x3d [];\n    this.parent \x3d parent || null;\n    this.children \x3d [];\n    this.logger \x3d {getName:() \x3d\x3e name};\n  }\n  getEffectiveLevel() {\n    if (this.level) {\n      return this.level;\n    } else if (this.parent) {\n      return this.parent.getEffectiveLevel();\n    }\n    goog.asserts.fail(\x22Root logger has no level set.\x22);\n    return goog.log.Level.OFF;\n  }\n  publish(logRecord) {\n    let target \x3d this;\n    while (target) {\n      target.handlers.forEach(handler \x3d\x3e {\n        handler(logRecord);\n      });\n      target \x3d target.parent;\n    }\n  }\n};\ngoog.log.LogRegistry_ \x3d class LogRegistry_ {\n  constructor() {\n    this.entries \x3d {};\n    const rootLogRegistryEntry \x3d new goog.log.LogRegistryEntry_(goog.log.ROOT_LOGGER_NAME);\n    rootLogRegistryEntry.level \x3d goog.log.Level.CONFIG;\n    this.entries[goog.log.ROOT_LOGGER_NAME] \x3d rootLogRegistryEntry;\n  }\n  getLogRegistryEntry(name, level) {\n    const entry \x3d this.entries[name];\n    if (entry) {\n      if (level !\x3d\x3d undefined) {\n        entry.level \x3d level;\n      }\n      return entry;\n    } else {\n      const lastDotIndex \x3d name.lastIndexOf(\x22.\x22);\n      const parentName \x3d name.substr(0, lastDotIndex);\n      const parentLogRegistryEntry \x3d this.getLogRegistryEntry(parentName);\n      const logRegistryEntry \x3d new goog.log.LogRegistryEntry_(name, parentLogRegistryEntry);\n      this.entries[name] \x3d logRegistryEntry;\n      parentLogRegistryEntry.children.push(logRegistryEntry);\n      if (level !\x3d\x3d undefined) {\n        logRegistryEntry.level \x3d level;\n      }\n      return logRegistryEntry;\n    }\n  }\n  getAllLoggers() {\n    return Object.keys(this.entries).map(loggerName \x3d\x3e this.entries[loggerName].logger);\n  }\n};\ngoog.log.LogRegistry_.getInstance \x3d function() {\n  if (!goog.log.LogRegistry_.instance_) {\n    goog.log.LogRegistry_.instance_ \x3d new goog.log.LogRegistry_();\n  }\n  return goog.log.LogRegistry_.instance_;\n};\ngoog.log.LogRegistry_.instance_;\ngoog.log.getLogger \x3d function(name, level) {\n  if (goog.log.ENABLED) {\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(name, level);\n    return loggerEntry.logger;\n  } else {\n    return null;\n  }\n};\ngoog.log.getRootLogger \x3d function() {\n  if (goog.log.ENABLED) {\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(goog.log.ROOT_LOGGER_NAME);\n    return loggerEntry.logger;\n  } else {\n    return null;\n  }\n};\ngoog.log.addHandler \x3d function(logger, handler) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName());\n    loggerEntry.handlers.push(handler);\n  }\n};\ngoog.log.removeHandler \x3d function(logger, handler) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName());\n    const indexOfHandler \x3d loggerEntry.handlers.indexOf(handler);\n    if (indexOfHandler !\x3d\x3d -1) {\n      loggerEntry.handlers.splice(indexOfHandler, 1);\n      return true;\n    }\n  }\n  return false;\n};\ngoog.log.setLevel \x3d function(logger, level) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName());\n    loggerEntry.level \x3d level;\n  }\n};\ngoog.log.getLevel \x3d function(logger) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName());\n    return loggerEntry.level;\n  }\n  return null;\n};\ngoog.log.getEffectiveLevel \x3d function(logger) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName());\n    return loggerEntry.getEffectiveLevel();\n  }\n  return goog.log.Level.OFF;\n};\ngoog.log.isLoggable \x3d function(logger, level) {\n  if (goog.log.ENABLED \x26\x26 logger \x26\x26 level) {\n    return level.value \x3e\x3d goog.log.getEffectiveLevel(logger).value;\n  }\n  return false;\n};\ngoog.log.getAllLoggers \x3d function() {\n  if (goog.log.ENABLED) {\n    return goog.log.LogRegistry_.getInstance().getAllLoggers();\n  }\n  return [];\n};\ngoog.log.getLogRecord \x3d function(logger, level, msg, exception \x3d undefined) {\n  const logRecord \x3d goog.log.LogBuffer.getInstance().addRecord(level || goog.log.Level.OFF, msg, logger.getName());\n  logRecord.setException(exception);\n  return logRecord;\n};\ngoog.log.publishLogRecord \x3d function(logger, logRecord) {\n  if (goog.log.ENABLED \x26\x26 logger \x26\x26 goog.log.isLoggable(logger, logRecord.getLevel())) {\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName());\n    loggerEntry.publish(logRecord);\n  }\n};\ngoog.log.log \x3d function(logger, level, msg, exception \x3d undefined) {\n  if (goog.log.ENABLED \x26\x26 logger \x26\x26 goog.log.isLoggable(logger, level)) {\n    level \x3d level || goog.log.Level.OFF;\n    const loggerEntry \x3d goog.log.LogRegistry_.getInstance().getLogRegistryEntry(logger.getName());\n    if (typeof msg \x3d\x3d\x3d \x22function\x22) {\n      msg \x3d msg();\n    }\n    const logRecord \x3d goog.log.LogBuffer.getInstance().addRecord(level, msg, logger.getName());\n    logRecord.setException(exception);\n    loggerEntry.publish(logRecord);\n  }\n};\ngoog.log.error \x3d function(logger, msg, exception \x3d undefined) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    goog.log.log(logger, goog.log.Level.SEVERE, msg, exception);\n  }\n};\ngoog.log.warning \x3d function(logger, msg, exception \x3d undefined) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    goog.log.log(logger, goog.log.Level.WARNING, msg, exception);\n  }\n};\ngoog.log.info \x3d function(logger, msg, exception \x3d undefined) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    goog.log.log(logger, goog.log.Level.INFO, msg, exception);\n  }\n};\ngoog.log.fine \x3d function(logger, msg, exception \x3d undefined) {\n  if (goog.log.ENABLED \x26\x26 logger) {\n    goog.log.log(logger, goog.log.Level.FINE, msg, exception);\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.net.errorcode.js", true , "goog.provide(\x22goog.net.ErrorCode\x22);\ngoog.net.ErrorCode \x3d {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9,};\ngoog.net.ErrorCode.getDebugMessage \x3d function(errorCode) {\n  switch(errorCode) {\n    case goog.net.ErrorCode.NO_ERROR:\n      return \x22No Error\x22;\n    case goog.net.ErrorCode.ACCESS_DENIED:\n      return \x22Access denied to content document\x22;\n    case goog.net.ErrorCode.FILE_NOT_FOUND:\n      return \x22File not found\x22;\n    case goog.net.ErrorCode.FF_SILENT_ERROR:\n      return \x22Firefox silently errored\x22;\n    case goog.net.ErrorCode.CUSTOM_ERROR:\n      return \x22Application custom error\x22;\n    case goog.net.ErrorCode.EXCEPTION:\n      return \x22An exception occurred\x22;\n    case goog.net.ErrorCode.HTTP_ERROR:\n      return \x22Http response at 400 or 500 level\x22;\n    case goog.net.ErrorCode.ABORT:\n      return \x22Request was aborted\x22;\n    case goog.net.ErrorCode.TIMEOUT:\n      return \x22Request timed out\x22;\n    case goog.net.ErrorCode.OFFLINE:\n      return \x22The resource is not available offline\x22;\n    default:\n      return \x22Unrecognized error code\x22;\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.net.eventtype.js", true , "goog.provide(\x22goog.net.EventType\x22);\ngoog.net.EventType \x3d {COMPLETE:\x22complete\x22, SUCCESS:\x22success\x22, ERROR:\x22error\x22, ABORT:\x22abort\x22, READY:\x22ready\x22, READY_STATE_CHANGE:\x22readystatechange\x22, TIMEOUT:\x22timeout\x22, INCREMENTAL_DATA:\x22incrementaldata\x22, PROGRESS:\x22progress\x22, DOWNLOAD_PROGRESS:\x22downloadprogress\x22, UPLOAD_PROGRESS:\x22uploadprogress\x22,};\n");
SHADOW_ENV.evalLoad("goog.net.httpstatus.js", true , "goog.provide(\x22goog.net.HttpStatus\x22);\ngoog.net.HttpStatus \x3d {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTI_STATUS:207, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, PERMANENT_REDIRECT:308, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, \nREQUEST_TIMEOUT:408, CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, UNPROCESSABLE_ENTITY:422, LOCKED:423, FAILED_DEPENDENCY:424, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, CLIENT_CLOSED_REQUEST:499, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, \nHTTP_VERSION_NOT_SUPPORTED:505, INSUFFICIENT_STORAGE:507, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223,};\ngoog.net.HttpStatus.isSuccess \x3d function(status) {\n  switch(status) {\n    case goog.net.HttpStatus.OK:\n    case goog.net.HttpStatus.CREATED:\n    case goog.net.HttpStatus.ACCEPTED:\n    case goog.net.HttpStatus.NO_CONTENT:\n    case goog.net.HttpStatus.PARTIAL_CONTENT:\n    case goog.net.HttpStatus.NOT_MODIFIED:\n    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:\n      return true;\n    default:\n      return false;\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.net.xhrlike.js", true , "goog.provide(\x22goog.net.XhrLike\x22);\ngoog.net.XhrLike \x3d function() {\n};\ngoog.net.XhrLike.OrNative;\ngoog.net.XhrLike.prototype.onreadystatechange;\ngoog.net.XhrLike.prototype.response;\ngoog.net.XhrLike.prototype.responseText;\ngoog.net.XhrLike.prototype.responseType;\ngoog.net.XhrLike.prototype.responseXML;\ngoog.net.XhrLike.prototype.readyState;\ngoog.net.XhrLike.prototype.status;\ngoog.net.XhrLike.prototype.statusText;\ngoog.net.XhrLike.prototype.open \x3d function(method, url, opt_async, opt_user, opt_password) {\n};\ngoog.net.XhrLike.prototype.send \x3d function(opt_data) {\n};\ngoog.net.XhrLike.prototype.abort \x3d function() {\n};\ngoog.net.XhrLike.prototype.setRequestHeader \x3d function(header, value) {\n};\ngoog.net.XhrLike.prototype.getResponseHeader \x3d function(header) {\n};\ngoog.net.XhrLike.prototype.getAllResponseHeaders \x3d function() {\n};\ngoog.net.XhrLike.prototype.setTrustToken \x3d function(trustTokenAttribute) {\n};\n");
SHADOW_ENV.evalLoad("goog.net.xmlhttpfactory.js", true , "goog.provide(\x22goog.net.XmlHttpFactory\x22);\ngoog.require(\x22goog.net.XhrLike\x22);\ngoog.net.XmlHttpFactory \x3d function() {\n};\ngoog.net.XmlHttpFactory.prototype.cachedOptions_ \x3d null;\ngoog.net.XmlHttpFactory.prototype.createInstance \x3d goog.abstractMethod;\ngoog.net.XmlHttpFactory.prototype.getOptions \x3d function() {\n  return this.cachedOptions_ || (this.cachedOptions_ \x3d this.internalGetOptions());\n};\ngoog.net.XmlHttpFactory.prototype.internalGetOptions \x3d goog.abstractMethod;\n");
SHADOW_ENV.evalLoad("goog.net.wrapperxmlhttpfactory.js", true , "goog.provide(\x22goog.net.WrapperXmlHttpFactory\x22);\ngoog.require(\x22goog.net.XhrLike\x22);\ngoog.require(\x22goog.net.XmlHttpFactory\x22);\ngoog.net.WrapperXmlHttpFactory \x3d function(xhrFactory, optionsFactory) {\n  goog.net.XmlHttpFactory.call(this);\n  this.xhrFactory_ \x3d xhrFactory;\n  this.optionsFactory_ \x3d optionsFactory;\n};\ngoog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);\ngoog.net.WrapperXmlHttpFactory.prototype.createInstance \x3d function() {\n  return this.xhrFactory_();\n};\ngoog.net.WrapperXmlHttpFactory.prototype.getOptions \x3d function() {\n  return this.optionsFactory_();\n};\n");
SHADOW_ENV.evalLoad("goog.net.xmlhttp.js", true , "goog.provide(\x22goog.net.DefaultXmlHttpFactory\x22);\ngoog.provide(\x22goog.net.XmlHttp\x22);\ngoog.provide(\x22goog.net.XmlHttp.OptionType\x22);\ngoog.provide(\x22goog.net.XmlHttp.ReadyState\x22);\ngoog.provide(\x22goog.net.XmlHttpDefines\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.net.WrapperXmlHttpFactory\x22);\ngoog.require(\x22goog.net.XmlHttpFactory\x22);\ngoog.requireType(\x22goog.net.XhrLike\x22);\ngoog.net.XmlHttp \x3d function() {\n  return goog.net.XmlHttp.factory_.createInstance();\n};\ngoog.net.XmlHttp.ASSUME_NATIVE_XHR \x3d goog.define(\x22goog.net.XmlHttp.ASSUME_NATIVE_XHR\x22, false);\ngoog.net.XmlHttpDefines \x3d {};\ngoog.net.XmlHttpDefines.ASSUME_NATIVE_XHR \x3d goog.define(\x22goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR\x22, false);\ngoog.net.XmlHttp.getOptions \x3d function() {\n  return goog.net.XmlHttp.factory_.getOptions();\n};\ngoog.net.XmlHttp.OptionType \x3d {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1,};\ngoog.net.XmlHttp.ReadyState \x3d {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4,};\ngoog.net.XmlHttp.factory_;\ngoog.net.XmlHttp.setFactory \x3d function(factory, optionsFactory) {\n  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));\n};\ngoog.net.XmlHttp.setGlobalFactory \x3d function(factory) {\n  goog.net.XmlHttp.factory_ \x3d factory;\n};\ngoog.net.DefaultXmlHttpFactory \x3d function() {\n  goog.net.XmlHttpFactory.call(this);\n};\ngoog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);\ngoog.net.DefaultXmlHttpFactory.prototype.createInstance \x3d function() {\n  const progId \x3d this.getProgId_();\n  if (progId) {\n    return new ActiveXObject(progId);\n  } else {\n    return new XMLHttpRequest();\n  }\n};\ngoog.net.DefaultXmlHttpFactory.prototype.internalGetOptions \x3d function() {\n  const progId \x3d this.getProgId_();\n  const options \x3d {};\n  if (progId) {\n    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] \x3d true;\n    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] \x3d true;\n  }\n  return options;\n};\ngoog.net.DefaultXmlHttpFactory.prototype.ieProgId_;\ngoog.net.DefaultXmlHttpFactory.prototype.getProgId_ \x3d function() {\n  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {\n    return \x22\x22;\n  }\n  if (!this.ieProgId_ \x26\x26 typeof XMLHttpRequest \x3d\x3d \x22undefined\x22 \x26\x26 typeof ActiveXObject !\x3d \x22undefined\x22) {\n    const ACTIVE_X_IDENTS \x3d [\x22MSXML2.XMLHTTP.6.0\x22, \x22MSXML2.XMLHTTP.3.0\x22, \x22MSXML2.XMLHTTP\x22, \x22Microsoft.XMLHTTP\x22,];\n    for (let i \x3d 0; i \x3c ACTIVE_X_IDENTS.length; i++) {\n      const candidate \x3d ACTIVE_X_IDENTS[i];\n      try {\n        new ActiveXObject(candidate);\n        this.ieProgId_ \x3d candidate;\n        return candidate;\n      } catch (e) {\n      }\n    }\n    throw new Error(\x22Could not create ActiveXObject. ActiveX might be disabled,\x22 + \x22 or MSXML might not be installed\x22);\n  }\n  return this.ieProgId_;\n};\ngoog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory());\n");
SHADOW_ENV.evalLoad("goog.net.xhrio.js", true , "goog.provide(\x22goog.net.XhrIo\x22);\ngoog.provide(\x22goog.net.XhrIo.ResponseType\x22);\ngoog.require(\x22goog.Timer\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.collections.maps\x22);\ngoog.require(\x22goog.debug.entryPointRegistry\x22);\ngoog.require(\x22goog.events.EventTarget\x22);\ngoog.require(\x22goog.json.hybrid\x22);\ngoog.require(\x22goog.log\x22);\ngoog.require(\x22goog.net.ErrorCode\x22);\ngoog.require(\x22goog.net.EventType\x22);\ngoog.require(\x22goog.net.HttpStatus\x22);\ngoog.require(\x22goog.net.XmlHttp\x22);\ngoog.require(\x22goog.object\x22);\ngoog.require(\x22goog.string\x22);\ngoog.require(\x22goog.uri.utils\x22);\ngoog.require(\x22goog.userAgent\x22);\ngoog.requireType(\x22goog.Uri\x22);\ngoog.requireType(\x22goog.debug.ErrorHandler\x22);\ngoog.requireType(\x22goog.net.XhrLike\x22);\ngoog.requireType(\x22goog.net.XmlHttpFactory\x22);\ngoog.scope(function() {\n  goog.net.XhrIo \x3d function(opt_xmlHttpFactory) {\n    XhrIo.base(this, \x22constructor\x22);\n    this.headers \x3d new Map();\n    this.xmlHttpFactory_ \x3d opt_xmlHttpFactory || null;\n    this.active_ \x3d false;\n    this.xhr_ \x3d null;\n    this.xhrOptions_ \x3d null;\n    this.lastUri_ \x3d \x22\x22;\n    this.lastMethod_ \x3d \x22\x22;\n    this.lastErrorCode_ \x3d goog.net.ErrorCode.NO_ERROR;\n    this.lastError_ \x3d \x22\x22;\n    this.errorDispatched_ \x3d false;\n    this.inSend_ \x3d false;\n    this.inOpen_ \x3d false;\n    this.inAbort_ \x3d false;\n    this.timeoutInterval_ \x3d 0;\n    this.timeoutId_ \x3d null;\n    this.responseType_ \x3d ResponseType.DEFAULT;\n    this.withCredentials_ \x3d false;\n    this.progressEventsEnabled_ \x3d false;\n    this.useXhr2Timeout_ \x3d false;\n    this.trustToken_ \x3d null;\n  };\n  goog.inherits(goog.net.XhrIo, goog.events.EventTarget);\n  const XhrIo \x3d goog.net.XhrIo;\n  goog.net.XhrIo.ResponseType \x3d {DEFAULT:\x22\x22, TEXT:\x22text\x22, DOCUMENT:\x22document\x22, BLOB:\x22blob\x22, ARRAY_BUFFER:\x22arraybuffer\x22,};\n  const ResponseType \x3d goog.net.XhrIo.ResponseType;\n  goog.net.XhrIo.prototype.logger_ \x3d goog.log.getLogger(\x22goog.net.XhrIo\x22);\n  goog.net.XhrIo.CONTENT_TYPE_HEADER \x3d \x22Content-Type\x22;\n  goog.net.XhrIo.CONTENT_TRANSFER_ENCODING \x3d \x22Content-Transfer-Encoding\x22;\n  goog.net.XhrIo.HTTP_SCHEME_PATTERN \x3d /^https?$/i;\n  const HTTP_SCHEME_PATTERN \x3d goog.net.XhrIo.HTTP_SCHEME_PATTERN;\n  goog.net.XhrIo.METHODS_WITH_FORM_DATA \x3d [\x22POST\x22, \x22PUT\x22];\n  goog.net.XhrIo.FORM_CONTENT_TYPE \x3d \x22application/x-www-form-urlencoded;charset\\x3dutf-8\x22;\n  goog.net.XhrIo.XHR2_TIMEOUT_ \x3d \x22timeout\x22;\n  goog.net.XhrIo.XHR2_ON_TIMEOUT_ \x3d \x22ontimeout\x22;\n  goog.net.XhrIo.sendInstances_ \x3d [];\n  goog.net.XhrIo.send \x3d function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {\n    const x \x3d new goog.net.XhrIo();\n    goog.net.XhrIo.sendInstances_.push(x);\n    if (opt_callback) {\n      x.listen(goog.net.EventType.COMPLETE, opt_callback);\n    }\n    x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);\n    if (opt_timeoutInterval) {\n      x.setTimeoutInterval(opt_timeoutInterval);\n    }\n    if (opt_withCredentials) {\n      x.setWithCredentials(opt_withCredentials);\n    }\n    x.send(url, opt_method, opt_content, opt_headers);\n    return x;\n  };\n  goog.net.XhrIo.cleanup \x3d function() {\n    const instances \x3d goog.net.XhrIo.sendInstances_;\n    while (instances.length) {\n      instances.pop().dispose();\n    }\n  };\n  goog.net.XhrIo.protectEntryPoints \x3d function(errorHandler) {\n    goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ \x3d errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n  };\n  goog.net.XhrIo.prototype.cleanupSend_ \x3d function() {\n    this.dispose();\n    goog.array.remove(goog.net.XhrIo.sendInstances_, this);\n  };\n  goog.net.XhrIo.prototype.getTimeoutInterval \x3d function() {\n    return this.timeoutInterval_;\n  };\n  goog.net.XhrIo.prototype.setTimeoutInterval \x3d function(ms) {\n    this.timeoutInterval_ \x3d Math.max(0, ms);\n  };\n  goog.net.XhrIo.prototype.setResponseType \x3d function(type) {\n    this.responseType_ \x3d type;\n  };\n  goog.net.XhrIo.prototype.getResponseType \x3d function() {\n    return this.responseType_;\n  };\n  goog.net.XhrIo.prototype.setWithCredentials \x3d function(withCredentials) {\n    this.withCredentials_ \x3d withCredentials;\n  };\n  goog.net.XhrIo.prototype.getWithCredentials \x3d function() {\n    return this.withCredentials_;\n  };\n  goog.net.XhrIo.prototype.setProgressEventsEnabled \x3d function(enabled) {\n    this.progressEventsEnabled_ \x3d enabled;\n  };\n  goog.net.XhrIo.prototype.getProgressEventsEnabled \x3d function() {\n    return this.progressEventsEnabled_;\n  };\n  goog.net.XhrIo.prototype.setTrustToken \x3d function(trustToken) {\n    this.trustToken_ \x3d trustToken;\n  };\n  goog.net.XhrIo.prototype.send \x3d function(url, opt_method, opt_content, opt_headers) {\n    if (this.xhr_) {\n      throw new Error(\x22[goog.net.XhrIo] Object is active with another request\\x3d\x22 + this.lastUri_ + \x22; newUri\\x3d\x22 + url);\n    }\n    const method \x3d opt_method ? opt_method.toUpperCase() : \x22GET\x22;\n    this.lastUri_ \x3d url;\n    this.lastError_ \x3d \x22\x22;\n    this.lastErrorCode_ \x3d goog.net.ErrorCode.NO_ERROR;\n    this.lastMethod_ \x3d method;\n    this.errorDispatched_ \x3d false;\n    this.active_ \x3d true;\n    this.xhr_ \x3d this.createXhr();\n    this.xhrOptions_ \x3d this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();\n    this.xhr_.onreadystatechange \x3d goog.bind(this.onReadyStateChange_, this);\n    if (this.getProgressEventsEnabled() \x26\x26 \x22onprogress\x22 in this.xhr_) {\n      this.xhr_.onprogress \x3d goog.bind(function(e) {\n        this.onProgressHandler_(e, true);\n      }, this);\n      if (this.xhr_.upload) {\n        this.xhr_.upload.onprogress \x3d goog.bind(this.onProgressHandler_, this);\n      }\n    }\n    try {\n      goog.log.fine(this.logger_, this.formatMsg_(\x22Opening Xhr\x22));\n      this.inOpen_ \x3d true;\n      this.xhr_.open(method, String(url), true);\n      this.inOpen_ \x3d false;\n    } catch (err) {\n      goog.log.fine(this.logger_, this.formatMsg_(\x22Error opening Xhr: \x22 + err.message));\n      this.error_(goog.net.ErrorCode.EXCEPTION, err);\n      return;\n    }\n    const content \x3d opt_content || \x22\x22;\n    const headers \x3d new Map(this.headers);\n    if (opt_headers) {\n      if (Object.getPrototypeOf(opt_headers) \x3d\x3d\x3d Object.prototype) {\n        for (let key in opt_headers) {\n          headers.set(key, opt_headers[key]);\n        }\n      } else if (typeof opt_headers.keys \x3d\x3d\x3d \x22function\x22 \x26\x26 typeof opt_headers.get \x3d\x3d\x3d \x22function\x22) {\n        for (const key of opt_headers.keys()) {\n          headers.set(key, opt_headers.get(key));\n        }\n      } else {\n        throw new Error(\x22Unknown input type for opt_headers: \x22 + String(opt_headers));\n      }\n    }\n    const contentTypeKey \x3d Array.from(headers.keys()).find(header \x3d\x3e goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header));\n    const contentIsFormData \x3d goog.global[\x22FormData\x22] \x26\x26 content instanceof goog.global[\x22FormData\x22];\n    if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) \x26\x26 !contentTypeKey \x26\x26 !contentIsFormData) {\n      headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);\n    }\n    for (const [key, value] of headers) {\n      this.xhr_.setRequestHeader(key, value);\n    }\n    if (this.responseType_) {\n      this.xhr_.responseType \x3d this.responseType_;\n    }\n    if (\x22withCredentials\x22 in this.xhr_ \x26\x26 this.xhr_.withCredentials !\x3d\x3d this.withCredentials_) {\n      this.xhr_.withCredentials \x3d this.withCredentials_;\n    }\n    if (\x22setTrustToken\x22 in this.xhr_ \x26\x26 this.trustToken_) {\n      try {\n        this.xhr_.setTrustToken(this.trustToken_);\n      } catch (err) {\n        goog.log.fine(this.logger_, this.formatMsg_(\x22Error SetTrustToken: \x22 + err.message));\n      }\n    }\n    try {\n      this.cleanUpTimeoutTimer_();\n      if (this.timeoutInterval_ \x3e 0) {\n        this.useXhr2Timeout_ \x3d goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);\n        goog.log.fine(this.logger_, this.formatMsg_(\x22Will abort after \x22 + this.timeoutInterval_ + \x22ms if incomplete, xhr2 \x22 + this.useXhr2Timeout_));\n        if (this.useXhr2Timeout_) {\n          this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] \x3d this.timeoutInterval_;\n          this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] \x3d goog.bind(this.timeout_, this);\n        } else {\n          this.timeoutId_ \x3d goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);\n        }\n      }\n      goog.log.fine(this.logger_, this.formatMsg_(\x22Sending request\x22));\n      this.inSend_ \x3d true;\n      this.xhr_.send(content);\n      this.inSend_ \x3d false;\n    } catch (err) {\n      goog.log.fine(this.logger_, this.formatMsg_(\x22Send error: \x22 + err.message));\n      this.error_(goog.net.ErrorCode.EXCEPTION, err);\n    }\n  };\n  goog.net.XhrIo.shouldUseXhr2Timeout_ \x3d function(xhr) {\n    return goog.userAgent.IE \x26\x26 goog.userAgent.isVersionOrHigher(9) \x26\x26 typeof xhr[goog.net.XhrIo.XHR2_TIMEOUT_] \x3d\x3d\x3d \x22number\x22 \x26\x26 xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_] !\x3d\x3d undefined;\n  };\n  goog.net.XhrIo.prototype.createXhr \x3d function() {\n    return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();\n  };\n  goog.net.XhrIo.prototype.timeout_ \x3d function() {\n    if (typeof goog \x3d\x3d \x22undefined\x22) {\n    } else if (this.xhr_) {\n      this.lastError_ \x3d \x22Timed out after \x22 + this.timeoutInterval_ + \x22ms, aborting\x22;\n      this.lastErrorCode_ \x3d goog.net.ErrorCode.TIMEOUT;\n      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));\n      this.dispatchEvent(goog.net.EventType.TIMEOUT);\n      this.abort(goog.net.ErrorCode.TIMEOUT);\n    }\n  };\n  goog.net.XhrIo.prototype.error_ \x3d function(errorCode, err) {\n    this.active_ \x3d false;\n    if (this.xhr_) {\n      this.inAbort_ \x3d true;\n      this.xhr_.abort();\n      this.inAbort_ \x3d false;\n    }\n    this.lastError_ \x3d err;\n    this.lastErrorCode_ \x3d errorCode;\n    this.dispatchErrors_();\n    this.cleanUpXhr_();\n  };\n  goog.net.XhrIo.prototype.dispatchErrors_ \x3d function() {\n    if (!this.errorDispatched_) {\n      this.errorDispatched_ \x3d true;\n      this.dispatchEvent(goog.net.EventType.COMPLETE);\n      this.dispatchEvent(goog.net.EventType.ERROR);\n    }\n  };\n  goog.net.XhrIo.prototype.abort \x3d function(opt_failureCode) {\n    if (this.xhr_ \x26\x26 this.active_) {\n      goog.log.fine(this.logger_, this.formatMsg_(\x22Aborting\x22));\n      this.active_ \x3d false;\n      this.inAbort_ \x3d true;\n      this.xhr_.abort();\n      this.inAbort_ \x3d false;\n      this.lastErrorCode_ \x3d opt_failureCode || goog.net.ErrorCode.ABORT;\n      this.dispatchEvent(goog.net.EventType.COMPLETE);\n      this.dispatchEvent(goog.net.EventType.ABORT);\n      this.cleanUpXhr_();\n    }\n  };\n  goog.net.XhrIo.prototype.disposeInternal \x3d function() {\n    if (this.xhr_) {\n      if (this.active_) {\n        this.active_ \x3d false;\n        this.inAbort_ \x3d true;\n        this.xhr_.abort();\n        this.inAbort_ \x3d false;\n      }\n      this.cleanUpXhr_(true);\n    }\n    XhrIo.base(this, \x22disposeInternal\x22);\n  };\n  goog.net.XhrIo.prototype.onReadyStateChange_ \x3d function() {\n    if (this.isDisposed()) {\n      return;\n    }\n    if (!this.inOpen_ \x26\x26 !this.inSend_ \x26\x26 !this.inAbort_) {\n      this.onReadyStateChangeEntryPoint_();\n    } else {\n      this.onReadyStateChangeHelper_();\n    }\n  };\n  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ \x3d function() {\n    this.onReadyStateChangeHelper_();\n  };\n  goog.net.XhrIo.prototype.onReadyStateChangeHelper_ \x3d function() {\n    if (!this.active_) {\n      return;\n    }\n    if (typeof goog \x3d\x3d \x22undefined\x22) {\n    } else if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] \x26\x26 this.getReadyState() \x3d\x3d goog.net.XmlHttp.ReadyState.COMPLETE \x26\x26 this.getStatus() \x3d\x3d 2) {\n      goog.log.fine(this.logger_, this.formatMsg_(\x22Local request error detected and ignored\x22));\n    } else {\n      if (this.inSend_ \x26\x26 this.getReadyState() \x3d\x3d goog.net.XmlHttp.ReadyState.COMPLETE) {\n        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);\n        return;\n      }\n      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);\n      if (this.isComplete()) {\n        goog.log.fine(this.logger_, this.formatMsg_(\x22Request complete\x22));\n        this.active_ \x3d false;\n        try {\n          if (this.isSuccess()) {\n            this.dispatchEvent(goog.net.EventType.COMPLETE);\n            this.dispatchEvent(goog.net.EventType.SUCCESS);\n          } else {\n            this.lastErrorCode_ \x3d goog.net.ErrorCode.HTTP_ERROR;\n            this.lastError_ \x3d this.getStatusText() + \x22 [\x22 + this.getStatus() + \x22]\x22;\n            this.dispatchErrors_();\n          }\n        } finally {\n          this.cleanUpXhr_();\n        }\n      }\n    }\n  };\n  goog.net.XhrIo.prototype.onProgressHandler_ \x3d function(e, opt_isDownload) {\n    goog.asserts.assert(e.type \x3d\x3d\x3d goog.net.EventType.PROGRESS, \x22goog.net.EventType.PROGRESS is of the same type as raw XHR progress.\x22);\n    this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));\n    this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));\n  };\n  goog.net.XhrIo.buildProgressEvent_ \x3d function(e, eventType) {\n    return {type:eventType, lengthComputable:e.lengthComputable, loaded:e.loaded, total:e.total,};\n  };\n  goog.net.XhrIo.prototype.cleanUpXhr_ \x3d function(opt_fromDispose) {\n    if (this.xhr_) {\n      this.cleanUpTimeoutTimer_();\n      const xhr \x3d this.xhr_;\n      const clearedOnReadyStateChange \x3d this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;\n      this.xhr_ \x3d null;\n      this.xhrOptions_ \x3d null;\n      if (!opt_fromDispose) {\n        this.dispatchEvent(goog.net.EventType.READY);\n      }\n      try {\n        xhr.onreadystatechange \x3d clearedOnReadyStateChange;\n      } catch (e) {\n        goog.log.error(this.logger_, \x22Problem encountered resetting onreadystatechange: \x22 + e.message);\n      }\n    }\n  };\n  goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ \x3d function() {\n    if (this.xhr_ \x26\x26 this.useXhr2Timeout_) {\n      this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] \x3d null;\n    }\n    if (this.timeoutId_) {\n      goog.Timer.clear(this.timeoutId_);\n      this.timeoutId_ \x3d null;\n    }\n  };\n  goog.net.XhrIo.prototype.isActive \x3d function() {\n    return !!this.xhr_;\n  };\n  goog.net.XhrIo.prototype.isComplete \x3d function() {\n    return this.getReadyState() \x3d\x3d goog.net.XmlHttp.ReadyState.COMPLETE;\n  };\n  goog.net.XhrIo.prototype.isSuccess \x3d function() {\n    const status \x3d this.getStatus();\n    return goog.net.HttpStatus.isSuccess(status) || status \x3d\x3d\x3d 0 \x26\x26 !this.isLastUriEffectiveSchemeHttp_();\n  };\n  goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ \x3d function() {\n    const scheme \x3d goog.uri.utils.getEffectiveScheme(String(this.lastUri_));\n    return HTTP_SCHEME_PATTERN.test(scheme);\n  };\n  goog.net.XhrIo.prototype.getReadyState \x3d function() {\n    return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED;\n  };\n  goog.net.XhrIo.prototype.getStatus \x3d function() {\n    try {\n      return this.getReadyState() \x3e goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;\n    } catch (e) {\n      return -1;\n    }\n  };\n  goog.net.XhrIo.prototype.getStatusText \x3d function() {\n    try {\n      return this.getReadyState() \x3e goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : \x22\x22;\n    } catch (e) {\n      goog.log.fine(this.logger_, \x22Can not get status: \x22 + e.message);\n      return \x22\x22;\n    }\n  };\n  goog.net.XhrIo.prototype.getLastUri \x3d function() {\n    return String(this.lastUri_);\n  };\n  goog.net.XhrIo.prototype.getResponseText \x3d function() {\n    try {\n      return this.xhr_ ? this.xhr_.responseText : \x22\x22;\n    } catch (e) {\n      goog.log.fine(this.logger_, \x22Can not get responseText: \x22 + e.message);\n      return \x22\x22;\n    }\n  };\n  goog.net.XhrIo.prototype.getResponseBody \x3d function() {\n    try {\n      if (this.xhr_ \x26\x26 \x22responseBody\x22 in this.xhr_) {\n        return this.xhr_[\x22responseBody\x22];\n      }\n    } catch (e) {\n      goog.log.fine(this.logger_, \x22Can not get responseBody: \x22 + e.message);\n    }\n    return null;\n  };\n  goog.net.XhrIo.prototype.getResponseXml \x3d function() {\n    try {\n      return this.xhr_ ? this.xhr_.responseXML : null;\n    } catch (e) {\n      goog.log.fine(this.logger_, \x22Can not get responseXML: \x22 + e.message);\n      return null;\n    }\n  };\n  goog.net.XhrIo.prototype.getResponseJson \x3d function(opt_xssiPrefix) {\n    if (!this.xhr_) {\n      return undefined;\n    }\n    let responseText \x3d this.xhr_.responseText;\n    if (opt_xssiPrefix \x26\x26 responseText.indexOf(opt_xssiPrefix) \x3d\x3d 0) {\n      responseText \x3d responseText.substring(opt_xssiPrefix.length);\n    }\n    return goog.json.hybrid.parse(responseText);\n  };\n  goog.net.XhrIo.prototype.getResponse \x3d function() {\n    try {\n      if (!this.xhr_) {\n        return null;\n      }\n      if (\x22response\x22 in this.xhr_) {\n        return this.xhr_.response;\n      }\n      switch(this.responseType_) {\n        case ResponseType.DEFAULT:\n        case ResponseType.TEXT:\n          return this.xhr_.responseText;\n        case ResponseType.ARRAY_BUFFER:\n          if (\x22mozResponseArrayBuffer\x22 in this.xhr_) {\n            return this.xhr_.mozResponseArrayBuffer;\n          }\n      }\n      goog.log.error(this.logger_, \x22Response type \x22 + this.responseType_ + \x22 is not \x22 + \x22supported on this browser\x22);\n      return null;\n    } catch (e) {\n      goog.log.fine(this.logger_, \x22Can not get response: \x22 + e.message);\n      return null;\n    }\n  };\n  goog.net.XhrIo.prototype.getResponseHeader \x3d function(key) {\n    if (!this.xhr_ || !this.isComplete()) {\n      return undefined;\n    }\n    const value \x3d this.xhr_.getResponseHeader(key);\n    return value \x3d\x3d\x3d null ? undefined : value;\n  };\n  goog.net.XhrIo.prototype.getAllResponseHeaders \x3d function() {\n    return this.xhr_ \x26\x26 this.isComplete() ? this.xhr_.getAllResponseHeaders() || \x22\x22 : \x22\x22;\n  };\n  goog.net.XhrIo.prototype.getResponseHeaders \x3d function() {\n    const headersObject \x3d {};\n    const headersArray \x3d this.getAllResponseHeaders().split(\x22\\r\\n\x22);\n    for (let i \x3d 0; i \x3c headersArray.length; i++) {\n      if (goog.string.isEmptyOrWhitespace(headersArray[i])) {\n        continue;\n      }\n      const keyValue \x3d goog.string.splitLimit(headersArray[i], \x22:\x22, 1);\n      const key \x3d keyValue[0];\n      let value \x3d keyValue[1];\n      if (typeof value !\x3d\x3d \x22string\x22) {\n        continue;\n      }\n      value \x3d value.trim();\n      const values \x3d headersObject[key] || [];\n      headersObject[key] \x3d values;\n      values.push(value);\n    }\n    return goog.object.map(headersObject, function(values) {\n      return values.join(\x22, \x22);\n    });\n  };\n  goog.net.XhrIo.prototype.getStreamingResponseHeader \x3d function(key) {\n    return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;\n  };\n  goog.net.XhrIo.prototype.getAllStreamingResponseHeaders \x3d function() {\n    return this.xhr_ ? this.xhr_.getAllResponseHeaders() : \x22\x22;\n  };\n  goog.net.XhrIo.prototype.getLastErrorCode \x3d function() {\n    return this.lastErrorCode_;\n  };\n  goog.net.XhrIo.prototype.getLastError \x3d function() {\n    return typeof this.lastError_ \x3d\x3d\x3d \x22string\x22 ? this.lastError_ : String(this.lastError_);\n  };\n  goog.net.XhrIo.prototype.formatMsg_ \x3d function(msg) {\n    return msg + \x22 [\x22 + this.lastMethod_ + \x22 \x22 + this.lastUri_ + \x22 \x22 + this.getStatus() + \x22]\x22;\n  };\n  goog.debug.entryPointRegistry.register(function(transformer) {\n    goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ \x3d transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n  });\n});\n");
SHADOW_ENV.evalLoad("ajax.simple.js", true , "goog.provide(\x27ajax.simple\x27);\najax.simple.normalize_method \x3d (function ajax$simple$normalize_method(method){\nif((method instanceof cljs.core.Keyword)){\nreturn clojure.string.upper_case(cljs.core.name(method));\n} else {\nreturn method;\n}\n});\najax.simple.process_response \x3d (function ajax$simple$process_response(response,interceptor){\nreturn ajax.protocols._process_response(interceptor,response);\n});\najax.simple.make_js_handler \x3d (function ajax$simple$make_js_handler(handler,interceptors){\nreturn (function ajax$simple$make_js_handler_$_js_handler(response){\nvar processed \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ajax.simple.process_response,response,interceptors);\nreturn (handler.cljs$core$IFn$_invoke$arity$1 ? handler.cljs$core$IFn$_invoke$arity$1(processed) : handler.call(null,processed));\n});\n});\najax.simple.base_handler \x3d (function ajax$simple$base_handler(interceptors,p__50579){\nvar map__50581 \x3d p__50579;\nvar map__50581__$1 \x3d cljs.core.__destructure_map(map__50581);\nvar handler \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50581__$1,new cljs.core.Keyword(null,\x22handler\x22,\x22handler\x22,-195596612));\nif(cljs.core.truth_(handler)){\nreturn ajax.simple.make_js_handler(handler,interceptors);\n} else {\nreturn ajax.util.throw_error(\x22No ajax handler provided.\x22);\n}\n});\najax.simple.default_interceptors \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\najax.simple.normalize_request \x3d (function ajax$simple$normalize_request(request){\nvar response_format \x3d ajax.interceptors.get_response_format(ajax.formats.detect_response_format,request);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(request,new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592),ajax.simple.normalize_method),new cljs.core.Keyword(null,\x22interceptors\x22,\x22interceptors\x22,-1546782951),(function (p1__50584_SHARP_){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [response_format], null),(function (){var or__5045__auto__ \x3d p1__50584_SHARP_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.deref(ajax.simple.default_interceptors);\n}\n})(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ajax.interceptors.request_interceptors], 0));\n}));\n});\najax.simple.new_default_api \x3d (function ajax$simple$new_default_api(){\nreturn (new goog.net.XhrIo());\n});\n/**\n * -process-request with the arguments flipped for use in reduce\n */\najax.simple.process_request \x3d (function ajax$simple$process_request(request,interceptor){\nreturn ajax.protocols._process_request(interceptor,request);\n});\n/**\n * The main request function.\n */\najax.simple.raw_ajax_request \x3d (function ajax$simple$raw_ajax_request(p__50586){\nvar map__50587 \x3d p__50586;\nvar map__50587__$1 \x3d cljs.core.__destructure_map(map__50587);\nvar request \x3d map__50587__$1;\nvar interceptors \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50587__$1,new cljs.core.Keyword(null,\x22interceptors\x22,\x22interceptors\x22,-1546782951));\nvar request__$1 \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(ajax.simple.process_request,request,interceptors);\nvar handler \x3d ajax.simple.base_handler(cljs.core.reverse(interceptors),request__$1);\nvar api \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22api\x22,\x22api\x22,-899839580).cljs$core$IFn$_invoke$arity$1(request__$1);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn ajax.simple.new_default_api();\n}\n})();\nreturn ajax.protocols._js_ajax_request(api,request__$1,handler);\n});\najax.simple.ajax_request \x3d (function ajax$simple$ajax_request(request){\nreturn ajax.simple.raw_ajax_request(ajax.simple.normalize_request(request));\n});\n");
SHADOW_ENV.evalLoad("ajax.easy.js", true , "goog.provide(\x27ajax.easy\x27);\najax.easy.default_formats \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22application/transit+json\x22,ajax.transit.transit_response_format], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22application/transit+transit\x22,ajax.transit.transit_response_format], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22application/json\x22,ajax.json.json_response_format], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22text/plain\x22,ajax.formats.text_response_format], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22text/html\x22,ajax.formats.text_response_format], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22*/*\x22,ajax.formats.raw_response_format], null)], null));\najax.easy.detect_response_format \x3d (function ajax$easy$detect_response_format(var_args){\nvar G__50594 \x3d arguments.length;\nswitch (G__50594) {\ncase 0:\nreturn ajax.easy.detect_response_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn ajax.easy.detect_response_format.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(ajax.easy.detect_response_format.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn ajax.formats.detect_response_format(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22response-format\x22,\x22response-format\x22,1664465322),cljs.core.deref(ajax.easy.default_formats)], null));\n}));\n\n(ajax.easy.detect_response_format.cljs$core$IFn$_invoke$arity$1 \x3d (function (opts){\nreturn ajax.formats.detect_response_format(opts);\n}));\n\n(ajax.easy.detect_response_format.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * Converts an easy API request format specifier to an `ajax-request`\n *   request format specifier.\n */\najax.easy.keyword_request_format \x3d (function ajax$easy$keyword_request_format(format,format_params){\nif(cljs.core.map_QMARK_(format)){\nreturn format;\n} else {\nif(cljs.core.fn_QMARK_(format)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22write\x22,\x22write\x22,-1857649168),format], null);\n} else {\nif((format \x3d\x3d null)){\nreturn ajax.transit.transit_request_format.cljs$core$IFn$_invoke$arity$1(format_params);\n} else {\nvar G__50596 \x3d format;\nvar G__50596__$1 \x3d (((G__50596 instanceof cljs.core.Keyword))?G__50596.fqn:null);\nswitch (G__50596__$1) {\ncase \x22transit\x22:\nreturn ajax.transit.transit_request_format.cljs$core$IFn$_invoke$arity$1(format_params);\n\nbreak;\ncase \x22json\x22:\nreturn ajax.json.json_request_format();\n\nbreak;\ncase \x22text\x22:\nreturn ajax.formats.text_request_format();\n\nbreak;\ncase \x22raw\x22:\nreturn ajax.url.url_request_format.cljs$core$IFn$_invoke$arity$1(format_params);\n\nbreak;\ncase \x22url\x22:\nreturn ajax.url.url_request_format.cljs$core$IFn$_invoke$arity$1(format_params);\n\nbreak;\ndefault:\nreturn null;\n\n}\n\n}\n}\n}\n});\najax.easy.keyword_response_format_element \x3d (function ajax$easy$keyword_response_format_element(format,format_params){\nif(cljs.core.vector_QMARK_(format)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(format),(function (){var G__50598 \x3d cljs.core.second(format);\nvar G__50600 \x3d format_params;\nreturn (ajax.easy.keyword_response_format_element.cljs$core$IFn$_invoke$arity$2 ? ajax.easy.keyword_response_format_element.cljs$core$IFn$_invoke$arity$2(G__50598,G__50600) : ajax.easy.keyword_response_format_element.call(null,G__50598,G__50600));\n})()], null);\n} else {\nif(cljs.core.map_QMARK_(format)){\nreturn format;\n} else {\nif(cljs.core.fn_QMARK_(format)){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22read\x22,\x22read\x22,1140058661),format,new cljs.core.Keyword(null,\x22description\x22,\x22description\x22,-1428560544),\x22custom\x22], null);\n} else {\nif((format \x3d\x3d null)){\nreturn ajax.easy.detect_response_format.cljs$core$IFn$_invoke$arity$0();\n} else {\nvar G__50601 \x3d format;\nvar G__50601__$1 \x3d (((G__50601 instanceof cljs.core.Keyword))?G__50601.fqn:null);\nswitch (G__50601__$1) {\ncase \x22transit\x22:\nreturn ajax.transit.transit_response_format.cljs$core$IFn$_invoke$arity$1(format_params);\n\nbreak;\ncase \x22json\x22:\nreturn ajax.json.json_response_format(format_params);\n\nbreak;\ncase \x22text\x22:\nreturn (ajax.formats.text_response_format.cljs$core$IFn$_invoke$arity$0 ? ajax.formats.text_response_format.cljs$core$IFn$_invoke$arity$0() : ajax.formats.text_response_format.call(null));\n\nbreak;\ncase \x22ring\x22:\nreturn ajax.ring.ring_response_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase \x22raw\x22:\nreturn ajax.formats.raw_response_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase \x22detect\x22:\nreturn ajax.easy.detect_response_format.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ndefault:\nreturn null;\n\n}\n\n}\n}\n}\n}\n});\n/**\n * Converts an easy API format specifier to an `ajax-request`\n * format specifier. Mostly this is just a case of replacing `:json`\n * with `json-response-format`. However, it gets complex when you\n * specify a detection format such as `[[\x22application/madeup\x22 :json]]`.\n */\najax.easy.keyword_response_format \x3d (function ajax$easy$keyword_response_format(format,format_params){\nif(cljs.core.vector_QMARK_(format)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__50603_SHARP_){\nreturn ajax.easy.keyword_response_format_element(p1__50603_SHARP_,format_params);\n}),format));\n} else {\nreturn ajax.easy.keyword_response_format_element(format,format_params);\n}\n});\najax.easy.print_response \x3d (function ajax$easy$print_response(response){\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22CLJS-AJAX response:\x22,response], 0));\n});\n/**\n * This gets called if you forget to attach a handler to an easy\n *   API function.\n */\najax.easy.default_handler \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(ajax.easy.print_response);\najax.easy.print_error_response \x3d (function ajax$easy$print_error_response(response){\nif((typeof console !\x3d\x3d \x27undefined\x27)){\nreturn console.error(response);\n} else {\nif((typeof window !\x3d\x3d \x27undefined\x27)){\nreturn window.alert(cljs.core.str.cljs$core$IFn$_invoke$arity$1(response));\n} else {\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22CLJS-AJAX ERROR:\x22,response], 0));\n\n}\n}\n});\n/**\n * This will be called when errors occur if you don\x27t supply\n * an error handler to the easy API functions. If you don\x27t\n * want it writing errors to the console (or worse, flashing up\n * alerts), make sure you always handle errors.\n */\najax.easy.default_error_handler \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(ajax.easy.print_error_response);\n/**\n * Converts easy API handlers to a `ajax-request` handler\n */\najax.easy.transform_handler \x3d (function ajax$easy$transform_handler(p__50613){\nvar map__50617 \x3d p__50613;\nvar map__50617__$1 \x3d cljs.core.__destructure_map(map__50617);\nvar handler \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50617__$1,new cljs.core.Keyword(null,\x22handler\x22,\x22handler\x22,-195596612));\nvar error_handler \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50617__$1,new cljs.core.Keyword(null,\x22error-handler\x22,\x22error-handler\x22,-484945776));\nvar finally$ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50617__$1,new cljs.core.Keyword(null,\x22finally\x22,\x22finally\x22,1589088705));\nvar h \x3d (function (){var or__5045__auto__ \x3d handler;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.deref(ajax.easy.default_handler);\n}\n})();\nvar e \x3d (function (){var or__5045__auto__ \x3d error_handler;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.deref(ajax.easy.default_error_handler);\n}\n})();\nreturn (function ajax$easy$transform_handler_$_easy_handler(p__50624){\nvar vec__50625 \x3d p__50624;\nvar ok \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50625,(0),null);\nvar result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50625,(1),null);\nvar fexpr__50628_50671 \x3d (cljs.core.truth_(ok)?h:e);\n(fexpr__50628_50671.cljs$core$IFn$_invoke$arity$1 ? fexpr__50628_50671.cljs$core$IFn$_invoke$arity$1(result) : fexpr__50628_50671.call(null,result));\n\nif(cljs.core.fn_QMARK_(finally$)){\nreturn (finally$.cljs$core$IFn$_invoke$arity$0 ? finally$.cljs$core$IFn$_invoke$arity$0() : finally$.call(null));\n} else {\nreturn null;\n}\n});\n});\n/**\n * Note that if you call GET, POST et al, this function gets\n * called and will include Transit code in your JS.\n * If you don\x27t want this to happen, use ajax-request directly\n * (and use advanced optimisation).\n */\najax.easy.transform_opts \x3d (function ajax$easy$transform_opts(p__50629){\nvar map__50630 \x3d p__50629;\nvar map__50630__$1 \x3d cljs.core.__destructure_map(map__50630);\nvar opts \x3d map__50630__$1;\nvar method \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50630__$1,new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592));\nvar format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50630__$1,new cljs.core.Keyword(null,\x22format\x22,\x22format\x22,-1306924766));\nvar response_format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50630__$1,new cljs.core.Keyword(null,\x22response-format\x22,\x22response-format\x22,1664465322));\nvar params \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50630__$1,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235));\nvar body \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50630__$1,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669));\nvar needs_format \x3d (((body \x3d\x3d null)) \x26\x26 (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(method,\x22GET\x22)));\nvar rf \x3d (cljs.core.truth_((function (){var or__5045__auto__ \x3d format;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn needs_format;\n}\n})())?ajax.easy.keyword_request_format(format,opts):null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(opts,new cljs.core.Keyword(null,\x22handler\x22,\x22handler\x22,-195596612),ajax.easy.transform_handler(opts),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22format\x22,\x22format\x22,-1306924766),rf,new cljs.core.Keyword(null,\x22response-format\x22,\x22response-format\x22,1664465322),ajax.easy.keyword_response_format(response_format,opts)], 0));\n});\najax.easy.easy_ajax_request \x3d (function ajax$easy$easy_ajax_request(uri,method,opts){\nreturn ajax.simple.ajax_request(ajax.easy.transform_opts(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(opts,new cljs.core.Keyword(null,\x22uri\x22,\x22uri\x22,-774711847),uri,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592),method], 0))));\n});\n");
SHADOW_ENV.evalLoad("goog.structs.queue.js", true , "goog.provide(\x22goog.structs.Queue\x22);\ngoog.require(\x22goog.array\x22);\ngoog.structs.Queue \x3d function() {\n  this.front_ \x3d [];\n  this.back_ \x3d [];\n};\ngoog.structs.Queue.prototype.maybeFlip_ \x3d function() {\n  if (this.front_.length \x3d\x3d\x3d 0) {\n    this.front_ \x3d this.back_;\n    this.front_.reverse();\n    this.back_ \x3d [];\n  }\n};\ngoog.structs.Queue.prototype.enqueue \x3d function(element) {\n  this.back_.push(element);\n};\ngoog.structs.Queue.prototype.dequeue \x3d function() {\n  this.maybeFlip_();\n  return this.front_.pop();\n};\ngoog.structs.Queue.prototype.peek \x3d function() {\n  this.maybeFlip_();\n  return goog.array.peek(this.front_);\n};\ngoog.structs.Queue.prototype.getCount \x3d function() {\n  return this.front_.length + this.back_.length;\n};\ngoog.structs.Queue.prototype.isEmpty \x3d function() {\n  return this.front_.length \x3d\x3d\x3d 0 \x26\x26 this.back_.length \x3d\x3d\x3d 0;\n};\ngoog.structs.Queue.prototype.clear \x3d function() {\n  this.front_ \x3d [];\n  this.back_ \x3d [];\n};\ngoog.structs.Queue.prototype.contains \x3d function(obj) {\n  return goog.array.contains(this.front_, obj) || goog.array.contains(this.back_, obj);\n};\ngoog.structs.Queue.prototype.remove \x3d function(obj) {\n  return goog.array.removeLast(this.front_, obj) || goog.array.remove(this.back_, obj);\n};\ngoog.structs.Queue.prototype.getValues \x3d function() {\n  var res \x3d [];\n  for (var i \x3d this.front_.length - 1; i \x3e\x3d 0; --i) {\n    res.push(this.front_[i]);\n  }\n  var len \x3d this.back_.length;\n  for (var i \x3d 0; i \x3c len; ++i) {\n    res.push(this.back_[i]);\n  }\n  return res;\n};\n");
SHADOW_ENV.evalLoad("goog.structs.collection.js", true , "goog.provide(\x22goog.structs.Collection\x22);\ngoog.structs.Collection \x3d function() {\n};\ngoog.structs.Collection.prototype.add;\ngoog.structs.Collection.prototype.remove;\ngoog.structs.Collection.prototype.contains;\ngoog.structs.Collection.prototype.getCount;\n");
SHADOW_ENV.evalLoad("goog.structs.set.js", true , "goog.provide(\x22goog.structs.Set\x22);\ngoog.require(\x22goog.structs\x22);\ngoog.require(\x22goog.structs.Collection\x22);\ngoog.require(\x22goog.structs.Map\x22);\ngoog.requireType(\x22goog.iter.Iterator\x22);\ngoog.structs.Set \x3d function(opt_values) {\n  this.map_ \x3d new goog.structs.Map();\n  this.size \x3d 0;\n  if (opt_values) {\n    this.addAll(opt_values);\n  }\n};\ngoog.structs.Set.getUid_ \x3d goog.getUid;\ngoog.structs.Set.getKey_ \x3d function(val) {\n  var type \x3d typeof val;\n  if (type \x3d\x3d \x22object\x22 \x26\x26 val || type \x3d\x3d \x22function\x22) {\n    return \x22o\x22 + goog.structs.Set.getUid_(val);\n  } else {\n    return type.substr(0, 1) + val;\n  }\n};\ngoog.structs.Set.prototype.getCount \x3d function() {\n  return this.map_.size;\n};\ngoog.structs.Set.prototype.add \x3d function(element) {\n  this.map_.set(goog.structs.Set.getKey_(element), element);\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.addAll \x3d function(col) {\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    this.add(values[i]);\n  }\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.removeAll \x3d function(col) {\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    this.remove(values[i]);\n  }\n  this.setSizeInternal_(this.map_.size);\n};\ngoog.structs.Set.prototype.delete \x3d function(element) {\n  const rv \x3d this.map_.remove(goog.structs.Set.getKey_(element));\n  this.setSizeInternal_(this.map_.size);\n  return rv;\n};\ngoog.structs.Set.prototype.remove \x3d function(element) {\n  return this.delete(element);\n};\ngoog.structs.Set.prototype.clear \x3d function() {\n  this.map_.clear();\n  this.setSizeInternal_(0);\n};\ngoog.structs.Set.prototype.isEmpty \x3d function() {\n  return this.map_.size \x3d\x3d\x3d 0;\n};\ngoog.structs.Set.prototype.has \x3d function(element) {\n  return this.map_.containsKey(goog.structs.Set.getKey_(element));\n};\ngoog.structs.Set.prototype.contains \x3d function(element) {\n  return this.map_.containsKey(goog.structs.Set.getKey_(element));\n};\ngoog.structs.Set.prototype.containsAll \x3d function(col) {\n  return goog.structs.every(col, this.contains, this);\n};\ngoog.structs.Set.prototype.intersection \x3d function(col) {\n  var result \x3d new goog.structs.Set();\n  var values \x3d goog.structs.getValues(col);\n  for (var i \x3d 0; i \x3c values.length; i++) {\n    var value \x3d values[i];\n    if (this.contains(value)) {\n      result.add(value);\n    }\n  }\n  return result;\n};\ngoog.structs.Set.prototype.difference \x3d function(col) {\n  var result \x3d this.clone();\n  result.removeAll(col);\n  return result;\n};\ngoog.structs.Set.prototype.getValues \x3d function() {\n  return this.map_.getValues();\n};\ngoog.structs.Set.prototype.values \x3d function() {\n  return this.map_.values();\n};\ngoog.structs.Set.prototype.clone \x3d function() {\n  return new goog.structs.Set(this);\n};\ngoog.structs.Set.prototype.equals \x3d function(col) {\n  return this.getCount() \x3d\x3d goog.structs.getCount(col) \x26\x26 this.isSubsetOf(col);\n};\ngoog.structs.Set.prototype.isSubsetOf \x3d function(col) {\n  var colCount \x3d goog.structs.getCount(col);\n  if (this.getCount() \x3e colCount) {\n    return false;\n  }\n  if (!(col instanceof goog.structs.Set) \x26\x26 colCount \x3e 5) {\n    col \x3d new goog.structs.Set(col);\n  }\n  return goog.structs.every(this, function(value) {\n    return goog.structs.contains(col, value);\n  });\n};\ngoog.structs.Set.prototype.__iterator__ \x3d function(opt_keys) {\n  return this.map_.__iterator__(false);\n};\ngoog.structs.Set.prototype[Symbol.iterator] \x3d function() {\n  return this.values();\n};\ngoog.structs.Set.prototype.setSizeInternal_ \x3d function(newSize) {\n  this.size \x3d newSize;\n};\n");
SHADOW_ENV.evalLoad("goog.structs.pool.js", true , "goog.provide(\x22goog.structs.Pool\x22);\ngoog.require(\x22goog.Disposable\x22);\ngoog.require(\x22goog.structs.Queue\x22);\ngoog.require(\x22goog.structs.Set\x22);\ngoog.structs.Pool \x3d function(opt_minCount, opt_maxCount) {\n  goog.Disposable.call(this);\n  this.minCount_ \x3d opt_minCount || 0;\n  this.maxCount_ \x3d opt_maxCount || 10;\n  if (this.minCount_ \x3e this.maxCount_) {\n    throw new Error(goog.structs.Pool.ERROR_MIN_MAX_);\n  }\n  this.freeQueue_ \x3d new goog.structs.Queue();\n  this.inUseSet_ \x3d new goog.structs.Set();\n  this.delay \x3d 0;\n  this.lastAccess \x3d null;\n  this.adjustForMinMax();\n};\ngoog.inherits(goog.structs.Pool, goog.Disposable);\ngoog.structs.Pool.ERROR_MIN_MAX_ \x3d \x22[goog.structs.Pool] Min can not be greater than max\x22;\ngoog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ \x3d \x22[goog.structs.Pool] Objects not released\x22;\ngoog.structs.Pool.prototype.setMinimumCount \x3d function(min) {\n  if (min \x3e this.maxCount_) {\n    throw new Error(goog.structs.Pool.ERROR_MIN_MAX_);\n  }\n  this.minCount_ \x3d min;\n  this.adjustForMinMax();\n};\ngoog.structs.Pool.prototype.setMaximumCount \x3d function(max) {\n  if (max \x3c this.minCount_) {\n    throw new Error(goog.structs.Pool.ERROR_MIN_MAX_);\n  }\n  this.maxCount_ \x3d max;\n  this.adjustForMinMax();\n};\ngoog.structs.Pool.prototype.setDelay \x3d function(delay) {\n  this.delay \x3d delay;\n};\ngoog.structs.Pool.prototype.getObject \x3d function() {\n  var time \x3d Date.now();\n  if (this.lastAccess !\x3d null \x26\x26 time - this.lastAccess \x3c this.delay) {\n    return undefined;\n  }\n  var obj \x3d this.removeFreeObject_();\n  if (obj) {\n    this.lastAccess \x3d time;\n    this.inUseSet_.add(obj);\n  }\n  return obj;\n};\ngoog.structs.Pool.prototype.releaseObject \x3d function(obj) {\n  if (this.inUseSet_.remove(obj)) {\n    this.addFreeObject(obj);\n    return true;\n  }\n  return false;\n};\ngoog.structs.Pool.prototype.removeFreeObject_ \x3d function() {\n  var obj;\n  while (this.getFreeCount() \x3e 0) {\n    obj \x3d this.freeQueue_.dequeue();\n    if (!this.objectCanBeReused(obj)) {\n      this.adjustForMinMax();\n    } else {\n      break;\n    }\n  }\n  if (!obj \x26\x26 this.getCount() \x3c this.maxCount_) {\n    obj \x3d this.createObject();\n  }\n  return obj;\n};\ngoog.structs.Pool.prototype.addFreeObject \x3d function(obj) {\n  this.inUseSet_.remove(obj);\n  if (this.objectCanBeReused(obj) \x26\x26 this.getCount() \x3c this.maxCount_) {\n    this.freeQueue_.enqueue(obj);\n  } else {\n    this.disposeObject(obj);\n  }\n};\ngoog.structs.Pool.prototype.adjustForMinMax \x3d function() {\n  var freeQueue \x3d this.freeQueue_;\n  while (this.getCount() \x3c this.minCount_) {\n    freeQueue.enqueue(this.createObject());\n  }\n  while (this.getCount() \x3e this.maxCount_ \x26\x26 this.getFreeCount() \x3e 0) {\n    this.disposeObject(freeQueue.dequeue());\n  }\n};\ngoog.structs.Pool.prototype.createObject \x3d function() {\n  return {};\n};\ngoog.structs.Pool.prototype.disposeObject \x3d function(obj) {\n  if (typeof obj.dispose \x3d\x3d \x22function\x22) {\n    obj.dispose();\n  } else {\n    for (var i in obj) {\n      obj[i] \x3d null;\n    }\n  }\n};\ngoog.structs.Pool.prototype.objectCanBeReused \x3d function(obj) {\n  if (typeof obj.canBeReused \x3d\x3d \x22function\x22) {\n    return obj.canBeReused();\n  }\n  return true;\n};\ngoog.structs.Pool.prototype.contains \x3d function(obj) {\n  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj);\n};\ngoog.structs.Pool.prototype.getCount \x3d function() {\n  return this.freeQueue_.getCount() + this.inUseSet_.getCount();\n};\ngoog.structs.Pool.prototype.getInUseCount \x3d function() {\n  return this.inUseSet_.getCount();\n};\ngoog.structs.Pool.prototype.getFreeCount \x3d function() {\n  return this.freeQueue_.getCount();\n};\ngoog.structs.Pool.prototype.isEmpty \x3d function() {\n  return this.freeQueue_.isEmpty() \x26\x26 this.inUseSet_.isEmpty();\n};\ngoog.structs.Pool.prototype.disposeInternal \x3d function() {\n  goog.structs.Pool.superClass_.disposeInternal.call(this);\n  if (this.getInUseCount() \x3e 0) {\n    throw new Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);\n  }\n  delete this.inUseSet_;\n  var freeQueue \x3d this.freeQueue_;\n  while (!freeQueue.isEmpty()) {\n    this.disposeObject(freeQueue.dequeue());\n  }\n  delete this.freeQueue_;\n};\n");
SHADOW_ENV.evalLoad("goog.structs.node.js", true , "goog.provide(\x22goog.structs.Node\x22);\ngoog.structs.Node \x3d function(key, value) {\n  this.key_ \x3d key;\n  this.value_ \x3d value;\n};\ngoog.structs.Node.prototype.getKey \x3d function() {\n  return this.key_;\n};\ngoog.structs.Node.prototype.getValue \x3d function() {\n  return this.value_;\n};\ngoog.structs.Node.prototype.clone \x3d function() {\n  return new goog.structs.Node(this.key_, this.value_);\n};\n");
SHADOW_ENV.evalLoad("goog.structs.heap.js", true , "goog.provide(\x22goog.structs.Heap\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.object\x22);\ngoog.require(\x22goog.structs.Node\x22);\ngoog.structs.Heap \x3d function(opt_heap) {\n  this.nodes_ \x3d [];\n  if (opt_heap) {\n    this.insertAll(opt_heap);\n  }\n};\ngoog.structs.Heap.prototype.insert \x3d function(key, value) {\n  var node \x3d new goog.structs.Node(key, value);\n  var nodes \x3d this.nodes_;\n  nodes.push(node);\n  this.moveUp_(nodes.length - 1);\n};\ngoog.structs.Heap.prototype.insertAll \x3d function(heap) {\n  var keys, values;\n  if (heap instanceof goog.structs.Heap) {\n    keys \x3d heap.getKeys();\n    values \x3d heap.getValues();\n    if (this.getCount() \x3c\x3d 0) {\n      var nodes \x3d this.nodes_;\n      for (var i \x3d 0; i \x3c keys.length; i++) {\n        nodes.push(new goog.structs.Node(keys[i], values[i]));\n      }\n      return;\n    }\n  } else {\n    keys \x3d goog.object.getKeys(heap);\n    values \x3d goog.object.getValues(heap);\n  }\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    this.insert(keys[i], values[i]);\n  }\n};\ngoog.structs.Heap.prototype.remove \x3d function() {\n  var nodes \x3d this.nodes_;\n  var count \x3d nodes.length;\n  var rootNode \x3d nodes[0];\n  if (count \x3c\x3d 0) {\n    return undefined;\n  } else if (count \x3d\x3d 1) {\n    goog.array.clear(nodes);\n  } else {\n    nodes[0] \x3d nodes.pop();\n    this.moveDown_(0);\n  }\n  return rootNode.getValue();\n};\ngoog.structs.Heap.prototype.peek \x3d function() {\n  var nodes \x3d this.nodes_;\n  if (nodes.length \x3d\x3d 0) {\n    return undefined;\n  }\n  return nodes[0].getValue();\n};\ngoog.structs.Heap.prototype.peekKey \x3d function() {\n  return this.nodes_[0] \x26\x26 this.nodes_[0].getKey();\n};\ngoog.structs.Heap.prototype.moveDown_ \x3d function(index) {\n  var nodes \x3d this.nodes_;\n  var count \x3d nodes.length;\n  var node \x3d nodes[index];\n  while (index \x3c count \x3e\x3e 1) {\n    var leftChildIndex \x3d this.getLeftChildIndex_(index);\n    var rightChildIndex \x3d this.getRightChildIndex_(index);\n    var smallerChildIndex \x3d rightChildIndex \x3c count \x26\x26 nodes[rightChildIndex].getKey() \x3c nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;\n    if (nodes[smallerChildIndex].getKey() \x3e node.getKey()) {\n      break;\n    }\n    nodes[index] \x3d nodes[smallerChildIndex];\n    index \x3d smallerChildIndex;\n  }\n  nodes[index] \x3d node;\n};\ngoog.structs.Heap.prototype.moveUp_ \x3d function(index) {\n  var nodes \x3d this.nodes_;\n  var node \x3d nodes[index];\n  while (index \x3e 0) {\n    var parentIndex \x3d this.getParentIndex_(index);\n    if (nodes[parentIndex].getKey() \x3e node.getKey()) {\n      nodes[index] \x3d nodes[parentIndex];\n      index \x3d parentIndex;\n    } else {\n      break;\n    }\n  }\n  nodes[index] \x3d node;\n};\ngoog.structs.Heap.prototype.getLeftChildIndex_ \x3d function(index) {\n  return index * 2 + 1;\n};\ngoog.structs.Heap.prototype.getRightChildIndex_ \x3d function(index) {\n  return index * 2 + 2;\n};\ngoog.structs.Heap.prototype.getParentIndex_ \x3d function(index) {\n  return index - 1 \x3e\x3e 1;\n};\ngoog.structs.Heap.prototype.getValues \x3d function() {\n  var nodes \x3d this.nodes_;\n  var rv \x3d [];\n  var l \x3d nodes.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    rv.push(nodes[i].getValue());\n  }\n  return rv;\n};\ngoog.structs.Heap.prototype.getKeys \x3d function() {\n  var nodes \x3d this.nodes_;\n  var rv \x3d [];\n  var l \x3d nodes.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    rv.push(nodes[i].getKey());\n  }\n  return rv;\n};\ngoog.structs.Heap.prototype.containsValue \x3d function(val) {\n  return goog.array.some(this.nodes_, function(node) {\n    return node.getValue() \x3d\x3d val;\n  });\n};\ngoog.structs.Heap.prototype.containsKey \x3d function(key) {\n  return goog.array.some(this.nodes_, function(node) {\n    return node.getKey() \x3d\x3d key;\n  });\n};\ngoog.structs.Heap.prototype.clone \x3d function() {\n  return new goog.structs.Heap(this);\n};\ngoog.structs.Heap.prototype.getCount \x3d function() {\n  return this.nodes_.length;\n};\ngoog.structs.Heap.prototype.isEmpty \x3d function() {\n  return this.nodes_.length \x3d\x3d\x3d 0;\n};\ngoog.structs.Heap.prototype.clear \x3d function() {\n  goog.array.clear(this.nodes_);\n};\n");
SHADOW_ENV.evalLoad("goog.structs.priorityqueue.js", true , "goog.provide(\x22goog.structs.PriorityQueue\x22);\ngoog.require(\x22goog.structs.Heap\x22);\ngoog.structs.PriorityQueue \x3d function() {\n  goog.structs.Heap.call(this);\n};\ngoog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);\ngoog.structs.PriorityQueue.prototype.enqueue \x3d function(priority, value) {\n  this.insert(priority, value);\n};\ngoog.structs.PriorityQueue.prototype.dequeue \x3d function() {\n  return this.remove();\n};\n");
SHADOW_ENV.evalLoad("goog.structs.prioritypool.js", true , "goog.provide(\x22goog.structs.PriorityPool\x22);\ngoog.require(\x22goog.structs.Pool\x22);\ngoog.require(\x22goog.structs.PriorityQueue\x22);\ngoog.structs.PriorityPool \x3d function(opt_minCount, opt_maxCount) {\n  this.delayTimeout_ \x3d undefined;\n  this.requestQueue_ \x3d new goog.structs.PriorityQueue();\n  goog.structs.Pool.call(this, opt_minCount, opt_maxCount);\n};\ngoog.inherits(goog.structs.PriorityPool, goog.structs.Pool);\ngoog.structs.PriorityPool.DEFAULT_PRIORITY_ \x3d 100;\ngoog.structs.PriorityPool.prototype.setDelay \x3d function(delay) {\n  goog.structs.PriorityPool.base(this, \x22setDelay\x22, delay);\n  if (this.lastAccess \x3d\x3d null) {\n    return;\n  }\n  goog.global.clearTimeout(this.delayTimeout_);\n  this.delayTimeout_ \x3d goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay + this.lastAccess - Date.now());\n  this.handleQueueRequests_();\n};\ngoog.structs.PriorityPool.prototype.getObject \x3d function(opt_callback, opt_priority) {\n  if (!opt_callback) {\n    var result \x3d goog.structs.PriorityPool.base(this, \x22getObject\x22);\n    if (result \x26\x26 this.delay) {\n      this.delayTimeout_ \x3d goog.global.setTimeout(goog.bind(this.handleQueueRequests_, this), this.delay);\n    }\n    return result;\n  }\n  var priority \x3d opt_priority !\x3d\x3d undefined ? opt_priority : goog.structs.PriorityPool.DEFAULT_PRIORITY_;\n  this.requestQueue_.enqueue(priority, opt_callback);\n  this.handleQueueRequests_();\n  return undefined;\n};\ngoog.structs.PriorityPool.prototype.handleQueueRequests_ \x3d function() {\n  var requestQueue \x3d this.requestQueue_;\n  while (requestQueue.getCount() \x3e 0) {\n    var obj \x3d this.getObject();\n    if (!obj) {\n      return;\n    } else {\n      var requestCallback \x3d requestQueue.dequeue();\n      requestCallback.apply(this, [obj]);\n    }\n  }\n};\ngoog.structs.PriorityPool.prototype.addFreeObject \x3d function(obj) {\n  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);\n  this.handleQueueRequests_();\n};\ngoog.structs.PriorityPool.prototype.adjustForMinMax \x3d function() {\n  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);\n  this.handleQueueRequests_();\n};\ngoog.structs.PriorityPool.prototype.disposeInternal \x3d function() {\n  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);\n  goog.global.clearTimeout(this.delayTimeout_);\n  this.requestQueue_.clear();\n  this.requestQueue_ \x3d null;\n};\n");
SHADOW_ENV.evalLoad("goog.net.xhriopool.js", true , "goog.provide(\x22goog.net.XhrIoPool\x22);\ngoog.require(\x22goog.net.XhrIo\x22);\ngoog.require(\x22goog.structs.PriorityPool\x22);\ngoog.requireType(\x22goog.structs.Map\x22);\ngoog.net.XhrIoPool \x3d function(opt_headers, opt_minCount, opt_maxCount, opt_withCredentials) {\n  this.headers_ \x3d opt_headers;\n  this.withCredentials_ \x3d !!opt_withCredentials;\n  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);\n};\ngoog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);\ngoog.net.XhrIoPool.prototype.createObject \x3d function() {\n  const xhrIo \x3d new goog.net.XhrIo();\n  const headers \x3d this.headers_;\n  if (headers) {\n    headers.forEach(function(value, key) {\n      xhrIo.headers.set(key, value);\n    });\n  }\n  if (this.withCredentials_) {\n    xhrIo.setWithCredentials(true);\n  }\n  return xhrIo;\n};\ngoog.net.XhrIoPool.prototype.objectCanBeReused \x3d function(obj) {\n  const xhr \x3d obj;\n  return !xhr.isDisposed() \x26\x26 !xhr.isActive();\n};\n");
SHADOW_ENV.evalLoad("goog.net.xhrmanager.js", true , "goog.provide(\x22goog.net.XhrManager\x22);\ngoog.provide(\x22goog.net.XhrManager.Event\x22);\ngoog.provide(\x22goog.net.XhrManager.Request\x22);\ngoog.require(\x22goog.events\x22);\ngoog.require(\x22goog.events.Event\x22);\ngoog.require(\x22goog.events.EventHandler\x22);\ngoog.require(\x22goog.events.EventTarget\x22);\ngoog.require(\x22goog.net.ErrorCode\x22);\ngoog.require(\x22goog.net.EventType\x22);\ngoog.require(\x22goog.net.XhrIo\x22);\ngoog.require(\x22goog.net.XhrIoPool\x22);\ngoog.require(\x22goog.structs.Map\x22);\ngoog.net.XhrManager \x3d function(opt_maxRetries, opt_headers, opt_minCount, opt_maxCount, opt_timeoutInterval, opt_withCredentials) {\n  goog.net.XhrManager.base(this, \x22constructor\x22);\n  this.maxRetries_ \x3d opt_maxRetries !\x3d\x3d undefined ? opt_maxRetries : 1;\n  this.timeoutInterval_ \x3d opt_timeoutInterval !\x3d\x3d undefined ? Math.max(0, opt_timeoutInterval) : 0;\n  this.withCredentials_ \x3d !!opt_withCredentials;\n  this.xhrPool_ \x3d new goog.net.XhrIoPool(opt_headers, opt_minCount, opt_maxCount, opt_withCredentials);\n  this.requests_ \x3d new goog.structs.Map();\n  this.eventHandler_ \x3d new goog.events.EventHandler(this);\n};\ngoog.inherits(goog.net.XhrManager, goog.events.EventTarget);\ngoog.net.XhrManager.ERROR_ID_IN_USE_ \x3d \x22[goog.net.XhrManager] ID in use\x22;\ngoog.net.XhrManager.XHR_EVENT_TYPES_ \x3d [goog.net.EventType.READY, goog.net.EventType.COMPLETE, goog.net.EventType.SUCCESS, goog.net.EventType.ERROR, goog.net.EventType.ABORT, goog.net.EventType.TIMEOUT,];\ngoog.net.XhrManager.prototype.setTimeoutInterval \x3d function(ms) {\n  this.timeoutInterval_ \x3d Math.max(0, ms);\n};\ngoog.net.XhrManager.prototype.getOutstandingCount \x3d function() {\n  return this.requests_.getCount();\n};\ngoog.net.XhrManager.prototype.getOutstandingRequestIds \x3d function() {\n  return this.requests_.getKeys();\n};\ngoog.net.XhrManager.prototype.send \x3d function(id, url, opt_method, opt_content, opt_headers, opt_priority, opt_callback, opt_maxRetries, opt_responseType, opt_withCredentials) {\n  const requests \x3d this.requests_;\n  if (requests.get(id)) {\n    throw new Error(goog.net.XhrManager.ERROR_ID_IN_USE_);\n  }\n  const request \x3d new goog.net.XhrManager.Request(url, goog.bind(this.handleEvent_, this, id), opt_method, opt_content, opt_headers, opt_callback, opt_maxRetries !\x3d\x3d undefined ? opt_maxRetries : this.maxRetries_, opt_responseType, opt_withCredentials !\x3d\x3d undefined ? opt_withCredentials : this.withCredentials_);\n  this.requests_.set(id, request);\n  const callback \x3d goog.bind(this.handleAvailableXhr_, this, id);\n  this.xhrPool_.getObject(callback, opt_priority);\n  return request;\n};\ngoog.net.XhrManager.prototype.abort \x3d function(id, opt_force) {\n  const request \x3d this.requests_.get(id);\n  if (request) {\n    const xhrIo \x3d request.xhrIo;\n    request.setAborted(true);\n    if (opt_force) {\n      if (xhrIo) {\n        this.removeXhrListener_(xhrIo, request.getXhrEventCallback());\n        goog.events.listenOnce(xhrIo, goog.net.EventType.READY, function() {\n          this.xhrPool_.releaseObject(xhrIo);\n        }, false, this);\n      }\n      this.requests_.remove(id);\n    }\n    if (xhrIo) {\n      xhrIo.abort();\n    }\n  }\n};\ngoog.net.XhrManager.prototype.handleAvailableXhr_ \x3d function(id, xhrIo) {\n  const request \x3d this.requests_.get(id);\n  if (request \x26\x26 !request.xhrIo) {\n    this.addXhrListener_(xhrIo, request.getXhrEventCallback());\n    xhrIo.setTimeoutInterval(this.timeoutInterval_);\n    xhrIo.setResponseType(request.getResponseType());\n    xhrIo.setWithCredentials(request.getWithCredentials());\n    request.xhrIo \x3d xhrIo;\n    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.READY, this, id, xhrIo));\n    this.retry_(id, xhrIo);\n    if (request.getAborted()) {\n      xhrIo.abort();\n    }\n  } else {\n    this.xhrPool_.releaseObject(xhrIo);\n  }\n};\ngoog.net.XhrManager.prototype.handleEvent_ \x3d function(id, e) {\n  const xhrIo \x3d e.target;\n  switch(e.type) {\n    case goog.net.EventType.READY:\n      this.retry_(id, xhrIo);\n      break;\n    case goog.net.EventType.COMPLETE:\n      return this.handleComplete_(id, xhrIo, e);\n    case goog.net.EventType.SUCCESS:\n      this.handleSuccess_(id, xhrIo);\n      break;\n    case goog.net.EventType.TIMEOUT:\n    case goog.net.EventType.ERROR:\n      this.handleError_(id, xhrIo);\n      break;\n    case goog.net.EventType.ABORT:\n      this.handleAbort_(id, xhrIo);\n      break;\n  }\n  return null;\n};\ngoog.net.XhrManager.prototype.retry_ \x3d function(id, xhrIo) {\n  const request \x3d this.requests_.get(id);\n  if (request \x26\x26 !request.getCompleted() \x26\x26 !request.hasReachedMaxRetries()) {\n    request.increaseAttemptCount();\n    xhrIo.send(request.getUrl(), request.getMethod(), request.getContent(), request.getHeaders());\n  } else {\n    if (request) {\n      this.removeXhrListener_(xhrIo, request.getXhrEventCallback());\n      this.requests_.remove(id);\n    }\n    this.xhrPool_.releaseObject(xhrIo);\n  }\n};\ngoog.net.XhrManager.prototype.handleComplete_ \x3d function(id, xhrIo, e) {\n  const request \x3d this.requests_.get(id);\n  if (xhrIo.getLastErrorCode() \x3d\x3d goog.net.ErrorCode.ABORT || xhrIo.isSuccess() || request.hasReachedMaxRetries()) {\n    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.COMPLETE, this, id, xhrIo));\n    if (request) {\n      request.setCompleted(true);\n      if (request.getCompleteCallback()) {\n        return request.getCompleteCallback().call(xhrIo, e);\n      }\n    }\n  }\n  return null;\n};\ngoog.net.XhrManager.prototype.handleAbort_ \x3d function(id, xhrIo) {\n  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ABORT, this, id, xhrIo));\n};\ngoog.net.XhrManager.prototype.handleSuccess_ \x3d function(id, xhrIo) {\n  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.SUCCESS, this, id, xhrIo));\n};\ngoog.net.XhrManager.prototype.handleError_ \x3d function(id, xhrIo) {\n  const request \x3d this.requests_.get(id);\n  if (request.hasReachedMaxRetries()) {\n    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ERROR, this, id, xhrIo));\n  }\n};\ngoog.net.XhrManager.prototype.removeXhrListener_ \x3d function(xhrIo, func, opt_types) {\n  const types \x3d opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;\n  this.eventHandler_.unlisten(xhrIo, types, func);\n};\ngoog.net.XhrManager.prototype.addXhrListener_ \x3d function(xhrIo, func, opt_types) {\n  const types \x3d opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;\n  this.eventHandler_.listen(xhrIo, types, func);\n};\ngoog.net.XhrManager.prototype.disposeInternal \x3d function() {\n  goog.net.XhrManager.superClass_.disposeInternal.call(this);\n  this.xhrPool_.dispose();\n  this.xhrPool_ \x3d null;\n  this.eventHandler_.dispose();\n  this.eventHandler_ \x3d null;\n  this.requests_.clear();\n  this.requests_ \x3d null;\n};\ngoog.net.XhrManager.Event \x3d function(type, target, id, xhrIo) {\n  goog.events.Event.call(this, type, target);\n  this.id \x3d id;\n  this.xhrIo \x3d xhrIo;\n};\ngoog.inherits(goog.net.XhrManager.Event, goog.events.Event);\ngoog.net.XhrManager.Request \x3d function(url, xhrEventCallback, opt_method, opt_content, opt_headers, opt_callback, opt_maxRetries, opt_responseType, opt_withCredentials) {\n  this.url_ \x3d url;\n  this.method_ \x3d opt_method || \x22GET\x22;\n  this.content_ \x3d opt_content;\n  this.headers_ \x3d opt_headers || null;\n  this.maxRetries_ \x3d opt_maxRetries !\x3d\x3d undefined ? opt_maxRetries : 1;\n  this.attemptCount_ \x3d 0;\n  this.completed_ \x3d false;\n  this.aborted_ \x3d false;\n  this.xhrEventCallback_ \x3d xhrEventCallback;\n  this.completeCallback_ \x3d opt_callback;\n  this.responseType_ \x3d opt_responseType || goog.net.XhrIo.ResponseType.DEFAULT;\n  this.withCredentials_ \x3d !!opt_withCredentials;\n  this.xhrIo \x3d null;\n};\ngoog.net.XhrManager.Request.prototype.getUrl \x3d function() {\n  return this.url_;\n};\ngoog.net.XhrManager.Request.prototype.getMethod \x3d function() {\n  return this.method_;\n};\ngoog.net.XhrManager.Request.prototype.getContent \x3d function() {\n  return this.content_;\n};\ngoog.net.XhrManager.Request.prototype.getHeaders \x3d function() {\n  return this.headers_;\n};\ngoog.net.XhrManager.Request.prototype.getWithCredentials \x3d function() {\n  return this.withCredentials_;\n};\ngoog.net.XhrManager.Request.prototype.getMaxRetries \x3d function() {\n  return this.maxRetries_;\n};\ngoog.net.XhrManager.Request.prototype.getAttemptCount \x3d function() {\n  return this.attemptCount_;\n};\ngoog.net.XhrManager.Request.prototype.increaseAttemptCount \x3d function() {\n  this.attemptCount_++;\n};\ngoog.net.XhrManager.Request.prototype.hasReachedMaxRetries \x3d function() {\n  return this.attemptCount_ \x3e this.maxRetries_;\n};\ngoog.net.XhrManager.Request.prototype.setCompleted \x3d function(complete) {\n  this.completed_ \x3d complete;\n};\ngoog.net.XhrManager.Request.prototype.getCompleted \x3d function() {\n  return this.completed_;\n};\ngoog.net.XhrManager.Request.prototype.setAborted \x3d function(aborted) {\n  this.aborted_ \x3d aborted;\n};\ngoog.net.XhrManager.Request.prototype.getAborted \x3d function() {\n  return this.aborted_;\n};\ngoog.net.XhrManager.Request.prototype.getXhrEventCallback \x3d function() {\n  return this.xhrEventCallback_;\n};\ngoog.net.XhrManager.Request.prototype.getCompleteCallback \x3d function() {\n  return this.completeCallback_;\n};\ngoog.net.XhrManager.Request.prototype.getResponseType \x3d function() {\n  return this.responseType_;\n};\n");
SHADOW_ENV.evalLoad("ajax.xhrio.js", true , "goog.provide(\x27ajax.xhrio\x27);\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxImpl$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxImpl$_js_ajax_request$arity$3 \x3d (function (this$,p__50591,handler){\nvar map__50593 \x3d p__50591;\nvar map__50593__$1 \x3d cljs.core.__destructure_map(map__50593);\nvar uri \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50593__$1,new cljs.core.Keyword(null,\x22uri\x22,\x22uri\x22,-774711847));\nvar method \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50593__$1,new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592));\nvar body \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50593__$1,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669));\nvar headers \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50593__$1,new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129));\nvar timeout \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__50593__$1,new cljs.core.Keyword(null,\x22timeout\x22,\x22timeout\x22,-318625318),(0));\nvar with_credentials \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__50593__$1,new cljs.core.Keyword(null,\x22with-credentials\x22,\x22with-credentials\x22,-1163127235),false);\nvar response_format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50593__$1,new cljs.core.Keyword(null,\x22response-format\x22,\x22response-format\x22,1664465322));\nvar progress_handler \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50593__$1,new cljs.core.Keyword(null,\x22progress-handler\x22,\x22progress-handler\x22,333585589));\nvar this$__$1 \x3d this;\nvar temp__5804__auto___50663 \x3d new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(response_format);\nif(cljs.core.truth_(temp__5804__auto___50663)){\nvar response_type_50664 \x3d temp__5804__auto___50663;\nthis$__$1.setResponseType(cljs.core.name(response_type_50664));\n} else {\n}\n\nif(cljs.core.fn_QMARK_(progress_handler)){\nvar G__50595_50665 \x3d this$__$1;\nG__50595_50665.setProgressEventsEnabled(true);\n\ngoog.events.listen(G__50595_50665,goog.net.EventType.UPLOAD_PROGRESS,progress_handler);\n\n} else {\n}\n\nvar G__50597 \x3d this$__$1;\ngoog.events.listen(G__50597,goog.net.EventType.COMPLETE,(function (p1__50588_SHARP_){\nvar G__50599 \x3d p1__50588_SHARP_.target;\nreturn (handler.cljs$core$IFn$_invoke$arity$1 ? handler.cljs$core$IFn$_invoke$arity$1(G__50599) : handler.call(null,G__50599));\n}));\n\nG__50597.setTimeoutInterval(timeout);\n\nG__50597.setWithCredentials(with_credentials);\n\nG__50597.send(uri,method,body,cljs.core.clj__GT_js(headers));\n\nreturn G__50597;\n}));\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxRequest$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxRequest$_abort$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn this$__$1.abort(goog.net.ErrorCode.ABORT);\n}));\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxResponse$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxResponse$_body$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn this$__$1.getResponse();\n}));\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxResponse$_status$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn this$__$1.getStatus();\n}));\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxResponse$_status_text$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn this$__$1.getStatusText();\n}));\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxResponse$_get_all_headers$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(this$__$1.getResponseHeaders());\n}));\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxResponse$_get_response_header$arity$2 \x3d (function (this$,header){\nvar this$__$1 \x3d this;\nreturn this$__$1.getResponseHeader(header);\n}));\n\n(goog.net.XhrIo.prototype.ajax$protocols$AjaxResponse$_was_aborted$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.getLastErrorCode(),goog.net.ErrorCode.ABORT);\n}));\n(goog.net.XhrManager.prototype.ajax$protocols$AjaxImpl$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(goog.net.XhrManager.prototype.ajax$protocols$AjaxImpl$_js_ajax_request$arity$3 \x3d (function (this$,p__50631,handler){\nvar map__50632 \x3d p__50631;\nvar map__50632__$1 \x3d cljs.core.__destructure_map(map__50632);\nvar uri \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50632__$1,new cljs.core.Keyword(null,\x22uri\x22,\x22uri\x22,-774711847));\nvar method \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50632__$1,new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592));\nvar body \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50632__$1,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669));\nvar headers \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50632__$1,new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129));\nvar id \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50632__$1,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092));\nvar timeout \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__50632__$1,new cljs.core.Keyword(null,\x22timeout\x22,\x22timeout\x22,-318625318),(0));\nvar priority \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50632__$1,new cljs.core.Keyword(null,\x22priority\x22,\x22priority\x22,1431093715));\nvar max_retries \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50632__$1,new cljs.core.Keyword(null,\x22max-retries\x22,\x22max-retries\x22,-1933762121));\nvar this$__$1 \x3d this;\nvar G__50633 \x3d this$__$1;\nG__50633.setTimeoutInterval(timeout);\n\nG__50633.send(id,uri,method,body,cljs.core.clj__GT_js(headers),priority,handler,max_retries);\n\nreturn G__50633;\n}));\n");
SHADOW_ENV.evalLoad("ajax.xml_http_request.js", true , "goog.provide(\x27ajax.xml_http_request\x27);\najax.xml_http_request.ready_state \x3d (function ajax$xml_http_request$ready_state(e){\nvar G__50590 \x3d e.target.readyState;\nvar fexpr__50589 \x3d new cljs.core.PersistentArrayMap(null, 5, [(0),new cljs.core.Keyword(null,\x22not-initialized\x22,\x22not-initialized\x22,-1937378906),(1),new cljs.core.Keyword(null,\x22connection-established\x22,\x22connection-established\x22,-1403749733),(2),new cljs.core.Keyword(null,\x22request-received\x22,\x22request-received\x22,2110590540),(3),new cljs.core.Keyword(null,\x22processing-request\x22,\x22processing-request\x22,-264947221),(4),new cljs.core.Keyword(null,\x22response-ready\x22,\x22response-ready\x22,245208276)], null);\nreturn (fexpr__50589.cljs$core$IFn$_invoke$arity$1 ? fexpr__50589.cljs$core$IFn$_invoke$arity$1(G__50590) : fexpr__50589.call(null,G__50590));\n});\najax.xml_http_request.append \x3d (function ajax$xml_http_request$append(current,next){\nif(cljs.core.truth_(current)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(current),\x22, \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(next)].join(\x27\x27);\n} else {\nreturn next;\n}\n});\najax.xml_http_request.process_headers \x3d (function ajax$xml_http_request$process_headers(header_str){\nif(cljs.core.truth_(header_str)){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (headers,header_line){\nif(cljs.core.truth_(goog.string.isEmptyOrWhitespace(header_line))){\nreturn headers;\n} else {\nvar key_value \x3d goog.string.splitLimit(header_line,\x22: \x22,(2));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(headers,(key_value[(0)]),ajax.xml_http_request.append,(key_value[(1)]));\n}\n}),cljs.core.PersistentArrayMap.EMPTY,header_str.split(\x22\\r\\n\x22));\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n});\najax.xml_http_request.xmlhttprequest \x3d (((typeof goog !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof goog.global !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof goog.global.XMLHttpRequest !\x3d\x3d \x27undefined\x27))?goog.global.XMLHttpRequest:(((typeof require !\x3d\x3d \x27undefined\x27))?(function (){var req \x3d require;\nreturn (req.cljs$core$IFn$_invoke$arity$1 ? req.cljs$core$IFn$_invoke$arity$1(\x22xmlhttprequest\x22) : req.call(null,\x22xmlhttprequest\x22)).XMLHttpRequest;\n})():null));\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxImpl$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxImpl$_js_ajax_request$arity$3 \x3d (function (this$,p__50604,handler){\nvar map__50605 \x3d p__50604;\nvar map__50605__$1 \x3d cljs.core.__destructure_map(map__50605);\nvar uri \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50605__$1,new cljs.core.Keyword(null,\x22uri\x22,\x22uri\x22,-774711847));\nvar method \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50605__$1,new cljs.core.Keyword(null,\x22method\x22,\x22method\x22,55703592));\nvar body \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50605__$1,new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669));\nvar headers \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50605__$1,new cljs.core.Keyword(null,\x22headers\x22,\x22headers\x22,-835030129));\nvar timeout \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__50605__$1,new cljs.core.Keyword(null,\x22timeout\x22,\x22timeout\x22,-318625318),(0));\nvar with_credentials \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__50605__$1,new cljs.core.Keyword(null,\x22with-credentials\x22,\x22with-credentials\x22,-1163127235),false);\nvar response_format \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__50605__$1,new cljs.core.Keyword(null,\x22response-format\x22,\x22response-format\x22,1664465322));\nvar this$__$1 \x3d this;\n(this$__$1.withCredentials \x3d with_credentials);\n\n(this$__$1.onreadystatechange \x3d (function (p1__50602_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22response-ready\x22,\x22response-ready\x22,245208276),ajax.xml_http_request.ready_state(p1__50602_SHARP_))){\nreturn (handler.cljs$core$IFn$_invoke$arity$1 ? handler.cljs$core$IFn$_invoke$arity$1(this$__$1) : handler.call(null,this$__$1));\n} else {\nreturn null;\n}\n}));\n\nthis$__$1.open(method,uri,true);\n\n(this$__$1.timeout \x3d timeout);\n\nvar temp__5804__auto___50634 \x3d new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(response_format);\nif(cljs.core.truth_(temp__5804__auto___50634)){\nvar response_type_50635 \x3d temp__5804__auto___50634;\n(this$__$1.responseType \x3d cljs.core.name(response_type_50635));\n} else {\n}\n\nvar seq__50606_50636 \x3d cljs.core.seq(headers);\nvar chunk__50607_50637 \x3d null;\nvar count__50608_50638 \x3d (0);\nvar i__50609_50639 \x3d (0);\nwhile(true){\nif((i__50609_50639 \x3c count__50608_50638)){\nvar vec__50618_50640 \x3d chunk__50607_50637.cljs$core$IIndexed$_nth$arity$2(null,i__50609_50639);\nvar k_50641 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50618_50640,(0),null);\nvar v_50642 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50618_50640,(1),null);\nthis$__$1.setRequestHeader(k_50641,v_50642);\n\n\nvar G__50643 \x3d seq__50606_50636;\nvar G__50644 \x3d chunk__50607_50637;\nvar G__50645 \x3d count__50608_50638;\nvar G__50646 \x3d (i__50609_50639 + (1));\nseq__50606_50636 \x3d G__50643;\nchunk__50607_50637 \x3d G__50644;\ncount__50608_50638 \x3d G__50645;\ni__50609_50639 \x3d G__50646;\ncontinue;\n} else {\nvar temp__5804__auto___50647 \x3d cljs.core.seq(seq__50606_50636);\nif(temp__5804__auto___50647){\nvar seq__50606_50648__$1 \x3d temp__5804__auto___50647;\nif(cljs.core.chunked_seq_QMARK_(seq__50606_50648__$1)){\nvar c__5568__auto___50649 \x3d cljs.core.chunk_first(seq__50606_50648__$1);\nvar G__50650 \x3d cljs.core.chunk_rest(seq__50606_50648__$1);\nvar G__50651 \x3d c__5568__auto___50649;\nvar G__50652 \x3d cljs.core.count(c__5568__auto___50649);\nvar G__50653 \x3d (0);\nseq__50606_50636 \x3d G__50650;\nchunk__50607_50637 \x3d G__50651;\ncount__50608_50638 \x3d G__50652;\ni__50609_50639 \x3d G__50653;\ncontinue;\n} else {\nvar vec__50621_50654 \x3d cljs.core.first(seq__50606_50648__$1);\nvar k_50655 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50621_50654,(0),null);\nvar v_50656 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__50621_50654,(1),null);\nthis$__$1.setRequestHeader(k_50655,v_50656);\n\n\nvar G__50658 \x3d cljs.core.next(seq__50606_50648__$1);\nvar G__50659 \x3d null;\nvar G__50660 \x3d (0);\nvar G__50661 \x3d (0);\nseq__50606_50636 \x3d G__50658;\nchunk__50607_50637 \x3d G__50659;\ncount__50608_50638 \x3d G__50660;\ni__50609_50639 \x3d G__50661;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nthis$__$1.send((function (){var or__5045__auto__ \x3d body;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22\x22;\n}\n})());\n\nreturn this$__$1;\n}));\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxRequest$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxRequest$_abort$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn this$__$1.abort();\n}));\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxResponse$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxResponse$_body$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn this$__$1.response;\n}));\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxResponse$_status$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn this$__$1.status;\n}));\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxResponse$_status_text$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn this$__$1.statusText;\n}));\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxResponse$_get_all_headers$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn ajax.xml_http_request.process_headers(this$__$1.getAllResponseHeaders());\n}));\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxResponse$_get_response_header$arity$2 \x3d (function (this$,header){\nvar this$__$1 \x3d this;\nreturn this$__$1.getResponseHeader(header);\n}));\n\n(ajax.xml_http_request.xmlhttprequest.prototype.ajax$protocols$AjaxResponse$_was_aborted$arity$1 \x3d (function (this$){\nvar this$__$1 \x3d this;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),this$__$1.readyState);\n}));\n");
SHADOW_ENV.evalLoad("ajax.core.js", true , "goog.provide(\x27ajax.core\x27);\najax.core.to_interceptor \x3d ajax.interceptors.to_interceptor;\n/**\n * Call this on the result of `ajax-request` to cancel the request.\n */\najax.core.abort \x3d (function ajax$core$abort(this$){\nreturn ajax.protocols._abort(this$);\n});\najax.core.json_request_format \x3d ajax.json.json_request_format;\najax.core.json_response_format \x3d ajax.json.json_response_format;\najax.core.transit_request_format \x3d ajax.transit.transit_request_format;\najax.core.transit_response_format \x3d ajax.transit.transit_response_format;\najax.core.ring_response_format \x3d ajax.ring.ring_response_format;\najax.core.url_request_format \x3d ajax.url.url_request_format;\najax.core.text_request_format \x3d ajax.formats.text_request_format;\najax.core.text_response_format \x3d ajax.formats.text_response_format;\najax.core.raw_response_format \x3d ajax.formats.raw_response_format;\najax.core.success_QMARK_ \x3d ajax.util.success_QMARK_;\najax.core.default_interceptors \x3d ajax.simple.default_interceptors;\najax.core.ajax_request \x3d ajax.simple.ajax_request;\najax.core.default_formats \x3d ajax.easy.default_formats;\najax.core.detect_response_format \x3d ajax.easy.detect_response_format;\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.GET \x3d (function ajax$core$GET(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50743 \x3d arguments.length;\nvar i__5770__auto___50745 \x3d (0);\nwhile(true){\nif((i__5770__auto___50745 \x3c len__5769__auto___50743)){\nargs__5775__auto__.push((arguments[i__5770__auto___50745]));\n\nvar G__50747 \x3d (i__5770__auto___50745 + (1));\ni__5770__auto___50745 \x3d G__50747;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.GET.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.GET.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22GET\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.GET.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.GET.cljs$lang$applyTo \x3d (function (seq50680){\nvar G__50681 \x3d cljs.core.first(seq50680);\nvar seq50680__$1 \x3d cljs.core.next(seq50680);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50681,seq50680__$1);\n}));\n\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.HEAD \x3d (function ajax$core$HEAD(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50750 \x3d arguments.length;\nvar i__5770__auto___50751 \x3d (0);\nwhile(true){\nif((i__5770__auto___50751 \x3c len__5769__auto___50750)){\nargs__5775__auto__.push((arguments[i__5770__auto___50751]));\n\nvar G__50752 \x3d (i__5770__auto___50751 + (1));\ni__5770__auto___50751 \x3d G__50752;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.HEAD.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.HEAD.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22HEAD\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.HEAD.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.HEAD.cljs$lang$applyTo \x3d (function (seq50682){\nvar G__50683 \x3d cljs.core.first(seq50682);\nvar seq50682__$1 \x3d cljs.core.next(seq50682);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50683,seq50682__$1);\n}));\n\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.POST \x3d (function ajax$core$POST(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50755 \x3d arguments.length;\nvar i__5770__auto___50756 \x3d (0);\nwhile(true){\nif((i__5770__auto___50756 \x3c len__5769__auto___50755)){\nargs__5775__auto__.push((arguments[i__5770__auto___50756]));\n\nvar G__50757 \x3d (i__5770__auto___50756 + (1));\ni__5770__auto___50756 \x3d G__50757;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.POST.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.POST.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22POST\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.POST.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.POST.cljs$lang$applyTo \x3d (function (seq50688){\nvar G__50689 \x3d cljs.core.first(seq50688);\nvar seq50688__$1 \x3d cljs.core.next(seq50688);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50689,seq50688__$1);\n}));\n\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.PUT \x3d (function ajax$core$PUT(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50759 \x3d arguments.length;\nvar i__5770__auto___50761 \x3d (0);\nwhile(true){\nif((i__5770__auto___50761 \x3c len__5769__auto___50759)){\nargs__5775__auto__.push((arguments[i__5770__auto___50761]));\n\nvar G__50762 \x3d (i__5770__auto___50761 + (1));\ni__5770__auto___50761 \x3d G__50762;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.PUT.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.PUT.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22PUT\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.PUT.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.PUT.cljs$lang$applyTo \x3d (function (seq50694){\nvar G__50695 \x3d cljs.core.first(seq50694);\nvar seq50694__$1 \x3d cljs.core.next(seq50694);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50695,seq50694__$1);\n}));\n\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.DELETE \x3d (function ajax$core$DELETE(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50765 \x3d arguments.length;\nvar i__5770__auto___50766 \x3d (0);\nwhile(true){\nif((i__5770__auto___50766 \x3c len__5769__auto___50765)){\nargs__5775__auto__.push((arguments[i__5770__auto___50766]));\n\nvar G__50768 \x3d (i__5770__auto___50766 + (1));\ni__5770__auto___50766 \x3d G__50768;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.DELETE.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.DELETE.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22DELETE\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.DELETE.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.DELETE.cljs$lang$applyTo \x3d (function (seq50699){\nvar G__50700 \x3d cljs.core.first(seq50699);\nvar seq50699__$1 \x3d cljs.core.next(seq50699);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50700,seq50699__$1);\n}));\n\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.OPTIONS \x3d (function ajax$core$OPTIONS(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50771 \x3d arguments.length;\nvar i__5770__auto___50772 \x3d (0);\nwhile(true){\nif((i__5770__auto___50772 \x3c len__5769__auto___50771)){\nargs__5775__auto__.push((arguments[i__5770__auto___50772]));\n\nvar G__50773 \x3d (i__5770__auto___50772 + (1));\ni__5770__auto___50772 \x3d G__50773;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.OPTIONS.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.OPTIONS.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22OPTIONS\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.OPTIONS.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.OPTIONS.cljs$lang$applyTo \x3d (function (seq50706){\nvar G__50707 \x3d cljs.core.first(seq50706);\nvar seq50706__$1 \x3d cljs.core.next(seq50706);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50707,seq50706__$1);\n}));\n\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.TRACE \x3d (function ajax$core$TRACE(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50776 \x3d arguments.length;\nvar i__5770__auto___50777 \x3d (0);\nwhile(true){\nif((i__5770__auto___50777 \x3c len__5769__auto___50776)){\nargs__5775__auto__.push((arguments[i__5770__auto___50777]));\n\nvar G__50779 \x3d (i__5770__auto___50777 + (1));\ni__5770__auto___50777 \x3d G__50779;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.TRACE.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.TRACE.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22TRACE\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.TRACE.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.TRACE.cljs$lang$applyTo \x3d (function (seq50715){\nvar G__50717 \x3d cljs.core.first(seq50715);\nvar seq50715__$1 \x3d cljs.core.next(seq50715);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50717,seq50715__$1);\n}));\n\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.PATCH \x3d (function ajax$core$PATCH(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50783 \x3d arguments.length;\nvar i__5770__auto___50784 \x3d (0);\nwhile(true){\nif((i__5770__auto___50784 \x3c len__5769__auto___50783)){\nargs__5775__auto__.push((arguments[i__5770__auto___50784]));\n\nvar G__50785 \x3d (i__5770__auto___50784 + (1));\ni__5770__auto___50784 \x3d G__50785;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.PATCH.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.PATCH.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22PATCH\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.PATCH.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.PATCH.cljs$lang$applyTo \x3d (function (seq50725){\nvar G__50726 \x3d cljs.core.first(seq50725);\nvar seq50725__$1 \x3d cljs.core.next(seq50725);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50726,seq50725__$1);\n}));\n\n/**\n * accepts the URI and an optional map of options, options include:\n *      :handler - the handler function for successful operation\n *                 should accept a single parameter which is the\n *                 deserialized response\n *      :progress-handler - the handler function for progress events.\n *                          this handler is only available when using the goog.net.XhrIo API\n *      :error-handler - the handler function for errors, should accept a\n *                       map with keys :status and :status-text\n *      :format - the format for the request\n *      :response-format - the format for the response\n *      :params - a map of parameters that will be sent with the request\n */\najax.core.PURGE \x3d (function ajax$core$PURGE(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___50786 \x3d arguments.length;\nvar i__5770__auto___50787 \x3d (0);\nwhile(true){\nif((i__5770__auto___50787 \x3c len__5769__auto___50786)){\nargs__5775__auto__.push((arguments[i__5770__auto___50787]));\n\nvar G__50788 \x3d (i__5770__auto___50787 + (1));\ni__5770__auto___50787 \x3d G__50788;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn ajax.core.PURGE.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(ajax.core.PURGE.cljs$core$IFn$_invoke$arity$variadic \x3d (function (uri,opts){\nvar f__50329__auto__ \x3d cljs.core.first(opts);\nreturn ajax.easy.easy_ajax_request(uri,\x22PURGE\x22,(((f__50329__auto__ instanceof cljs.core.Keyword))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts):f__50329__auto__));\n}));\n\n(ajax.core.PURGE.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(ajax.core.PURGE.cljs$lang$applyTo \x3d (function (seq50735){\nvar G__50736 \x3d cljs.core.first(seq50735);\nvar seq50735__$1 \x3d cljs.core.next(seq50735);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__50736,seq50735__$1);\n}));\n\n");
SHADOW_ENV.evalLoad("scittle.cljs_ajax.js", true , "goog.provide(\x27scittle.cljs_ajax\x27);\nscittle.cljs_ajax.ans \x3d sci.core.create_ns.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\x22ajax.core\x22,\x22ajax.core\x22,-1363316958,null),null);\nscittle.cljs_ajax.ajax_namespace \x3d sci.core._copy_ns(cljs.core.PersistentHashMap.fromArrays([cljs.core.with_meta(new cljs.core.Symbol(null,\x22POST\x22,\x22POST\x22,1750988384,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),new cljs.core.Symbol(null,\x22transit-response-format\x22,\x22transit-response-format\x22,462907130,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22OPTIONS\x22,\x22OPTIONS\x22,742094783,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),new cljs.core.Symbol(null,\x22text-request-format\x22,\x22text-request-format\x22,-1447006052,null),new cljs.core.Symbol(null,\x22default-formats\x22,\x22default-formats\x22,1427335370,null),new cljs.core.Symbol(null,\x22url-request-format\x22,\x22url-request-format\x22,-2082918152,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22DELETE\x22,\x22DELETE\x22,-965761997,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22PUT\x22,\x22PUT\x22,-201468416,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),new cljs.core.Symbol(null,\x22ajax-request\x22,\x22ajax-request\x22,-1248141866,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22HEAD\x22,\x22HEAD\x22,1903810169,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),new cljs.core.Symbol(null,\x22detect-response-format\x22,\x22detect-response-format\x22,1017515132,null),new cljs.core.Symbol(null,\x22transit-request-format\x22,\x22transit-request-format\x22,1046391906,null),new cljs.core.Symbol(null,\x22ring-response-format\x22,\x22ring-response-format\x22,-1088027719,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22GET\x22,\x22GET\x22,-917844743,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22TRACE\x22,\x22TRACE\x22,-64041414,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),new cljs.core.Symbol(null,\x22raw-response-format\x22,\x22raw-response-format\x22,502782404,null),new cljs.core.Symbol(null,\x22to-interceptor\x22,\x22to-interceptor\x22,708446535,null),new cljs.core.Symbol(null,\x22success?\x22,\x22success?\x22,1517677475,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22abort\x22,\x22abort\x22,-2133242571,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22this\x22,\x22this\x22,1028897902,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22Call this on the result of `ajax-request` to cancel the request.\x22], null)),new cljs.core.Symbol(null,\x22json-request-format\x22,\x22json-request-format\x22,1446516354,null),new cljs.core.Symbol(null,\x22default-interceptors\x22,\x22default-interceptors\x22,-893771721,null),new cljs.core.Symbol(null,\x22text-response-format\x22,\x22text-response-format\x22,1403741165,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22PATCH\x22,\x22PATCH\x22,-1233173284,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22PURGE\x22,\x22PURGE\x22,-89476959,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null))),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22,new cljs.core.Keyword(null,\x22top-fn\x22,\x22top-fn\x22,-2056129173),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22variadic?\x22,\x22variadic?\x22,584179762),true,new cljs.core.Keyword(null,\x22fixed-arity\x22,\x22fixed-arity\x22,1586445869),(1),new cljs.core.Keyword(null,\x22max-fixed-arity\x22,\x22max-fixed-arity\x22,-690205543),(1),new cljs.core.Keyword(null,\x22method-params\x22,\x22method-params\x22,-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null))], null),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22arglists-meta\x22,\x22arglists-meta\x22,1944829838),cljs.core.list(null)], null)], null)),new cljs.core.Symbol(null,\x22json-response-format\x22,\x22json-response-format\x22,692692627,null)],[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22POST\x22,\x22ajax.core/POST\x22,1572763855,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.POST,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22transit-response-format\x22,\x22ajax.core/transit-response-format\x22,1743973673,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.transit_response_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22OPTIONS\x22,\x22ajax.core/OPTIONS\x22,538242386,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.OPTIONS,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22text-request-format\x22,\x22ajax.core/text-request-format\x22,-1136916927,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.text_request_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22default-formats\x22,\x22ajax.core/default-formats\x22,1628437945,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.default_formats,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22url-request-format\x22,\x22ajax.core/url-request-format\x22,-1610761429,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.url_request_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22DELETE\x22,\x22ajax.core/DELETE\x22,-1115542810,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.DELETE,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22PUT\x22,\x22ajax.core/PUT\x22,117595477,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.PUT,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22ajax-request\x22,\x22ajax.core/ajax-request\x22,-913943903,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.ajax_request,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22HEAD\x22,\x22ajax.core/HEAD\x22,1834834092,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.HEAD,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22detect-response-format\x22,\x22ajax.core/detect-response-format\x22,1220704017,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.detect_response_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22transit-request-format\x22,\x22ajax.core/transit-request-format\x22,842152849,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.transit_request_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22ring-response-format\x22,\x22ajax.core/ring-response-format\x22,-1429501748,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.ring_response_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22GET\x22,\x22ajax.core/GET\x22,-580027892,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.GET,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22TRACE\x22,\x22ajax.core/TRACE\x22,-532528279,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.TRACE,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22raw-response-format\x22,\x22ajax.core/raw-response-format\x22,165303065,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.raw_response_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22to-interceptor\x22,\x22ajax.core/to-interceptor\x22,643728016,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.to_interceptor,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22success?\x22,\x22ajax.core/success?\x22,1435598544,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.success_QMARK_,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22abort\x22,\x22ajax.core/abort\x22,-1933719678,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.abort,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22this\x22,\x22this\x22,1028897902,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22Call this on the result of `ajax-request` to cancel the request.\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22json-request-format\x22,\x22ajax.core/json-request-format\x22,1516018481,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.json_request_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22default-interceptors\x22,\x22ajax.core/default-interceptors\x22,-559960448,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.default_interceptors,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22text-response-format\x22,\x22ajax.core/text-response-format\x22,1875705088,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.text_response_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22PATCH\x22,\x22ajax.core/PATCH\x22,-1168388223,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.PATCH,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22PURGE\x22,\x22ajax.core/PURGE\x22,-850838574,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.PURGE,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uri\x22,\x22uri\x22,865819680,null),new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null)], null)),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),\x22accepts the URI and an optional map of options, options include:\\n        :handler - the handler function for successful operation\\n                   should accept a single parameter which is the\\n                   deserialized response\\n        :progress-handler - the handler function for progress events.\\n                            this handler is only available when using the goog.net.XhrIo API\\n        :error-handler - the handler function for errors, should accept a\\n                         map with keys :status and :status-text\\n        :format - the format for the request\\n        :response-format - the format for the response\\n        :params - a map of parameters that will be sent with the request\x22], null)], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Symbol(\x22ajax.core\x22,\x22json-response-format\x22,\x22ajax.core/json-response-format\x22,358882374,null),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),ajax.core.json_response_format,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core.PersistentArrayMap.EMPTY], null)]),scittle.cljs_ajax.ans);\nscittle.core.register_plugin_BANG_(new cljs.core.Keyword(\x22scittle.cljs-ajax\x22,\x22ajax\x22,\x22scittle.cljs-ajax/ajax\x22,-1187750508),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22namespaces\x22,\x22namespaces\x22,-1444157469),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\x22ajax.core\x22,\x22ajax.core\x22,-1363316958,null),scittle.cljs_ajax.ajax_namespace], null)], null));\n");
SHADOW_ENV.evalLoad("shadow.module.scittle.cljs-ajax.append.js", false , "\nshadow.cljs.devtools.client.env.module_loaded(\x27scittle.cljs-ajax\x27);\n;\nSHADOW_ENV.setLoaded(\x22ajax.protocols.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.util.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.url.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.interceptors.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.json.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.transit.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.formats.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.ring.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.promise.thenable.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.async.freelist.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.async.workqueue.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.async.throwexception.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.async.run.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.promise.resolver.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.promise.promise.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.timer.timer.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.json.json.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.json.hybrid.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.log.log.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.errorcode.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.eventtype.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.httpstatus.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.xhrlike.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.xmlhttpfactory.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.wrapperxmlhttpfactory.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.xmlhttp.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.xhrio.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.simple.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.easy.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.structs.queue.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.structs.collection.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.structs.set.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.structs.pool.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.structs.node.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.structs.heap.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.structs.priorityqueue.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.structs.prioritypool.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.xhriopool.js\x22);\nSHADOW_ENV.setLoaded(\x22goog.net.xhrmanager.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.xhrio.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.xml_http_request.js\x22);\nSHADOW_ENV.setLoaded(\x22ajax.core.js\x22);\nSHADOW_ENV.setLoaded(\x22scittle.cljs_ajax.js\x22);\nSHADOW_ENV.setLoaded(\x22shadow.module.scittle.cljs-ajax.append.js\x22);");